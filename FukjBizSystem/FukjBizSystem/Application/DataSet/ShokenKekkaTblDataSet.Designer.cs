//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.18444
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjBizSystem.Application.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ShokenKekkaTblDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ShokenKekkaTblDataSet : global::System.Data.DataSet {
        
        private ShokenKekkaListDataTable tableShokenKekkaList;
        
        private ShokenKekkaListWithBitmaskDataTable tableShokenKekkaListWithBitmask;
        
        private ShokenKekkaTblDataTable tableShokenKekkaTbl;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaTblDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ShokenKekkaTblDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ShokenKekkaList"] != null)) {
                    base.Tables.Add(new ShokenKekkaListDataTable(ds.Tables["ShokenKekkaList"]));
                }
                if ((ds.Tables["ShokenKekkaListWithBitmask"] != null)) {
                    base.Tables.Add(new ShokenKekkaListWithBitmaskDataTable(ds.Tables["ShokenKekkaListWithBitmask"]));
                }
                if ((ds.Tables["ShokenKekkaTbl"] != null)) {
                    base.Tables.Add(new ShokenKekkaTblDataTable(ds.Tables["ShokenKekkaTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokenKekkaListDataTable ShokenKekkaList {
            get {
                return this.tableShokenKekkaList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokenKekkaListWithBitmaskDataTable ShokenKekkaListWithBitmask {
            get {
                return this.tableShokenKekkaListWithBitmask;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokenKekkaTblDataTable ShokenKekkaTbl {
            get {
                return this.tableShokenKekkaTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ShokenKekkaTblDataSet cln = ((ShokenKekkaTblDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ShokenKekkaList"] != null)) {
                    base.Tables.Add(new ShokenKekkaListDataTable(ds.Tables["ShokenKekkaList"]));
                }
                if ((ds.Tables["ShokenKekkaListWithBitmask"] != null)) {
                    base.Tables.Add(new ShokenKekkaListWithBitmaskDataTable(ds.Tables["ShokenKekkaListWithBitmask"]));
                }
                if ((ds.Tables["ShokenKekkaTbl"] != null)) {
                    base.Tables.Add(new ShokenKekkaTblDataTable(ds.Tables["ShokenKekkaTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableShokenKekkaList = ((ShokenKekkaListDataTable)(base.Tables["ShokenKekkaList"]));
            if ((initTable == true)) {
                if ((this.tableShokenKekkaList != null)) {
                    this.tableShokenKekkaList.InitVars();
                }
            }
            this.tableShokenKekkaListWithBitmask = ((ShokenKekkaListWithBitmaskDataTable)(base.Tables["ShokenKekkaListWithBitmask"]));
            if ((initTable == true)) {
                if ((this.tableShokenKekkaListWithBitmask != null)) {
                    this.tableShokenKekkaListWithBitmask.InitVars();
                }
            }
            this.tableShokenKekkaTbl = ((ShokenKekkaTblDataTable)(base.Tables["ShokenKekkaTbl"]));
            if ((initTable == true)) {
                if ((this.tableShokenKekkaTbl != null)) {
                    this.tableShokenKekkaTbl.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ShokenKekkaTblDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ShokenKekkaTblDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableShokenKekkaList = new ShokenKekkaListDataTable();
            base.Tables.Add(this.tableShokenKekkaList);
            this.tableShokenKekkaListWithBitmask = new ShokenKekkaListWithBitmaskDataTable();
            base.Tables.Add(this.tableShokenKekkaListWithBitmask);
            this.tableShokenKekkaTbl = new ShokenKekkaTblDataTable();
            base.Tables.Add(this.tableShokenKekkaTbl);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokenKekkaList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokenKekkaListWithBitmask() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokenKekkaTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokenKekkaListRowChangeEventHandler(object sender, ShokenKekkaListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokenKekkaListWithBitmaskRowChangeEventHandler(object sender, ShokenKekkaListWithBitmaskRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokenKekkaTblRowChangeEventHandler(object sender, ShokenKekkaTblRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokenKekkaListDataTable : global::System.Data.TypedTableBase<ShokenKekkaListRow> {
            
            private global::System.Data.DataColumn columnKensaIraiShokanIraiHoteiKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiHokenjoCd;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiNendo;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenRenban;
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenHyojiichi;
            
            private global::System.Data.DataColumn columnShokenTegaki;
            
            private global::System.Data.DataColumn columnShokenCheckKomoku;
            
            private global::System.Data.DataColumn columnShokenCheckHantei;
            
            private global::System.Data.DataColumn columnShokenShitekiKashoNo;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnShokenWd;
            
            private global::System.Data.DataColumn columnShokenSetchishaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenSeisoGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenKojiGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenMakerRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHokenjoRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuKeiyakuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenTenkenKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenSeisouKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnTaniSochiNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListDataTable() {
                this.TableName = "ShokenKekkaList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokenKekkaListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokanIraiHoteiKbnColumn {
                get {
                    return this.columnKensaIraiShokanIraiHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiHokenjoCdColumn {
                get {
                    return this.columnKensaIraiShokenIraiHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiNendoColumn {
                get {
                    return this.columnKensaIraiShokenIraiNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiRenbanColumn {
                get {
                    return this.columnKensaIraiShokenIraiRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenRenbanColumn {
                get {
                    return this.columnKensaIraiShokenRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyojiichiColumn {
                get {
                    return this.columnShokenHyojiichi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTegakiColumn {
                get {
                    return this.columnShokenTegaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckKomokuColumn {
                get {
                    return this.columnShokenCheckKomoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckHanteiColumn {
                get {
                    return this.columnShokenCheckHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenShitekiKashoNoColumn {
                get {
                    return this.columnShokenShitekiKashoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenWdColumn {
                get {
                    return this.columnShokenWd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaRenrakuFlgColumn {
                get {
                    return this.columnShokenSetchishaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenHoshuGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisoGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenSeisoGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKojiGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenKojiGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerRenrakuFlgColumn {
                get {
                    return this.columnShokenMakerRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHokenjoRenrakuFlgColumn {
                get {
                    return this.columnShokenHokenjoRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuKeiyakuKakuninFlgColumn {
                get {
                    return this.columnShokenHoshuKeiyakuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTenkenKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenTenkenKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenSeisouKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaniSochiNmColumn {
                get {
                    return this.columnTaniSochiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow this[int index] {
                get {
                    return ((ShokenKekkaListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokenKekkaListRow(ShokenKekkaListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow AddShokenKekkaListRow(
                        string KensaIraiShokanIraiHoteiKbn, 
                        string KensaIraiShokenIraiHokenjoCd, 
                        string KensaIraiShokenIraiNendo, 
                        string KensaIraiShokenIraiRenban, 
                        string KensaIraiShokenRenban, 
                        string ShokenKbn, 
                        string ShokenCd, 
                        int ShokenHyojiichi, 
                        string ShokenTegaki, 
                        string ShokenCheckKomoku, 
                        string ShokenCheckHantei, 
                        string ShokenShitekiKashoNo, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        string ShokenWd, 
                        string ShokenSetchishaRenrakuFlg, 
                        string ShokenHoshuGyoshaRenrakuFlg, 
                        string ShokenSeisoGyoshaRenrakuFlg, 
                        string ShokenKojiGyoshaRenrakuFlg, 
                        string ShokenMakerRenrakuFlg, 
                        string ShokenHokenjoRenrakuFlg, 
                        string ShokenHoshuKeiyakuKakuninFlg, 
                        string ShokenTenkenKaisuuKakuninFlg, 
                        string ShokenSeisouKaisuuKakuninFlg, 
                        string TaniSochiNm) {
                ShokenKekkaListRow rowShokenKekkaListRow = ((ShokenKekkaListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KensaIraiShokanIraiHoteiKbn,
                        KensaIraiShokenIraiHokenjoCd,
                        KensaIraiShokenIraiNendo,
                        KensaIraiShokenIraiRenban,
                        KensaIraiShokenRenban,
                        ShokenKbn,
                        ShokenCd,
                        ShokenHyojiichi,
                        ShokenTegaki,
                        ShokenCheckKomoku,
                        ShokenCheckHantei,
                        ShokenShitekiKashoNo,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ShokenWd,
                        ShokenSetchishaRenrakuFlg,
                        ShokenHoshuGyoshaRenrakuFlg,
                        ShokenSeisoGyoshaRenrakuFlg,
                        ShokenKojiGyoshaRenrakuFlg,
                        ShokenMakerRenrakuFlg,
                        ShokenHokenjoRenrakuFlg,
                        ShokenHoshuKeiyakuKakuninFlg,
                        ShokenTenkenKaisuuKakuninFlg,
                        ShokenSeisouKaisuuKakuninFlg,
                        TaniSochiNm};
                rowShokenKekkaListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokenKekkaListRow);
                return rowShokenKekkaListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow FindByKensaIraiShokanIraiHoteiKbnKensaIraiShokenIraiHokenjoCdKensaIraiShokenIraiNendoKensaIraiShokenIraiRenbanKensaIraiShokenRenban(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, string KensaIraiShokenRenban) {
                return ((ShokenKekkaListRow)(this.Rows.Find(new object[] {
                            KensaIraiShokanIraiHoteiKbn,
                            KensaIraiShokenIraiHokenjoCd,
                            KensaIraiShokenIraiNendo,
                            KensaIraiShokenIraiRenban,
                            KensaIraiShokenRenban})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokenKekkaListDataTable cln = ((ShokenKekkaListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokenKekkaListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKensaIraiShokanIraiHoteiKbn = base.Columns["KensaIraiShokanIraiHoteiKbn"];
                this.columnKensaIraiShokenIraiHokenjoCd = base.Columns["KensaIraiShokenIraiHokenjoCd"];
                this.columnKensaIraiShokenIraiNendo = base.Columns["KensaIraiShokenIraiNendo"];
                this.columnKensaIraiShokenIraiRenban = base.Columns["KensaIraiShokenIraiRenban"];
                this.columnKensaIraiShokenRenban = base.Columns["KensaIraiShokenRenban"];
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenHyojiichi = base.Columns["ShokenHyojiichi"];
                this.columnShokenTegaki = base.Columns["ShokenTegaki"];
                this.columnShokenCheckKomoku = base.Columns["ShokenCheckKomoku"];
                this.columnShokenCheckHantei = base.Columns["ShokenCheckHantei"];
                this.columnShokenShitekiKashoNo = base.Columns["ShokenShitekiKashoNo"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnShokenWd = base.Columns["ShokenWd"];
                this.columnShokenSetchishaRenrakuFlg = base.Columns["ShokenSetchishaRenrakuFlg"];
                this.columnShokenHoshuGyoshaRenrakuFlg = base.Columns["ShokenHoshuGyoshaRenrakuFlg"];
                this.columnShokenSeisoGyoshaRenrakuFlg = base.Columns["ShokenSeisoGyoshaRenrakuFlg"];
                this.columnShokenKojiGyoshaRenrakuFlg = base.Columns["ShokenKojiGyoshaRenrakuFlg"];
                this.columnShokenMakerRenrakuFlg = base.Columns["ShokenMakerRenrakuFlg"];
                this.columnShokenHokenjoRenrakuFlg = base.Columns["ShokenHokenjoRenrakuFlg"];
                this.columnShokenHoshuKeiyakuKakuninFlg = base.Columns["ShokenHoshuKeiyakuKakuninFlg"];
                this.columnShokenTenkenKaisuuKakuninFlg = base.Columns["ShokenTenkenKaisuuKakuninFlg"];
                this.columnShokenSeisouKaisuuKakuninFlg = base.Columns["ShokenSeisouKaisuuKakuninFlg"];
                this.columnTaniSochiNm = base.Columns["TaniSochiNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKensaIraiShokanIraiHoteiKbn = new global::System.Data.DataColumn("KensaIraiShokanIraiHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokanIraiHoteiKbn);
                this.columnKensaIraiShokenIraiHokenjoCd = new global::System.Data.DataColumn("KensaIraiShokenIraiHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiHokenjoCd);
                this.columnKensaIraiShokenIraiNendo = new global::System.Data.DataColumn("KensaIraiShokenIraiNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiNendo);
                this.columnKensaIraiShokenIraiRenban = new global::System.Data.DataColumn("KensaIraiShokenIraiRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiRenban);
                this.columnKensaIraiShokenRenban = new global::System.Data.DataColumn("KensaIraiShokenRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenRenban);
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenHyojiichi = new global::System.Data.DataColumn("ShokenHyojiichi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyojiichi);
                this.columnShokenTegaki = new global::System.Data.DataColumn("ShokenTegaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTegaki);
                this.columnShokenCheckKomoku = new global::System.Data.DataColumn("ShokenCheckKomoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckKomoku);
                this.columnShokenCheckHantei = new global::System.Data.DataColumn("ShokenCheckHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckHantei);
                this.columnShokenShitekiKashoNo = new global::System.Data.DataColumn("ShokenShitekiKashoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenShitekiKashoNo);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnShokenWd = new global::System.Data.DataColumn("ShokenWd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenWd);
                this.columnShokenSetchishaRenrakuFlg = new global::System.Data.DataColumn("ShokenSetchishaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaRenrakuFlg);
                this.columnShokenHoshuGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenHoshuGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGyoshaRenrakuFlg);
                this.columnShokenSeisoGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenSeisoGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisoGyoshaRenrakuFlg);
                this.columnShokenKojiGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenKojiGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKojiGyoshaRenrakuFlg);
                this.columnShokenMakerRenrakuFlg = new global::System.Data.DataColumn("ShokenMakerRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerRenrakuFlg);
                this.columnShokenHokenjoRenrakuFlg = new global::System.Data.DataColumn("ShokenHokenjoRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHokenjoRenrakuFlg);
                this.columnShokenHoshuKeiyakuKakuninFlg = new global::System.Data.DataColumn("ShokenHoshuKeiyakuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuKeiyakuKakuninFlg);
                this.columnShokenTenkenKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenTenkenKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTenkenKaisuuKakuninFlg);
                this.columnShokenSeisouKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenSeisouKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouKaisuuKakuninFlg);
                this.columnTaniSochiNm = new global::System.Data.DataColumn("TaniSochiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaniSochiNm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKensaIraiShokanIraiHoteiKbn,
                                this.columnKensaIraiShokenIraiHokenjoCd,
                                this.columnKensaIraiShokenIraiNendo,
                                this.columnKensaIraiShokenIraiRenban,
                                this.columnKensaIraiShokenRenban}, true));
                this.columnKensaIraiShokanIraiHoteiKbn.AllowDBNull = false;
                this.columnKensaIraiShokanIraiHoteiKbn.MaxLength = 1;
                this.columnKensaIraiShokenIraiHokenjoCd.AllowDBNull = false;
                this.columnKensaIraiShokenIraiHokenjoCd.MaxLength = 2;
                this.columnKensaIraiShokenIraiNendo.AllowDBNull = false;
                this.columnKensaIraiShokenIraiNendo.MaxLength = 4;
                this.columnKensaIraiShokenIraiRenban.AllowDBNull = false;
                this.columnKensaIraiShokenIraiRenban.MaxLength = 6;
                this.columnKensaIraiShokenRenban.AllowDBNull = false;
                this.columnKensaIraiShokenRenban.MaxLength = 2;
                this.columnShokenKbn.AllowDBNull = false;
                this.columnShokenKbn.MaxLength = 3;
                this.columnShokenCd.AllowDBNull = false;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenTegaki.MaxLength = 160;
                this.columnShokenCheckKomoku.MaxLength = 3;
                this.columnShokenCheckHantei.MaxLength = 1;
                this.columnShokenShitekiKashoNo.MaxLength = 2;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnShokenWd.MaxLength = 160;
                this.columnShokenSetchishaRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenSeisoGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenKojiGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenMakerRenrakuFlg.MaxLength = 1;
                this.columnShokenHokenjoRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuKeiyakuKakuninFlg.MaxLength = 1;
                this.columnShokenTenkenKaisuuKakuninFlg.MaxLength = 1;
                this.columnShokenSeisouKaisuuKakuninFlg.MaxLength = 1;
                this.columnTaniSochiNm.MaxLength = 60;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow NewShokenKekkaListRow() {
                return ((ShokenKekkaListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokenKekkaListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokenKekkaListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokenKekkaListRowChanged != null)) {
                    this.ShokenKekkaListRowChanged(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokenKekkaListRowChanging != null)) {
                    this.ShokenKekkaListRowChanging(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokenKekkaListRowDeleted != null)) {
                    this.ShokenKekkaListRowDeleted(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokenKekkaListRowDeleting != null)) {
                    this.ShokenKekkaListRowDeleting(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokenKekkaListRow(ShokenKekkaListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokenKekkaListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokenKekkaListWithBitmaskDataTable : global::System.Data.TypedTableBase<ShokenKekkaListWithBitmaskRow> {
            
            private global::System.Data.DataColumn columnShokenHosokuKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokanIraiHoteiKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiHokenjoCd;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiNendo;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenHosokuRenban;
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenHyojiichi;
            
            private global::System.Data.DataColumn columnShokenTegaki;
            
            private global::System.Data.DataColumn columnShokenCheckKomoku;
            
            private global::System.Data.DataColumn columnShokenCheckHantei;
            
            private global::System.Data.DataColumn columnShokenShitekiKashoNo;
            
            private global::System.Data.DataColumn columnShokenSetchishaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenSeisoGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenKojiGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenMakerRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHokenjoRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuKeiyakuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenTenkenKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenSeisouKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnShokenTaishoKensaBitMask;
            
            private global::System.Data.DataColumn columnTaniSochiNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListWithBitmaskDataTable() {
                this.TableName = "ShokenKekkaListWithBitmask";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaListWithBitmaskDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokenKekkaListWithBitmaskDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHosokuKbnColumn {
                get {
                    return this.columnShokenHosokuKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokanIraiHoteiKbnColumn {
                get {
                    return this.columnKensaIraiShokanIraiHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiHokenjoCdColumn {
                get {
                    return this.columnKensaIraiShokenIraiHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiNendoColumn {
                get {
                    return this.columnKensaIraiShokenIraiNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiRenbanColumn {
                get {
                    return this.columnKensaIraiShokenIraiRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenRenbanColumn {
                get {
                    return this.columnKensaIraiShokenRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenHosokuRenbanColumn {
                get {
                    return this.columnKensaIraiShokenHosokuRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyojiichiColumn {
                get {
                    return this.columnShokenHyojiichi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTegakiColumn {
                get {
                    return this.columnShokenTegaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckKomokuColumn {
                get {
                    return this.columnShokenCheckKomoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckHanteiColumn {
                get {
                    return this.columnShokenCheckHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenShitekiKashoNoColumn {
                get {
                    return this.columnShokenShitekiKashoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaRenrakuFlgColumn {
                get {
                    return this.columnShokenSetchishaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenHoshuGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisoGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenSeisoGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKojiGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenKojiGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerRenrakuFlgColumn {
                get {
                    return this.columnShokenMakerRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHokenjoRenrakuFlgColumn {
                get {
                    return this.columnShokenHokenjoRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuKeiyakuKakuninFlgColumn {
                get {
                    return this.columnShokenHoshuKeiyakuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTenkenKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenTenkenKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenSeisouKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTaishoKensaBitMaskColumn {
                get {
                    return this.columnShokenTaishoKensaBitMask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaniSochiNmColumn {
                get {
                    return this.columnTaniSochiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListWithBitmaskRow this[int index] {
                get {
                    return ((ShokenKekkaListWithBitmaskRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListWithBitmaskRowChangeEventHandler ShokenKekkaListWithBitmaskRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListWithBitmaskRowChangeEventHandler ShokenKekkaListWithBitmaskRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListWithBitmaskRowChangeEventHandler ShokenKekkaListWithBitmaskRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListWithBitmaskRowChangeEventHandler ShokenKekkaListWithBitmaskRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokenKekkaListWithBitmaskRow(ShokenKekkaListWithBitmaskRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListWithBitmaskRow AddShokenKekkaListWithBitmaskRow(
                        string ShokenHosokuKbn, 
                        string KensaIraiShokanIraiHoteiKbn, 
                        string KensaIraiShokenIraiHokenjoCd, 
                        string KensaIraiShokenIraiNendo, 
                        string KensaIraiShokenIraiRenban, 
                        string KensaIraiShokenRenban, 
                        string KensaIraiShokenHosokuRenban, 
                        string ShokenKbn, 
                        string ShokenCd, 
                        int ShokenHyojiichi, 
                        string ShokenTegaki, 
                        string ShokenCheckKomoku, 
                        string ShokenCheckHantei, 
                        string ShokenShitekiKashoNo, 
                        string ShokenSetchishaRenrakuFlg, 
                        string ShokenHoshuGyoshaRenrakuFlg, 
                        string ShokenSeisoGyoshaRenrakuFlg, 
                        string ShokenKojiGyoshaRenrakuFlg, 
                        string ShokenMakerRenrakuFlg, 
                        string ShokenHokenjoRenrakuFlg, 
                        string ShokenHoshuKeiyakuKakuninFlg, 
                        string ShokenTenkenKaisuuKakuninFlg, 
                        string ShokenSeisouKaisuuKakuninFlg, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        int ShokenTaishoKensaBitMask, 
                        string TaniSochiNm) {
                ShokenKekkaListWithBitmaskRow rowShokenKekkaListWithBitmaskRow = ((ShokenKekkaListWithBitmaskRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShokenHosokuKbn,
                        KensaIraiShokanIraiHoteiKbn,
                        KensaIraiShokenIraiHokenjoCd,
                        KensaIraiShokenIraiNendo,
                        KensaIraiShokenIraiRenban,
                        KensaIraiShokenRenban,
                        KensaIraiShokenHosokuRenban,
                        ShokenKbn,
                        ShokenCd,
                        ShokenHyojiichi,
                        ShokenTegaki,
                        ShokenCheckKomoku,
                        ShokenCheckHantei,
                        ShokenShitekiKashoNo,
                        ShokenSetchishaRenrakuFlg,
                        ShokenHoshuGyoshaRenrakuFlg,
                        ShokenSeisoGyoshaRenrakuFlg,
                        ShokenKojiGyoshaRenrakuFlg,
                        ShokenMakerRenrakuFlg,
                        ShokenHokenjoRenrakuFlg,
                        ShokenHoshuKeiyakuKakuninFlg,
                        ShokenTenkenKaisuuKakuninFlg,
                        ShokenSeisouKaisuuKakuninFlg,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ShokenTaishoKensaBitMask,
                        TaniSochiNm};
                rowShokenKekkaListWithBitmaskRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokenKekkaListWithBitmaskRow);
                return rowShokenKekkaListWithBitmaskRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokenKekkaListWithBitmaskDataTable cln = ((ShokenKekkaListWithBitmaskDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokenKekkaListWithBitmaskDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShokenHosokuKbn = base.Columns["ShokenHosokuKbn"];
                this.columnKensaIraiShokanIraiHoteiKbn = base.Columns["KensaIraiShokanIraiHoteiKbn"];
                this.columnKensaIraiShokenIraiHokenjoCd = base.Columns["KensaIraiShokenIraiHokenjoCd"];
                this.columnKensaIraiShokenIraiNendo = base.Columns["KensaIraiShokenIraiNendo"];
                this.columnKensaIraiShokenIraiRenban = base.Columns["KensaIraiShokenIraiRenban"];
                this.columnKensaIraiShokenRenban = base.Columns["KensaIraiShokenRenban"];
                this.columnKensaIraiShokenHosokuRenban = base.Columns["KensaIraiShokenHosokuRenban"];
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenHyojiichi = base.Columns["ShokenHyojiichi"];
                this.columnShokenTegaki = base.Columns["ShokenTegaki"];
                this.columnShokenCheckKomoku = base.Columns["ShokenCheckKomoku"];
                this.columnShokenCheckHantei = base.Columns["ShokenCheckHantei"];
                this.columnShokenShitekiKashoNo = base.Columns["ShokenShitekiKashoNo"];
                this.columnShokenSetchishaRenrakuFlg = base.Columns["ShokenSetchishaRenrakuFlg"];
                this.columnShokenHoshuGyoshaRenrakuFlg = base.Columns["ShokenHoshuGyoshaRenrakuFlg"];
                this.columnShokenSeisoGyoshaRenrakuFlg = base.Columns["ShokenSeisoGyoshaRenrakuFlg"];
                this.columnShokenKojiGyoshaRenrakuFlg = base.Columns["ShokenKojiGyoshaRenrakuFlg"];
                this.columnShokenMakerRenrakuFlg = base.Columns["ShokenMakerRenrakuFlg"];
                this.columnShokenHokenjoRenrakuFlg = base.Columns["ShokenHokenjoRenrakuFlg"];
                this.columnShokenHoshuKeiyakuKakuninFlg = base.Columns["ShokenHoshuKeiyakuKakuninFlg"];
                this.columnShokenTenkenKaisuuKakuninFlg = base.Columns["ShokenTenkenKaisuuKakuninFlg"];
                this.columnShokenSeisouKaisuuKakuninFlg = base.Columns["ShokenSeisouKaisuuKakuninFlg"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnShokenTaishoKensaBitMask = base.Columns["ShokenTaishoKensaBitMask"];
                this.columnTaniSochiNm = base.Columns["TaniSochiNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShokenHosokuKbn = new global::System.Data.DataColumn("ShokenHosokuKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHosokuKbn);
                this.columnKensaIraiShokanIraiHoteiKbn = new global::System.Data.DataColumn("KensaIraiShokanIraiHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokanIraiHoteiKbn);
                this.columnKensaIraiShokenIraiHokenjoCd = new global::System.Data.DataColumn("KensaIraiShokenIraiHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiHokenjoCd);
                this.columnKensaIraiShokenIraiNendo = new global::System.Data.DataColumn("KensaIraiShokenIraiNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiNendo);
                this.columnKensaIraiShokenIraiRenban = new global::System.Data.DataColumn("KensaIraiShokenIraiRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiRenban);
                this.columnKensaIraiShokenRenban = new global::System.Data.DataColumn("KensaIraiShokenRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenRenban);
                this.columnKensaIraiShokenHosokuRenban = new global::System.Data.DataColumn("KensaIraiShokenHosokuRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenHosokuRenban);
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenHyojiichi = new global::System.Data.DataColumn("ShokenHyojiichi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyojiichi);
                this.columnShokenTegaki = new global::System.Data.DataColumn("ShokenTegaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTegaki);
                this.columnShokenCheckKomoku = new global::System.Data.DataColumn("ShokenCheckKomoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckKomoku);
                this.columnShokenCheckHantei = new global::System.Data.DataColumn("ShokenCheckHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckHantei);
                this.columnShokenShitekiKashoNo = new global::System.Data.DataColumn("ShokenShitekiKashoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenShitekiKashoNo);
                this.columnShokenSetchishaRenrakuFlg = new global::System.Data.DataColumn("ShokenSetchishaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaRenrakuFlg);
                this.columnShokenHoshuGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenHoshuGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGyoshaRenrakuFlg);
                this.columnShokenSeisoGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenSeisoGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisoGyoshaRenrakuFlg);
                this.columnShokenKojiGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenKojiGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKojiGyoshaRenrakuFlg);
                this.columnShokenMakerRenrakuFlg = new global::System.Data.DataColumn("ShokenMakerRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerRenrakuFlg);
                this.columnShokenHokenjoRenrakuFlg = new global::System.Data.DataColumn("ShokenHokenjoRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHokenjoRenrakuFlg);
                this.columnShokenHoshuKeiyakuKakuninFlg = new global::System.Data.DataColumn("ShokenHoshuKeiyakuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuKeiyakuKakuninFlg);
                this.columnShokenTenkenKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenTenkenKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTenkenKaisuuKakuninFlg);
                this.columnShokenSeisouKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenSeisouKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouKaisuuKakuninFlg);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnShokenTaishoKensaBitMask = new global::System.Data.DataColumn("ShokenTaishoKensaBitMask", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTaishoKensaBitMask);
                this.columnTaniSochiNm = new global::System.Data.DataColumn("TaniSochiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaniSochiNm);
                this.columnShokenHosokuKbn.ReadOnly = true;
                this.columnShokenHosokuKbn.MaxLength = 1;
                this.columnKensaIraiShokanIraiHoteiKbn.ReadOnly = true;
                this.columnKensaIraiShokanIraiHoteiKbn.MaxLength = 1;
                this.columnKensaIraiShokenIraiHokenjoCd.ReadOnly = true;
                this.columnKensaIraiShokenIraiHokenjoCd.MaxLength = 2;
                this.columnKensaIraiShokenIraiNendo.ReadOnly = true;
                this.columnKensaIraiShokenIraiNendo.MaxLength = 4;
                this.columnKensaIraiShokenIraiRenban.ReadOnly = true;
                this.columnKensaIraiShokenIraiRenban.MaxLength = 6;
                this.columnKensaIraiShokenRenban.ReadOnly = true;
                this.columnKensaIraiShokenRenban.MaxLength = 2;
                this.columnKensaIraiShokenHosokuRenban.ReadOnly = true;
                this.columnKensaIraiShokenHosokuRenban.MaxLength = 2;
                this.columnShokenKbn.ReadOnly = true;
                this.columnShokenKbn.MaxLength = 3;
                this.columnShokenCd.ReadOnly = true;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenHyojiichi.ReadOnly = true;
                this.columnShokenTegaki.ReadOnly = true;
                this.columnShokenTegaki.MaxLength = 160;
                this.columnShokenCheckKomoku.ReadOnly = true;
                this.columnShokenCheckKomoku.MaxLength = 3;
                this.columnShokenCheckHantei.ReadOnly = true;
                this.columnShokenCheckHantei.MaxLength = 1;
                this.columnShokenShitekiKashoNo.ReadOnly = true;
                this.columnShokenShitekiKashoNo.MaxLength = 2;
                this.columnShokenSetchishaRenrakuFlg.ReadOnly = true;
                this.columnShokenSetchishaRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenHoshuGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenSeisoGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenSeisoGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenKojiGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenKojiGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenMakerRenrakuFlg.ReadOnly = true;
                this.columnShokenMakerRenrakuFlg.MaxLength = 1;
                this.columnShokenHokenjoRenrakuFlg.ReadOnly = true;
                this.columnShokenHokenjoRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuKeiyakuKakuninFlg.ReadOnly = true;
                this.columnShokenHoshuKeiyakuKakuninFlg.MaxLength = 1;
                this.columnShokenTenkenKaisuuKakuninFlg.ReadOnly = true;
                this.columnShokenTenkenKaisuuKakuninFlg.MaxLength = 1;
                this.columnShokenSeisouKaisuuKakuninFlg.ReadOnly = true;
                this.columnShokenSeisouKaisuuKakuninFlg.MaxLength = 1;
                this.columnInsertDt.ReadOnly = true;
                this.columnInsertUser.ReadOnly = true;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.ReadOnly = true;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.ReadOnly = true;
                this.columnUpdateUser.ReadOnly = true;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.ReadOnly = true;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnShokenTaishoKensaBitMask.AllowDBNull = false;
                this.columnTaniSochiNm.ReadOnly = true;
                this.columnTaniSochiNm.MaxLength = 60;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListWithBitmaskRow NewShokenKekkaListWithBitmaskRow() {
                return ((ShokenKekkaListWithBitmaskRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokenKekkaListWithBitmaskRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokenKekkaListWithBitmaskRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokenKekkaListWithBitmaskRowChanged != null)) {
                    this.ShokenKekkaListWithBitmaskRowChanged(this, new ShokenKekkaListWithBitmaskRowChangeEvent(((ShokenKekkaListWithBitmaskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokenKekkaListWithBitmaskRowChanging != null)) {
                    this.ShokenKekkaListWithBitmaskRowChanging(this, new ShokenKekkaListWithBitmaskRowChangeEvent(((ShokenKekkaListWithBitmaskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokenKekkaListWithBitmaskRowDeleted != null)) {
                    this.ShokenKekkaListWithBitmaskRowDeleted(this, new ShokenKekkaListWithBitmaskRowChangeEvent(((ShokenKekkaListWithBitmaskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokenKekkaListWithBitmaskRowDeleting != null)) {
                    this.ShokenKekkaListWithBitmaskRowDeleting(this, new ShokenKekkaListWithBitmaskRowChangeEvent(((ShokenKekkaListWithBitmaskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokenKekkaListWithBitmaskRow(ShokenKekkaListWithBitmaskRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokenKekkaListWithBitmaskDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokenKekkaTblDataTable : global::System.Data.TypedTableBase<ShokenKekkaTblRow> {
            
            private global::System.Data.DataColumn columnKensaIraiShokanIraiHoteiKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiHokenjoCd;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiNendo;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenRenban;
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenHyojiichi;
            
            private global::System.Data.DataColumn columnShokenTegaki;
            
            private global::System.Data.DataColumn columnShokenCheckKomoku;
            
            private global::System.Data.DataColumn columnShokenCheckHantei;
            
            private global::System.Data.DataColumn columnShokenShitekiKashoNo;
            
            private global::System.Data.DataColumn columnShokenSetchishaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenSeisoGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenKojiGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenMakerRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHokenjoRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuKeiyakuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenTenkenKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenSeisouKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnTaniSochiNm;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblDataTable() {
                this.TableName = "ShokenKekkaTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokenKekkaTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokanIraiHoteiKbnColumn {
                get {
                    return this.columnKensaIraiShokanIraiHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiHokenjoCdColumn {
                get {
                    return this.columnKensaIraiShokenIraiHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiNendoColumn {
                get {
                    return this.columnKensaIraiShokenIraiNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiRenbanColumn {
                get {
                    return this.columnKensaIraiShokenIraiRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenRenbanColumn {
                get {
                    return this.columnKensaIraiShokenRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyojiichiColumn {
                get {
                    return this.columnShokenHyojiichi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTegakiColumn {
                get {
                    return this.columnShokenTegaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckKomokuColumn {
                get {
                    return this.columnShokenCheckKomoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckHanteiColumn {
                get {
                    return this.columnShokenCheckHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenShitekiKashoNoColumn {
                get {
                    return this.columnShokenShitekiKashoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaRenrakuFlgColumn {
                get {
                    return this.columnShokenSetchishaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenHoshuGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisoGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenSeisoGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKojiGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenKojiGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerRenrakuFlgColumn {
                get {
                    return this.columnShokenMakerRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHokenjoRenrakuFlgColumn {
                get {
                    return this.columnShokenHokenjoRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuKeiyakuKakuninFlgColumn {
                get {
                    return this.columnShokenHoshuKeiyakuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTenkenKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenTenkenKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenSeisouKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaniSochiNmColumn {
                get {
                    return this.columnTaniSochiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow this[int index] {
                get {
                    return ((ShokenKekkaTblRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokenKekkaTblRow(ShokenKekkaTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow AddShokenKekkaTblRow(
                        string KensaIraiShokanIraiHoteiKbn, 
                        string KensaIraiShokenIraiHokenjoCd, 
                        string KensaIraiShokenIraiNendo, 
                        string KensaIraiShokenIraiRenban, 
                        string KensaIraiShokenRenban, 
                        string ShokenKbn, 
                        string ShokenCd, 
                        int ShokenHyojiichi, 
                        string ShokenTegaki, 
                        string ShokenCheckKomoku, 
                        string ShokenCheckHantei, 
                        string ShokenShitekiKashoNo, 
                        string ShokenSetchishaRenrakuFlg, 
                        string ShokenHoshuGyoshaRenrakuFlg, 
                        string ShokenSeisoGyoshaRenrakuFlg, 
                        string ShokenKojiGyoshaRenrakuFlg, 
                        string ShokenMakerRenrakuFlg, 
                        string ShokenHokenjoRenrakuFlg, 
                        string ShokenHoshuKeiyakuKakuninFlg, 
                        string ShokenTenkenKaisuuKakuninFlg, 
                        string ShokenSeisouKaisuuKakuninFlg, 
                        string TaniSochiNm, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm) {
                ShokenKekkaTblRow rowShokenKekkaTblRow = ((ShokenKekkaTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KensaIraiShokanIraiHoteiKbn,
                        KensaIraiShokenIraiHokenjoCd,
                        KensaIraiShokenIraiNendo,
                        KensaIraiShokenIraiRenban,
                        KensaIraiShokenRenban,
                        ShokenKbn,
                        ShokenCd,
                        ShokenHyojiichi,
                        ShokenTegaki,
                        ShokenCheckKomoku,
                        ShokenCheckHantei,
                        ShokenShitekiKashoNo,
                        ShokenSetchishaRenrakuFlg,
                        ShokenHoshuGyoshaRenrakuFlg,
                        ShokenSeisoGyoshaRenrakuFlg,
                        ShokenKojiGyoshaRenrakuFlg,
                        ShokenMakerRenrakuFlg,
                        ShokenHokenjoRenrakuFlg,
                        ShokenHoshuKeiyakuKakuninFlg,
                        ShokenTenkenKaisuuKakuninFlg,
                        ShokenSeisouKaisuuKakuninFlg,
                        TaniSochiNm,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm};
                rowShokenKekkaTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokenKekkaTblRow);
                return rowShokenKekkaTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow FindByKensaIraiShokanIraiHoteiKbnKensaIraiShokenIraiHokenjoCdKensaIraiShokenIraiNendoKensaIraiShokenIraiRenbanKensaIraiShokenRenban(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, string KensaIraiShokenRenban) {
                return ((ShokenKekkaTblRow)(this.Rows.Find(new object[] {
                            KensaIraiShokanIraiHoteiKbn,
                            KensaIraiShokenIraiHokenjoCd,
                            KensaIraiShokenIraiNendo,
                            KensaIraiShokenIraiRenban,
                            KensaIraiShokenRenban})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokenKekkaTblDataTable cln = ((ShokenKekkaTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokenKekkaTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKensaIraiShokanIraiHoteiKbn = base.Columns["KensaIraiShokanIraiHoteiKbn"];
                this.columnKensaIraiShokenIraiHokenjoCd = base.Columns["KensaIraiShokenIraiHokenjoCd"];
                this.columnKensaIraiShokenIraiNendo = base.Columns["KensaIraiShokenIraiNendo"];
                this.columnKensaIraiShokenIraiRenban = base.Columns["KensaIraiShokenIraiRenban"];
                this.columnKensaIraiShokenRenban = base.Columns["KensaIraiShokenRenban"];
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenHyojiichi = base.Columns["ShokenHyojiichi"];
                this.columnShokenTegaki = base.Columns["ShokenTegaki"];
                this.columnShokenCheckKomoku = base.Columns["ShokenCheckKomoku"];
                this.columnShokenCheckHantei = base.Columns["ShokenCheckHantei"];
                this.columnShokenShitekiKashoNo = base.Columns["ShokenShitekiKashoNo"];
                this.columnShokenSetchishaRenrakuFlg = base.Columns["ShokenSetchishaRenrakuFlg"];
                this.columnShokenHoshuGyoshaRenrakuFlg = base.Columns["ShokenHoshuGyoshaRenrakuFlg"];
                this.columnShokenSeisoGyoshaRenrakuFlg = base.Columns["ShokenSeisoGyoshaRenrakuFlg"];
                this.columnShokenKojiGyoshaRenrakuFlg = base.Columns["ShokenKojiGyoshaRenrakuFlg"];
                this.columnShokenMakerRenrakuFlg = base.Columns["ShokenMakerRenrakuFlg"];
                this.columnShokenHokenjoRenrakuFlg = base.Columns["ShokenHokenjoRenrakuFlg"];
                this.columnShokenHoshuKeiyakuKakuninFlg = base.Columns["ShokenHoshuKeiyakuKakuninFlg"];
                this.columnShokenTenkenKaisuuKakuninFlg = base.Columns["ShokenTenkenKaisuuKakuninFlg"];
                this.columnShokenSeisouKaisuuKakuninFlg = base.Columns["ShokenSeisouKaisuuKakuninFlg"];
                this.columnTaniSochiNm = base.Columns["TaniSochiNm"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKensaIraiShokanIraiHoteiKbn = new global::System.Data.DataColumn("KensaIraiShokanIraiHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokanIraiHoteiKbn);
                this.columnKensaIraiShokenIraiHokenjoCd = new global::System.Data.DataColumn("KensaIraiShokenIraiHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiHokenjoCd);
                this.columnKensaIraiShokenIraiNendo = new global::System.Data.DataColumn("KensaIraiShokenIraiNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiNendo);
                this.columnKensaIraiShokenIraiRenban = new global::System.Data.DataColumn("KensaIraiShokenIraiRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiRenban);
                this.columnKensaIraiShokenRenban = new global::System.Data.DataColumn("KensaIraiShokenRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenRenban);
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenHyojiichi = new global::System.Data.DataColumn("ShokenHyojiichi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyojiichi);
                this.columnShokenTegaki = new global::System.Data.DataColumn("ShokenTegaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTegaki);
                this.columnShokenCheckKomoku = new global::System.Data.DataColumn("ShokenCheckKomoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckKomoku);
                this.columnShokenCheckHantei = new global::System.Data.DataColumn("ShokenCheckHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckHantei);
                this.columnShokenShitekiKashoNo = new global::System.Data.DataColumn("ShokenShitekiKashoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenShitekiKashoNo);
                this.columnShokenSetchishaRenrakuFlg = new global::System.Data.DataColumn("ShokenSetchishaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaRenrakuFlg);
                this.columnShokenHoshuGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenHoshuGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGyoshaRenrakuFlg);
                this.columnShokenSeisoGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenSeisoGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisoGyoshaRenrakuFlg);
                this.columnShokenKojiGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenKojiGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKojiGyoshaRenrakuFlg);
                this.columnShokenMakerRenrakuFlg = new global::System.Data.DataColumn("ShokenMakerRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerRenrakuFlg);
                this.columnShokenHokenjoRenrakuFlg = new global::System.Data.DataColumn("ShokenHokenjoRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHokenjoRenrakuFlg);
                this.columnShokenHoshuKeiyakuKakuninFlg = new global::System.Data.DataColumn("ShokenHoshuKeiyakuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuKeiyakuKakuninFlg);
                this.columnShokenTenkenKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenTenkenKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTenkenKaisuuKakuninFlg);
                this.columnShokenSeisouKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenSeisouKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouKaisuuKakuninFlg);
                this.columnTaniSochiNm = new global::System.Data.DataColumn("TaniSochiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaniSochiNm);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKensaIraiShokanIraiHoteiKbn,
                                this.columnKensaIraiShokenIraiHokenjoCd,
                                this.columnKensaIraiShokenIraiNendo,
                                this.columnKensaIraiShokenIraiRenban,
                                this.columnKensaIraiShokenRenban}, true));
                this.columnKensaIraiShokanIraiHoteiKbn.AllowDBNull = false;
                this.columnKensaIraiShokanIraiHoteiKbn.MaxLength = 1;
                this.columnKensaIraiShokenIraiHokenjoCd.AllowDBNull = false;
                this.columnKensaIraiShokenIraiHokenjoCd.MaxLength = 2;
                this.columnKensaIraiShokenIraiNendo.AllowDBNull = false;
                this.columnKensaIraiShokenIraiNendo.MaxLength = 4;
                this.columnKensaIraiShokenIraiRenban.AllowDBNull = false;
                this.columnKensaIraiShokenIraiRenban.MaxLength = 6;
                this.columnKensaIraiShokenRenban.AllowDBNull = false;
                this.columnKensaIraiShokenRenban.MaxLength = 2;
                this.columnShokenKbn.AllowDBNull = false;
                this.columnShokenKbn.MaxLength = 3;
                this.columnShokenCd.AllowDBNull = false;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenTegaki.MaxLength = 160;
                this.columnShokenCheckKomoku.MaxLength = 3;
                this.columnShokenCheckHantei.MaxLength = 1;
                this.columnShokenShitekiKashoNo.MaxLength = 2;
                this.columnShokenSetchishaRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenSeisoGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenKojiGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenMakerRenrakuFlg.MaxLength = 1;
                this.columnShokenHokenjoRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuKeiyakuKakuninFlg.MaxLength = 1;
                this.columnShokenTenkenKaisuuKakuninFlg.MaxLength = 1;
                this.columnShokenSeisouKaisuuKakuninFlg.MaxLength = 1;
                this.columnTaniSochiNm.MaxLength = 60;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow NewShokenKekkaTblRow() {
                return ((ShokenKekkaTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokenKekkaTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokenKekkaTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokenKekkaTblRowChanged != null)) {
                    this.ShokenKekkaTblRowChanged(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokenKekkaTblRowChanging != null)) {
                    this.ShokenKekkaTblRowChanging(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokenKekkaTblRowDeleted != null)) {
                    this.ShokenKekkaTblRowDeleted(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokenKekkaTblRowDeleting != null)) {
                    this.ShokenKekkaTblRowDeleting(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokenKekkaTblRow(ShokenKekkaTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokenKekkaTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokenKekkaListRow : global::System.Data.DataRow {
            
            private ShokenKekkaListDataTable tableShokenKekkaList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokenKekkaList = ((ShokenKekkaListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokanIraiHoteiKbn {
                get {
                    return ((string)(this[this.tableShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiHokenjoCd {
                get {
                    return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiNendo {
                get {
                    return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenIraiNendoColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenIraiNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiRenban {
                get {
                    return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenIraiRenbanColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenIraiRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenRenban {
                get {
                    return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenRenbanColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    return ((string)(this[this.tableShokenKekkaList.ShokenKbnColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    return ((string)(this[this.tableShokenKekkaList.ShokenCdColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenHyojiichi {
                get {
                    try {
                        return ((int)(this[this.tableShokenKekkaList.ShokenHyojiichiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHyojiichi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHyojiichiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTegaki {
                get {
                    if (this.IsShokenTegakiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokenKekkaList.ShokenTegakiColumn]));
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenTegakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckKomoku {
                get {
                    if (this.IsShokenCheckKomokuNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokenKekkaList.ShokenCheckKomokuColumn]));
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenCheckKomokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckHantei {
                get {
                    if (this.IsShokenCheckHanteiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokenKekkaList.ShokenCheckHanteiColumn]));
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenCheckHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenShitekiKashoNo {
                get {
                    if (this.IsShokenShitekiKashoNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokenKekkaList.ShokenShitekiKashoNoColumn]));
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenShitekiKashoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenKekkaList.InsertDtColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableShokenKekkaList.InsertUserColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableShokenKekkaList.InsertTarmColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenKekkaList.UpdateDtColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableShokenKekkaList.UpdateUserColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableShokenKekkaList.UpdateTarmColumn]));
                }
                set {
                    this[this.tableShokenKekkaList.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenWd {
                get {
                    if (this.IsShokenWdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokenKekkaList.ShokenWdColumn]));
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenWdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenSetchishaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHoshuGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisoGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenSeisoGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKojiGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenKojiGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenMakerRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHokenjoRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHokenjoRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuKeiyakuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHoshuKeiyakuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTenkenKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenTenkenKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenSeisouKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaniSochiNm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.TaniSochiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'TaniSochiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.TaniSochiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHyojiichiNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHyojiichiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHyojiichiNull() {
                this[this.tableShokenKekkaList.ShokenHyojiichiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTegakiNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenTegakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTegakiNull() {
                this[this.tableShokenKekkaList.ShokenTegakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckKomokuNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenCheckKomokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckKomokuNull() {
                this[this.tableShokenKekkaList.ShokenCheckKomokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckHanteiNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenCheckHanteiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckHanteiNull() {
                this[this.tableShokenKekkaList.ShokenCheckHanteiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenShitekiKashoNoNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenShitekiKashoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenShitekiKashoNoNull() {
                this[this.tableShokenKekkaList.ShokenShitekiKashoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenWdNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenWdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenWdNull() {
                this[this.tableShokenKekkaList.ShokenWdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSetchishaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSetchishaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisoGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisoGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKojiGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKojiGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenMakerRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenMakerRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHokenjoRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHokenjoRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuKeiyakuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuKeiyakuKakuninFlgNull() {
                this[this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTenkenKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTenkenKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisouKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisouKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaniSochiNmNull() {
                return this.IsNull(this.tableShokenKekkaList.TaniSochiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaniSochiNmNull() {
                this[this.tableShokenKekkaList.TaniSochiNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokenKekkaListWithBitmaskRow : global::System.Data.DataRow {
            
            private ShokenKekkaListWithBitmaskDataTable tableShokenKekkaListWithBitmask;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaListWithBitmaskRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokenKekkaListWithBitmask = ((ShokenKekkaListWithBitmaskDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHosokuKbn {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenHosokuKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenHosokuKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenHosokuKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokanIraiHoteiKbn {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.KensaIraiShokanIraiHoteiKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'KensaIraiShokanIraiHoteiKbn\' の値は DBNull で" +
                                "す。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.KensaIraiShokanIraiHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiHokenjoCd {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiHokenjoCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'KensaIraiShokenIraiHokenjoCd\' の値は DBNull " +
                                "です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiNendo {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiNendoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'KensaIraiShokenIraiNendo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiRenban {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiRenbanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'KensaIraiShokenIraiRenban\' の値は DBNull です。" +
                                "", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenRenban {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenRenbanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'KensaIraiShokenRenban\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenHosokuRenban {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenHosokuRenbanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'KensaIraiShokenHosokuRenban\' の値は DBNull で" +
                                "す。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenHosokuRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenHyojiichi {
                get {
                    try {
                        return ((int)(this[this.tableShokenKekkaListWithBitmask.ShokenHyojiichiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenHyojiichi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenHyojiichiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTegaki {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenTegakiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenTegaki\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenTegakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckKomoku {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenCheckKomokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenCheckKomoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenCheckKomokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckHantei {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenCheckHanteiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenCheckHantei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenCheckHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenShitekiKashoNo {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenShitekiKashoNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenShitekiKashoNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenShitekiKashoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenSetchishaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenSetchishaRenrakuFlg\' の値は DBNull です。" +
                                "", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenSetchishaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenHoshuGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenHoshuGyoshaRenrakuFlg\' の値は DBNull で" +
                                "す。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenHoshuGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisoGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenSeisoGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenSeisoGyoshaRenrakuFlg\' の値は DBNull で" +
                                "す。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenSeisoGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKojiGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenKojiGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenKojiGyoshaRenrakuFlg\' の値は DBNull です" +
                                "。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenKojiGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenMakerRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenMakerRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenMakerRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHokenjoRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenHokenjoRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenHokenjoRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenHokenjoRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuKeiyakuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenHoshuKeiyakuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenHoshuKeiyakuKakuninFlg\' の値は DBNull " +
                                "です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenHoshuKeiyakuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTenkenKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenTenkenKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenTenkenKaisuuKakuninFlg\' の値は DBNull " +
                                "です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenTenkenKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.ShokenSeisouKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'ShokenSeisouKaisuuKakuninFlg\' の値は DBNull " +
                                "です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenSeisouKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableShokenKekkaListWithBitmask.InsertDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'InsertDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.InsertUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'InsertUser\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.InsertTarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'InsertTarm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableShokenKekkaListWithBitmask.UpdateDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'UpdateDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.UpdateUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'UpdateUser\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.UpdateTarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'UpdateTarm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenTaishoKensaBitMask {
                get {
                    return ((int)(this[this.tableShokenKekkaListWithBitmask.ShokenTaishoKensaBitMaskColumn]));
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.ShokenTaishoKensaBitMaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaniSochiNm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaListWithBitmask.TaniSochiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaListWithBitmask\' にある列 \'TaniSochiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaListWithBitmask.TaniSochiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHosokuKbnNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenHosokuKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHosokuKbnNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenHosokuKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokanIraiHoteiKbnNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.KensaIraiShokanIraiHoteiKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokanIraiHoteiKbnNull() {
                this[this.tableShokenKekkaListWithBitmask.KensaIraiShokanIraiHoteiKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiHokenjoCdNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiHokenjoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiHokenjoCdNull() {
                this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiHokenjoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiNendoNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiNendoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiNendoNull() {
                this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiNendoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiRenbanNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiRenbanNull() {
                this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenIraiRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenRenbanNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.KensaIraiShokenRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenRenbanNull() {
                this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenHosokuRenbanNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.KensaIraiShokenHosokuRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenHosokuRenbanNull() {
                this[this.tableShokenKekkaListWithBitmask.KensaIraiShokenHosokuRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKbnNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKbnNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCdNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCdNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHyojiichiNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenHyojiichiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHyojiichiNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenHyojiichiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTegakiNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenTegakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTegakiNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenTegakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckKomokuNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenCheckKomokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckKomokuNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenCheckKomokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckHanteiNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenCheckHanteiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckHanteiNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenCheckHanteiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenShitekiKashoNoNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenShitekiKashoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenShitekiKashoNoNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenShitekiKashoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSetchishaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenSetchishaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSetchishaRenrakuFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenSetchishaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenHoshuGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenHoshuGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisoGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenSeisoGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisoGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenSeisoGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKojiGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenKojiGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKojiGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenKojiGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenMakerRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenMakerRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenMakerRenrakuFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenMakerRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHokenjoRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenHokenjoRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHokenjoRenrakuFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenHokenjoRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuKeiyakuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenHoshuKeiyakuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuKeiyakuKakuninFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenHoshuKeiyakuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTenkenKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenTenkenKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTenkenKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenTenkenKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisouKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.ShokenSeisouKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisouKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaListWithBitmask.ShokenSeisouKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertDtNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.InsertDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertDtNull() {
                this[this.tableShokenKekkaListWithBitmask.InsertDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertUserNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.InsertUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertUserNull() {
                this[this.tableShokenKekkaListWithBitmask.InsertUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertTarmNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.InsertTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertTarmNull() {
                this[this.tableShokenKekkaListWithBitmask.InsertTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateDtNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.UpdateDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateDtNull() {
                this[this.tableShokenKekkaListWithBitmask.UpdateDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateUserNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.UpdateUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateUserNull() {
                this[this.tableShokenKekkaListWithBitmask.UpdateUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateTarmNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.UpdateTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateTarmNull() {
                this[this.tableShokenKekkaListWithBitmask.UpdateTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaniSochiNmNull() {
                return this.IsNull(this.tableShokenKekkaListWithBitmask.TaniSochiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaniSochiNmNull() {
                this[this.tableShokenKekkaListWithBitmask.TaniSochiNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokenKekkaTblRow : global::System.Data.DataRow {
            
            private ShokenKekkaTblDataTable tableShokenKekkaTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokenKekkaTbl = ((ShokenKekkaTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokanIraiHoteiKbn {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokanIraiHoteiKbnColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokanIraiHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiHokenjoCd {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenIraiHokenjoCdColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenIraiHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiNendo {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenIraiNendoColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenIraiNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiRenban {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenIraiRenbanColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenIraiRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenRenban {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenRenbanColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.ShokenKbnColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.ShokenCdColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenHyojiichi {
                get {
                    try {
                        return ((int)(this[this.tableShokenKekkaTbl.ShokenHyojiichiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHyojiichi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHyojiichiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTegaki {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenTegakiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenTegaki\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenTegakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckKomoku {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenCheckKomokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenCheckKomoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenCheckKomokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckHantei {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenCheckHanteiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenCheckHantei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenCheckHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenShitekiKashoNo {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenShitekiKashoNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenSetchishaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHoshuGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisoGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenSeisoGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKojiGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenKojiGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenMakerRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHokenjoRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHokenjoRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuKeiyakuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHoshuKeiyakuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTenkenKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenTenkenKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenSeisouKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaniSochiNm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.TaniSochiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'TaniSochiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.TaniSochiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenKekkaTbl.InsertDtColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.InsertUserColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.InsertTarmColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenKekkaTbl.UpdateDtColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.UpdateUserColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.UpdateTarmColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHyojiichiNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHyojiichiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHyojiichiNull() {
                this[this.tableShokenKekkaTbl.ShokenHyojiichiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTegakiNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenTegakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTegakiNull() {
                this[this.tableShokenKekkaTbl.ShokenTegakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckKomokuNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenCheckKomokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckKomokuNull() {
                this[this.tableShokenKekkaTbl.ShokenCheckKomokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckHanteiNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenCheckHanteiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckHanteiNull() {
                this[this.tableShokenKekkaTbl.ShokenCheckHanteiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenShitekiKashoNoNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenShitekiKashoNoNull() {
                this[this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSetchishaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSetchishaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisoGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisoGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKojiGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKojiGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenMakerRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenMakerRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHokenjoRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHokenjoRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuKeiyakuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuKeiyakuKakuninFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTenkenKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTenkenKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisouKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisouKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaniSochiNmNull() {
                return this.IsNull(this.tableShokenKekkaTbl.TaniSochiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaniSochiNmNull() {
                this[this.tableShokenKekkaTbl.TaniSochiNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokenKekkaListRowChangeEvent : global::System.EventArgs {
            
            private ShokenKekkaListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRowChangeEvent(ShokenKekkaListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokenKekkaListWithBitmaskRowChangeEvent : global::System.EventArgs {
            
            private ShokenKekkaListWithBitmaskRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListWithBitmaskRowChangeEvent(ShokenKekkaListWithBitmaskRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListWithBitmaskRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokenKekkaTblRowChangeEvent : global::System.EventArgs {
            
            private ShokenKekkaTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRowChangeEvent(ShokenKekkaTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjBizSystem.Application.DataSet.ShokenKekkaTblDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokenKekkaListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokenKekkaList";
            tableMapping.ColumnMappings.Add("KensaIraiShokanIraiHoteiKbn", "KensaIraiShokanIraiHoteiKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiHokenjoCd", "KensaIraiShokenIraiHokenjoCd");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiNendo", "KensaIraiShokenIraiNendo");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiRenban", "KensaIraiShokenIraiRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenRenban", "KensaIraiShokenRenban");
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenHyojiichi", "ShokenHyojiichi");
            tableMapping.ColumnMappings.Add("ShokenTegaki", "ShokenTegaki");
            tableMapping.ColumnMappings.Add("ShokenCheckKomoku", "ShokenCheckKomoku");
            tableMapping.ColumnMappings.Add("ShokenCheckHantei", "ShokenCheckHantei");
            tableMapping.ColumnMappings.Add("ShokenShitekiKashoNo", "ShokenShitekiKashoNo");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ShokenWd", "ShokenWd");
            tableMapping.ColumnMappings.Add("ShokenSetchishaRenrakuFlg", "ShokenSetchishaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuGyoshaRenrakuFlg", "ShokenHoshuGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisoGyoshaRenrakuFlg", "ShokenSeisoGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenKojiGyoshaRenrakuFlg", "ShokenKojiGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenMakerRenrakuFlg", "ShokenMakerRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHokenjoRenrakuFlg", "ShokenHokenjoRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuKeiyakuKakuninFlg", "ShokenHoshuKeiyakuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenTenkenKaisuuKakuninFlg", "ShokenTenkenKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisouKaisuuKakuninFlg", "ShokenSeisouKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("TaniSochiNm", "TaniSochiNm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          skt.KensaIraiShokanIraiHoteiKbn, skt.KensaIraiShokenIraiHokenjoCd, 
                      skt.KensaIraiShokenIraiNendo, skt.KensaIraiShokenIraiRenban, 
                      skt.KensaIraiShokenRenban, skt.ShokenKbn, skt.ShokenCd, skt.ShokenHyojiichi, 
                      skt.ShokenTegaki, skt.ShokenCheckKomoku, skt.ShokenCheckHantei, 
                      skt.ShokenShitekiKashoNo, skt.ShokenSetchishaRenrakuFlg, 
                      skt.ShokenHoshuGyoshaRenrakuFlg, skt.ShokenSeisoGyoshaRenrakuFlg, 
                      skt.ShokenKojiGyoshaRenrakuFlg, skt.ShokenMakerRenrakuFlg, 
                      skt.ShokenHokenjoRenrakuFlg, skt.ShokenHoshuKeiyakuKakuninFlg, 
                      skt.ShokenTenkenKaisuuKakuninFlg, skt.ShokenSeisouKaisuuKakuninFlg, 
                      skt.TaniSochiNm, skt.InsertDt, skt.InsertUser, skt.InsertTarm, skt.UpdateDt, 
                      skt.UpdateUser, skt.UpdateTarm, sm.ShokenWd
FROM            ShokenKekkaTbl AS skt LEFT OUTER JOIN
                      ShokenMst AS sm ON sm.ShokenKbn = skt.ShokenKbn AND 
                      sm.ShokenCd = skt.ShokenCd
ORDER BY     skt.ShokenHyojiichi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          skt.KensaIraiShokanIraiHoteiKbn, skt.KensaIraiShokenIraiHokenjoCd" +
                ", \r\n                      skt.KensaIraiShokenIraiNendo, skt.KensaIraiShokenIraiR" +
                "enban, \r\n                      skt.KensaIraiShokenRenban, skt.ShokenKbn, skt.Sho" +
                "kenCd, skt.ShokenHyojiichi, \r\n                      skt.ShokenTegaki, skt.Shoken" +
                "CheckKomoku, skt.ShokenCheckHantei, \r\n                      skt.ShokenShitekiKas" +
                "hoNo, skt.ShokenSetchishaRenrakuFlg, \r\n                      skt.ShokenHoshuGyos" +
                "haRenrakuFlg, skt.ShokenSeisoGyoshaRenrakuFlg, \r\n                      skt.Shoke" +
                "nKojiGyoshaRenrakuFlg, skt.ShokenMakerRenrakuFlg, \r\n                      skt.Sh" +
                "okenHokenjoRenrakuFlg, skt.ShokenHoshuKeiyakuKakuninFlg, \r\n                     " +
                " skt.ShokenTenkenKaisuuKakuninFlg, skt.ShokenSeisouKaisuuKakuninFlg, \r\n         " +
                "             skt.TaniSochiNm, skt.InsertDt, skt.InsertUser, skt.InsertTarm, skt." +
                "UpdateDt, \r\n                      skt.UpdateUser, skt.UpdateTarm, sm.ShokenWd\r\nF" +
                "ROM            ShokenKekkaTbl AS skt LEFT OUTER JOIN\r\n                      Shok" +
                "enMst AS sm ON sm.ShokenKbn = skt.ShokenKbn AND \r\n                      sm.Shoke" +
                "nCd = skt.ShokenCd\r\nWHERE           (skt.KensaIraiShokanIraiHoteiKbn = @KensaIra" +
                "iShokanIraiHoteiKbn) AND \r\n                      (skt.KensaIraiShokenIraiHokenjo" +
                "Cd = @KensaIraiShokenIraiHokenjoCd) AND \r\n                      (skt.KensaIraiSh" +
                "okenIraiNendo = @KensaIraiShokenIraiNendo) AND \r\n                      (skt.Kens" +
                "aIraiShokenIraiRenban = @KensaIraiShokenIraiRenban)\r\nORDER BY     skt.ShokenHyoj" +
                "iichi";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCond(ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable, string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaListDataTable GetDataByCond(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokenKekkaListWithBitmaskTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaListWithBitmaskTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokenKekkaListWithBitmask";
            tableMapping.ColumnMappings.Add("ShokenHosokuKbn", "ShokenHosokuKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokanIraiHoteiKbn", "KensaIraiShokanIraiHoteiKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiHokenjoCd", "KensaIraiShokenIraiHokenjoCd");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiNendo", "KensaIraiShokenIraiNendo");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiRenban", "KensaIraiShokenIraiRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenRenban", "KensaIraiShokenRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenHosokuRenban", "KensaIraiShokenHosokuRenban");
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenHyojiichi", "ShokenHyojiichi");
            tableMapping.ColumnMappings.Add("ShokenTegaki", "ShokenTegaki");
            tableMapping.ColumnMappings.Add("ShokenCheckKomoku", "ShokenCheckKomoku");
            tableMapping.ColumnMappings.Add("ShokenCheckHantei", "ShokenCheckHantei");
            tableMapping.ColumnMappings.Add("ShokenShitekiKashoNo", "ShokenShitekiKashoNo");
            tableMapping.ColumnMappings.Add("ShokenSetchishaRenrakuFlg", "ShokenSetchishaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuGyoshaRenrakuFlg", "ShokenHoshuGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisoGyoshaRenrakuFlg", "ShokenSeisoGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenKojiGyoshaRenrakuFlg", "ShokenKojiGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenMakerRenrakuFlg", "ShokenMakerRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHokenjoRenrakuFlg", "ShokenHokenjoRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuKeiyakuKakuninFlg", "ShokenHoshuKeiyakuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenTenkenKaisuuKakuninFlg", "ShokenTenkenKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisouKaisuuKakuninFlg", "ShokenSeisouKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ShokenTaishoKensaBitMask", "ShokenTaishoKensaBitMask");
            tableMapping.ColumnMappings.Add("TaniSochiNm", "TaniSochiNm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select\r\n  shoken.ShokenHosokuKbn\r\n  , shoken.KensaIraiShokanIraiHoteiKbn\r\n  , sho" +
                "ken.KensaIraiShokenIraiHokenjoCd\r\n  , shoken.KensaIraiShokenIraiNendo\r\n  , shoke" +
                "n.KensaIraiShokenIraiRenban\r\n  , shoken.KensaIraiShokenRenban\r\n  , shoken.KensaI" +
                "raiShokenHosokuRenban\r\n  , shoken.ShokenKbn\r\n  , shoken.ShokenCd\r\n  , shoken.Sho" +
                "kenHyojiichi\r\n  , shoken.ShokenTegaki\r\n  , shoken.ShokenCheckKomoku\r\n  , shoken." +
                "ShokenCheckHantei\r\n  , shoken.ShokenShitekiKashoNo\r\n  , shoken.ShokenSetchishaRe" +
                "nrakuFlg\r\n  , shoken.ShokenHoshuGyoshaRenrakuFlg\r\n  , shoken.ShokenSeisoGyoshaRe" +
                "nrakuFlg\r\n  , shoken.ShokenKojiGyoshaRenrakuFlg\r\n  , shoken.ShokenMakerRenrakuFl" +
                "g\r\n  , shoken.ShokenHokenjoRenrakuFlg\r\n  , shoken.ShokenHoshuKeiyakuKakuninFlg\r\n" +
                "  , shoken.ShokenTenkenKaisuuKakuninFlg\r\n  , shoken.ShokenSeisouKaisuuKakuninFlg" +
                "\r\n  , shoken.InsertDt\r\n  , shoken.InsertUser\r\n  , shoken.InsertTarm\r\n  , shoken." +
                "UpdateDt\r\n  , shoken.UpdateUser\r\n  , shoken.UpdateTarm\r\n  , mst.ShokenTaishoKens" +
                "aBitMask \r\n  , shoken.TaniSochiNm\r\nfrom\r\n  ( \r\n    select\r\n      -- 所見(0)\r\n     " +
                " \'0\' as ShokenHosokuKbn\r\n      , KensaIraiShokanIraiHoteiKbn\r\n      , KensaIraiS" +
                "hokenIraiHokenjoCd\r\n      , KensaIraiShokenIraiNendo\r\n      , KensaIraiShokenIra" +
                "iRenban\r\n      , KensaIraiShokenRenban\r\n      , \'00\' as KensaIraiShokenHosokuRen" +
                "ban\r\n      , ShokenKbn\r\n      , ShokenCd\r\n      , ShokenHyojiichi\r\n      , Shoke" +
                "nTegaki\r\n      , ShokenCheckKomoku\r\n      , ShokenCheckHantei\r\n      , ShokenShi" +
                "tekiKashoNo\r\n      , ShokenSetchishaRenrakuFlg\r\n      , ShokenHoshuGyoshaRenraku" +
                "Flg\r\n      , ShokenSeisoGyoshaRenrakuFlg\r\n      , ShokenKojiGyoshaRenrakuFlg\r\n  " +
                "    , ShokenMakerRenrakuFlg\r\n      , ShokenHokenjoRenrakuFlg\r\n      , ShokenHosh" +
                "uKeiyakuKakuninFlg\r\n      , ShokenTenkenKaisuuKakuninFlg\r\n      , ShokenSeisouKa" +
                "isuuKakuninFlg\r\n      , InsertDt\r\n      , InsertUser\r\n      , InsertTarm\r\n      " +
                ", UpdateDt\r\n      , UpdateUser\r\n      , UpdateTarm \r\n      , TaniSochiNm\r\n    fr" +
                "om\r\n      ShokenKekkaTbl \r\n    where\r\n      KensaIraiShokanIraiHoteiKbn = @kensa" +
                "IraiHoteiKbn \r\n      and KensaIraiShokenIraiHokenjoCd = @kensaIraiHokenjoCd \r\n  " +
                "    and KensaIraiShokenIraiNendo = @kensaIraiNendo \r\n      and KensaIraiShokenIr" +
                "aiRenban = @kensaIraiRenban \r\n    union all \r\n    select\r\n      -- 所見補足(1)\r\n    " +
                "  \'1\' as ShokenHosokuKbn\r\n      , KensaIraiShokanIraiHoteiKbn\r\n      , KensaIrai" +
                "ShokenIraiHokenjoCd\r\n      , KensaIraiShokenIraiNendo\r\n      , KensaIraiShokenIr" +
                "aiRenban\r\n      , KensaIraiShokenRenban\r\n      , KensaIraiShokenHosokuRenban\r\n  " +
                "    , ShokenKbn\r\n      , ShokenCd\r\n      , ShokenHyojiichi\r\n      , ShokenTegaki" +
                "\r\n      , ShokenCheckKomoku\r\n      , ShokenCheckHantei\r\n      , ShokenShitekiKas" +
                "hoNo\r\n      , ShokenSetchishaRenrakuFlg\r\n      , ShokenHoshuGyoshaRenrakuFlg\r\n  " +
                "    , ShokenSeisoGyoshaRenrakuFlg\r\n      , ShokenKojiGyoshaRenrakuFlg\r\n      , S" +
                "hokenMakerRenrakuFlg\r\n      , ShokenHokenjoRenrakuFlg\r\n      , ShokenHoshuKeiyak" +
                "uKakuninFlg\r\n      , ShokenTenkenKaisuuKakuninFlg\r\n      , ShokenSeisouKaisuuKak" +
                "uninFlg\r\n      , InsertDt\r\n      , InsertUser\r\n      , InsertTarm\r\n      , Updat" +
                "eDt\r\n      , UpdateUser\r\n      , UpdateTarm \r\n      , \'\' as TaniSochiNm\r\n    fro" +
                "m\r\n      ShokenKekkaHosokuTbl \r\n    where\r\n      KensaIraiShokanIraiHoteiKbn = @" +
                "kensaIraiHoteiKbn \r\n      and KensaIraiShokenIraiHokenjoCd = @kensaIraiHokenjoCd" +
                " \r\n      and KensaIraiShokenIraiNendo = @kensaIraiNendo \r\n      and KensaIraiSho" +
                "kenIraiRenban = @kensaIraiRenban\r\n  ) shoken \r\n  inner join ShokenMst mst \r\n    " +
                "on shoken.ShokenKbn = mst.ShokenKbn \r\n    and shoken.ShokenCd = mst.ShokenCd \r\no" +
                "rder by\r\n  shoken.ShokenHyojiichi\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kensaIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kensaIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kensaIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kensaIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokenKekkaTblDataSet.ShokenKekkaListWithBitmaskDataTable dataTable, string kensaIraiHoteiKbn, string kensaIraiHokenjoCd, string kensaIraiNendo, string kensaIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((kensaIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("kensaIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(kensaIraiHoteiKbn));
            }
            if ((kensaIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("kensaIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(kensaIraiHokenjoCd));
            }
            if ((kensaIraiNendo == null)) {
                throw new global::System.ArgumentNullException("kensaIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(kensaIraiNendo));
            }
            if ((kensaIraiRenban == null)) {
                throw new global::System.ArgumentNullException("kensaIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(kensaIraiRenban));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaListWithBitmaskDataTable GetData(string kensaIraiHoteiKbn, string kensaIraiHokenjoCd, string kensaIraiNendo, string kensaIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((kensaIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("kensaIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(kensaIraiHoteiKbn));
            }
            if ((kensaIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("kensaIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(kensaIraiHokenjoCd));
            }
            if ((kensaIraiNendo == null)) {
                throw new global::System.ArgumentNullException("kensaIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(kensaIraiNendo));
            }
            if ((kensaIraiRenban == null)) {
                throw new global::System.ArgumentNullException("kensaIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(kensaIraiRenban));
            }
            ShokenKekkaTblDataSet.ShokenKekkaListWithBitmaskDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaListWithBitmaskDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokenKekkaTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokenKekkaTbl";
            tableMapping.ColumnMappings.Add("KensaIraiShokanIraiHoteiKbn", "KensaIraiShokanIraiHoteiKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiHokenjoCd", "KensaIraiShokenIraiHokenjoCd");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiNendo", "KensaIraiShokenIraiNendo");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiRenban", "KensaIraiShokenIraiRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenRenban", "KensaIraiShokenRenban");
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenHyojiichi", "ShokenHyojiichi");
            tableMapping.ColumnMappings.Add("ShokenTegaki", "ShokenTegaki");
            tableMapping.ColumnMappings.Add("ShokenCheckKomoku", "ShokenCheckKomoku");
            tableMapping.ColumnMappings.Add("ShokenCheckHantei", "ShokenCheckHantei");
            tableMapping.ColumnMappings.Add("ShokenShitekiKashoNo", "ShokenShitekiKashoNo");
            tableMapping.ColumnMappings.Add("ShokenSetchishaRenrakuFlg", "ShokenSetchishaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuGyoshaRenrakuFlg", "ShokenHoshuGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisoGyoshaRenrakuFlg", "ShokenSeisoGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenKojiGyoshaRenrakuFlg", "ShokenKojiGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenMakerRenrakuFlg", "ShokenMakerRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHokenjoRenrakuFlg", "ShokenHokenjoRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuKeiyakuKakuninFlg", "ShokenHoshuKeiyakuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenTenkenKaisuuKakuninFlg", "ShokenTenkenKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisouKaisuuKakuninFlg", "ShokenSeisouKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("TaniSochiNm", "TaniSochiNm");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ShokenKekkaTbl] WHERE (([KensaIraiShokanIraiHoteiKbn] = @Original_Ke" +
                "nsaIraiShokanIraiHoteiKbn) AND ([KensaIraiShokenIraiHokenjoCd] = @Original_Kensa" +
                "IraiShokenIraiHokenjoCd) AND ([KensaIraiShokenIraiNendo] = @Original_KensaIraiSh" +
                "okenIraiNendo) AND ([KensaIraiShokenIraiRenban] = @Original_KensaIraiShokenIraiR" +
                "enban) AND ([KensaIraiShokenRenban] = @Original_KensaIraiShokenRenban) AND ([Sho" +
                "kenKbn] = @Original_ShokenKbn) AND ([ShokenCd] = @Original_ShokenCd) AND ((@IsNu" +
                "ll_ShokenHyojiichi = 1 AND [ShokenHyojiichi] IS NULL) OR ([ShokenHyojiichi] = @O" +
                "riginal_ShokenHyojiichi)) AND ((@IsNull_ShokenTegaki = 1 AND [ShokenTegaki] IS N" +
                "ULL) OR ([ShokenTegaki] = @Original_ShokenTegaki)) AND ((@IsNull_ShokenCheckKomo" +
                "ku = 1 AND [ShokenCheckKomoku] IS NULL) OR ([ShokenCheckKomoku] = @Original_Shok" +
                "enCheckKomoku)) AND ((@IsNull_ShokenCheckHantei = 1 AND [ShokenCheckHantei] IS N" +
                "ULL) OR ([ShokenCheckHantei] = @Original_ShokenCheckHantei)) AND ((@IsNull_Shoke" +
                "nShitekiKashoNo = 1 AND [ShokenShitekiKashoNo] IS NULL) OR ([ShokenShitekiKashoN" +
                "o] = @Original_ShokenShitekiKashoNo)) AND ((@IsNull_ShokenSetchishaRenrakuFlg = " +
                "1 AND [ShokenSetchishaRenrakuFlg] IS NULL) OR ([ShokenSetchishaRenrakuFlg] = @Or" +
                "iginal_ShokenSetchishaRenrakuFlg)) AND ((@IsNull_ShokenHoshuGyoshaRenrakuFlg = 1" +
                " AND [ShokenHoshuGyoshaRenrakuFlg] IS NULL) OR ([ShokenHoshuGyoshaRenrakuFlg] = " +
                "@Original_ShokenHoshuGyoshaRenrakuFlg)) AND ((@IsNull_ShokenSeisoGyoshaRenrakuFl" +
                "g = 1 AND [ShokenSeisoGyoshaRenrakuFlg] IS NULL) OR ([ShokenSeisoGyoshaRenrakuFl" +
                "g] = @Original_ShokenSeisoGyoshaRenrakuFlg)) AND ((@IsNull_ShokenKojiGyoshaRenra" +
                "kuFlg = 1 AND [ShokenKojiGyoshaRenrakuFlg] IS NULL) OR ([ShokenKojiGyoshaRenraku" +
                "Flg] = @Original_ShokenKojiGyoshaRenrakuFlg)) AND ((@IsNull_ShokenMakerRenrakuFl" +
                "g = 1 AND [ShokenMakerRenrakuFlg] IS NULL) OR ([ShokenMakerRenrakuFlg] = @Origin" +
                "al_ShokenMakerRenrakuFlg)) AND ((@IsNull_ShokenHokenjoRenrakuFlg = 1 AND [Shoken" +
                "HokenjoRenrakuFlg] IS NULL) OR ([ShokenHokenjoRenrakuFlg] = @Original_ShokenHoke" +
                "njoRenrakuFlg)) AND ((@IsNull_ShokenHoshuKeiyakuKakuninFlg = 1 AND [ShokenHoshuK" +
                "eiyakuKakuninFlg] IS NULL) OR ([ShokenHoshuKeiyakuKakuninFlg] = @Original_Shoken" +
                "HoshuKeiyakuKakuninFlg)) AND ((@IsNull_ShokenTenkenKaisuuKakuninFlg = 1 AND [Sho" +
                "kenTenkenKaisuuKakuninFlg] IS NULL) OR ([ShokenTenkenKaisuuKakuninFlg] = @Origin" +
                "al_ShokenTenkenKaisuuKakuninFlg)) AND ((@IsNull_ShokenSeisouKaisuuKakuninFlg = 1" +
                " AND [ShokenSeisouKaisuuKakuninFlg] IS NULL) OR ([ShokenSeisouKaisuuKakuninFlg] " +
                "= @Original_ShokenSeisouKaisuuKakuninFlg)) AND ((@IsNull_TaniSochiNm = 1 AND [Ta" +
                "niSochiNm] IS NULL) OR ([TaniSochiNm] = @Original_TaniSochiNm)) AND ([InsertDt] " +
                "= @Original_InsertDt) AND ([InsertUser] = @Original_InsertUser) AND ([InsertTarm" +
                "] = @Original_InsertTarm) AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateUser" +
                "] = @Original_UpdateUser) AND ([UpdateTarm] = @Original_UpdateTarm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHyojiichi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyojiichi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenTegaki", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenTegaki", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenCheckKomoku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCheckKomoku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenCheckHantei", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCheckHantei", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenShitekiKashoNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenShitekiKashoNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenSetchishaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSetchishaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHoshuGyoshaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenSeisoGyoshaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisoGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenKojiGyoshaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKojiGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenMakerRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenMakerRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHokenjoRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHokenjoRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHoshuKeiyakuKakuninFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuKeiyakuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenTenkenKaisuuKakuninFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenTenkenKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenSeisouKaisuuKakuninFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisouKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TaniSochiNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaniSochiNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ShokenKekkaTbl] ([KensaIraiShokanIraiHoteiKbn], [KensaIraiShokenIrai" +
                "HokenjoCd], [KensaIraiShokenIraiNendo], [KensaIraiShokenIraiRenban], [KensaIraiS" +
                "hokenRenban], [ShokenKbn], [ShokenCd], [ShokenHyojiichi], [ShokenTegaki], [Shoke" +
                "nCheckKomoku], [ShokenCheckHantei], [ShokenShitekiKashoNo], [ShokenSetchishaRenr" +
                "akuFlg], [ShokenHoshuGyoshaRenrakuFlg], [ShokenSeisoGyoshaRenrakuFlg], [ShokenKo" +
                "jiGyoshaRenrakuFlg], [ShokenMakerRenrakuFlg], [ShokenHokenjoRenrakuFlg], [Shoken" +
                "HoshuKeiyakuKakuninFlg], [ShokenTenkenKaisuuKakuninFlg], [ShokenSeisouKaisuuKaku" +
                "ninFlg], [TaniSochiNm], [InsertDt], [InsertUser], [InsertTarm], [UpdateDt], [Upd" +
                "ateUser], [UpdateTarm]) VALUES (@KensaIraiShokanIraiHoteiKbn, @KensaIraiShokenIr" +
                "aiHokenjoCd, @KensaIraiShokenIraiNendo, @KensaIraiShokenIraiRenban, @KensaIraiSh" +
                "okenRenban, @ShokenKbn, @ShokenCd, @ShokenHyojiichi, @ShokenTegaki, @ShokenCheck" +
                "Komoku, @ShokenCheckHantei, @ShokenShitekiKashoNo, @ShokenSetchishaRenrakuFlg, @" +
                "ShokenHoshuGyoshaRenrakuFlg, @ShokenSeisoGyoshaRenrakuFlg, @ShokenKojiGyoshaRenr" +
                "akuFlg, @ShokenMakerRenrakuFlg, @ShokenHokenjoRenrakuFlg, @ShokenHoshuKeiyakuKak" +
                "uninFlg, @ShokenTenkenKaisuuKakuninFlg, @ShokenSeisouKaisuuKakuninFlg, @TaniSoch" +
                "iNm, @InsertDt, @InsertUser, @InsertTarm, @UpdateDt, @UpdateUser, @UpdateTarm);\r" +
                "\nSELECT KensaIraiShokanIraiHoteiKbn, KensaIraiShokenIraiHokenjoCd, KensaIraiShok" +
                "enIraiNendo, KensaIraiShokenIraiRenban, KensaIraiShokenRenban, ShokenKbn, Shoken" +
                "Cd, ShokenHyojiichi, ShokenTegaki, ShokenCheckKomoku, ShokenCheckHantei, ShokenS" +
                "hitekiKashoNo, ShokenSetchishaRenrakuFlg, ShokenHoshuGyoshaRenrakuFlg, ShokenSei" +
                "soGyoshaRenrakuFlg, ShokenKojiGyoshaRenrakuFlg, ShokenMakerRenrakuFlg, ShokenHok" +
                "enjoRenrakuFlg, ShokenHoshuKeiyakuKakuninFlg, ShokenTenkenKaisuuKakuninFlg, Shok" +
                "enSeisouKaisuuKakuninFlg, TaniSochiNm, InsertDt, InsertUser, InsertTarm, UpdateD" +
                "t, UpdateUser, UpdateTarm FROM ShokenKekkaTbl WHERE (KensaIraiShokanIraiHoteiKbn" +
                " = @KensaIraiShokanIraiHoteiKbn) AND (KensaIraiShokenIraiHokenjoCd = @KensaIraiS" +
                "hokenIraiHokenjoCd) AND (KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo) A" +
                "ND (KensaIraiShokenIraiRenban = @KensaIraiShokenIraiRenban) AND (KensaIraiShoken" +
                "Renban = @KensaIraiShokenRenban)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyojiichi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenTegaki", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCheckKomoku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCheckHantei", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenShitekiKashoNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSetchishaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisoGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKojiGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenMakerRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHokenjoRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuKeiyakuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenTenkenKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisouKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaniSochiNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ShokenKekkaTbl] SET [KensaIraiShokanIraiHoteiKbn] = @KensaIraiShokanIraiH" +
                "oteiKbn, [KensaIraiShokenIraiHokenjoCd] = @KensaIraiShokenIraiHokenjoCd, [KensaI" +
                "raiShokenIraiNendo] = @KensaIraiShokenIraiNendo, [KensaIraiShokenIraiRenban] = @" +
                "KensaIraiShokenIraiRenban, [KensaIraiShokenRenban] = @KensaIraiShokenRenban, [Sh" +
                "okenKbn] = @ShokenKbn, [ShokenCd] = @ShokenCd, [ShokenHyojiichi] = @ShokenHyojii" +
                "chi, [ShokenTegaki] = @ShokenTegaki, [ShokenCheckKomoku] = @ShokenCheckKomoku, [" +
                "ShokenCheckHantei] = @ShokenCheckHantei, [ShokenShitekiKashoNo] = @ShokenShiteki" +
                "KashoNo, [ShokenSetchishaRenrakuFlg] = @ShokenSetchishaRenrakuFlg, [ShokenHoshuG" +
                "yoshaRenrakuFlg] = @ShokenHoshuGyoshaRenrakuFlg, [ShokenSeisoGyoshaRenrakuFlg] =" +
                " @ShokenSeisoGyoshaRenrakuFlg, [ShokenKojiGyoshaRenrakuFlg] = @ShokenKojiGyoshaR" +
                "enrakuFlg, [ShokenMakerRenrakuFlg] = @ShokenMakerRenrakuFlg, [ShokenHokenjoRenra" +
                "kuFlg] = @ShokenHokenjoRenrakuFlg, [ShokenHoshuKeiyakuKakuninFlg] = @ShokenHoshu" +
                "KeiyakuKakuninFlg, [ShokenTenkenKaisuuKakuninFlg] = @ShokenTenkenKaisuuKakuninFl" +
                "g, [ShokenSeisouKaisuuKakuninFlg] = @ShokenSeisouKaisuuKakuninFlg, [TaniSochiNm]" +
                " = @TaniSochiNm, [InsertDt] = @InsertDt, [InsertUser] = @InsertUser, [InsertTarm" +
                "] = @InsertTarm, [UpdateDt] = @UpdateDt, [UpdateUser] = @UpdateUser, [UpdateTarm" +
                "] = @UpdateTarm WHERE (([KensaIraiShokanIraiHoteiKbn] = @Original_KensaIraiShoka" +
                "nIraiHoteiKbn) AND ([KensaIraiShokenIraiHokenjoCd] = @Original_KensaIraiShokenIr" +
                "aiHokenjoCd) AND ([KensaIraiShokenIraiNendo] = @Original_KensaIraiShokenIraiNend" +
                "o) AND ([KensaIraiShokenIraiRenban] = @Original_KensaIraiShokenIraiRenban) AND (" +
                "[KensaIraiShokenRenban] = @Original_KensaIraiShokenRenban) AND ([ShokenKbn] = @O" +
                "riginal_ShokenKbn) AND ([ShokenCd] = @Original_ShokenCd) AND ((@IsNull_ShokenHyo" +
                "jiichi = 1 AND [ShokenHyojiichi] IS NULL) OR ([ShokenHyojiichi] = @Original_Shok" +
                "enHyojiichi)) AND ((@IsNull_ShokenTegaki = 1 AND [ShokenTegaki] IS NULL) OR ([Sh" +
                "okenTegaki] = @Original_ShokenTegaki)) AND ((@IsNull_ShokenCheckKomoku = 1 AND [" +
                "ShokenCheckKomoku] IS NULL) OR ([ShokenCheckKomoku] = @Original_ShokenCheckKomok" +
                "u)) AND ((@IsNull_ShokenCheckHantei = 1 AND [ShokenCheckHantei] IS NULL) OR ([Sh" +
                "okenCheckHantei] = @Original_ShokenCheckHantei)) AND ((@IsNull_ShokenShitekiKash" +
                "oNo = 1 AND [ShokenShitekiKashoNo] IS NULL) OR ([ShokenShitekiKashoNo] = @Origin" +
                "al_ShokenShitekiKashoNo)) AND ((@IsNull_ShokenSetchishaRenrakuFlg = 1 AND [Shoke" +
                "nSetchishaRenrakuFlg] IS NULL) OR ([ShokenSetchishaRenrakuFlg] = @Original_Shoke" +
                "nSetchishaRenrakuFlg)) AND ((@IsNull_ShokenHoshuGyoshaRenrakuFlg = 1 AND [Shoken" +
                "HoshuGyoshaRenrakuFlg] IS NULL) OR ([ShokenHoshuGyoshaRenrakuFlg] = @Original_Sh" +
                "okenHoshuGyoshaRenrakuFlg)) AND ((@IsNull_ShokenSeisoGyoshaRenrakuFlg = 1 AND [S" +
                "hokenSeisoGyoshaRenrakuFlg] IS NULL) OR ([ShokenSeisoGyoshaRenrakuFlg] = @Origin" +
                "al_ShokenSeisoGyoshaRenrakuFlg)) AND ((@IsNull_ShokenKojiGyoshaRenrakuFlg = 1 AN" +
                "D [ShokenKojiGyoshaRenrakuFlg] IS NULL) OR ([ShokenKojiGyoshaRenrakuFlg] = @Orig" +
                "inal_ShokenKojiGyoshaRenrakuFlg)) AND ((@IsNull_ShokenMakerRenrakuFlg = 1 AND [S" +
                "hokenMakerRenrakuFlg] IS NULL) OR ([ShokenMakerRenrakuFlg] = @Original_ShokenMak" +
                "erRenrakuFlg)) AND ((@IsNull_ShokenHokenjoRenrakuFlg = 1 AND [ShokenHokenjoRenra" +
                "kuFlg] IS NULL) OR ([ShokenHokenjoRenrakuFlg] = @Original_ShokenHokenjoRenrakuFl" +
                "g)) AND ((@IsNull_ShokenHoshuKeiyakuKakuninFlg = 1 AND [ShokenHoshuKeiyakuKakuni" +
                "nFlg] IS NULL) OR ([ShokenHoshuKeiyakuKakuninFlg] = @Original_ShokenHoshuKeiyaku" +
                "KakuninFlg)) AND ((@IsNull_ShokenTenkenKaisuuKakuninFlg = 1 AND [ShokenTenkenKai" +
                "suuKakuninFlg] IS NULL) OR ([ShokenTenkenKaisuuKakuninFlg] = @Original_ShokenTen" +
                "kenKaisuuKakuninFlg)) AND ((@IsNull_ShokenSeisouKaisuuKakuninFlg = 1 AND [Shoken" +
                "SeisouKaisuuKakuninFlg] IS NULL) OR ([ShokenSeisouKaisuuKakuninFlg] = @Original_" +
                "ShokenSeisouKaisuuKakuninFlg)) AND ((@IsNull_TaniSochiNm = 1 AND [TaniSochiNm] I" +
                "S NULL) OR ([TaniSochiNm] = @Original_TaniSochiNm)) AND ([InsertDt] = @Original_" +
                "InsertDt) AND ([InsertUser] = @Original_InsertUser) AND ([InsertTarm] = @Origina" +
                "l_InsertTarm) AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateUser] = @Origina" +
                "l_UpdateUser) AND ([UpdateTarm] = @Original_UpdateTarm));\r\nSELECT KensaIraiShoka" +
                "nIraiHoteiKbn, KensaIraiShokenIraiHokenjoCd, KensaIraiShokenIraiNendo, KensaIrai" +
                "ShokenIraiRenban, KensaIraiShokenRenban, ShokenKbn, ShokenCd, ShokenHyojiichi, S" +
                "hokenTegaki, ShokenCheckKomoku, ShokenCheckHantei, ShokenShitekiKashoNo, ShokenS" +
                "etchishaRenrakuFlg, ShokenHoshuGyoshaRenrakuFlg, ShokenSeisoGyoshaRenrakuFlg, Sh" +
                "okenKojiGyoshaRenrakuFlg, ShokenMakerRenrakuFlg, ShokenHokenjoRenrakuFlg, Shoken" +
                "HoshuKeiyakuKakuninFlg, ShokenTenkenKaisuuKakuninFlg, ShokenSeisouKaisuuKakuninF" +
                "lg, TaniSochiNm, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateT" +
                "arm FROM ShokenKekkaTbl WHERE (KensaIraiShokanIraiHoteiKbn = @KensaIraiShokanIra" +
                "iHoteiKbn) AND (KensaIraiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd) AN" +
                "D (KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo) AND (KensaIraiShokenIra" +
                "iRenban = @KensaIraiShokenIraiRenban) AND (KensaIraiShokenRenban = @KensaIraiSho" +
                "kenRenban)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyojiichi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenTegaki", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCheckKomoku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCheckHantei", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenShitekiKashoNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSetchishaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisoGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKojiGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenMakerRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHokenjoRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuKeiyakuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenTenkenKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisouKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaniSochiNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KensaIraiShokenRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHyojiichi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyojiichi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenTegaki", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenTegaki", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenCheckKomoku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCheckKomoku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenCheckHantei", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCheckHantei", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenShitekiKashoNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenShitekiKashoNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenSetchishaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSetchishaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHoshuGyoshaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenSeisoGyoshaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisoGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenKojiGyoshaRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKojiGyoshaRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenMakerRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenMakerRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHokenjoRenrakuFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHokenjoRenrakuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenHoshuKeiyakuKakuninFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuKeiyakuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenTenkenKaisuuKakuninFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenTenkenKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShokenSeisouKaisuuKakuninFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisouKaisuuKakuninFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TaniSochiNm", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TaniSochiNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          KensaIraiShokanIraiHoteiKbn, KensaIraiShokenIraiHokenjoCd, 
                      KensaIraiShokenIraiNendo, KensaIraiShokenIraiRenban, KensaIraiShokenRenban, 
                      ShokenKbn, ShokenCd, ShokenHyojiichi, ShokenTegaki, ShokenCheckKomoku, 
                      ShokenCheckHantei, ShokenShitekiKashoNo, ShokenSetchishaRenrakuFlg, 
                      ShokenHoshuGyoshaRenrakuFlg, ShokenSeisoGyoshaRenrakuFlg, 
                      ShokenKojiGyoshaRenrakuFlg, ShokenMakerRenrakuFlg, 
                      ShokenHokenjoRenrakuFlg, ShokenHoshuKeiyakuKakuninFlg, 
                      ShokenTenkenKaisuuKakuninFlg, ShokenSeisouKaisuuKakuninFlg, TaniSochiNm, 
                      InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm
FROM            ShokenKekkaTbl";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"DELETE FROM dbo.ShokenKekkaTbl
where
KensaIraiShokanIraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn and
KensaIraiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd and
KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo and
KensaIraiShokenIraiRenban = @KensaIraiShokenIraiRenban";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"DELETE FROM ShokenKekkaTbl
WHERE           (KensaIraiShokanIraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn) AND 
                      (KensaIraiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd) AND 
                      (KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo) AND 
                      (KensaIraiShokenIraiRenban = @KensaIraiShokenIraiRenban)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT          KensaIraiShokanIraiHoteiKbn, KensaIraiShokenIraiHokenjoCd, 
                      KensaIraiShokenIraiNendo, KensaIraiShokenIraiRenban, KensaIraiShokenRenban, 
                      ShokenKbn, ShokenCd, ShokenHyojiichi, ShokenTegaki, ShokenCheckKomoku, 
                      ShokenCheckHantei, ShokenShitekiKashoNo, ShokenSetchishaRenrakuFlg, 
                      ShokenHoshuGyoshaRenrakuFlg, ShokenSeisoGyoshaRenrakuFlg, 
                      ShokenKojiGyoshaRenrakuFlg, ShokenMakerRenrakuFlg, 
                      ShokenHokenjoRenrakuFlg, ShokenHoshuKeiyakuKakuninFlg, 
                      ShokenTenkenKaisuuKakuninFlg, ShokenSeisouKaisuuKakuninFlg, TaniSochiNm, 
                      InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm
FROM            ShokenKekkaTbl
WHERE           (KensaIraiShokanIraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn) AND 
                      (KensaIraiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd) AND 
                      (KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo) AND 
                      (KensaIraiShokenIraiRenban = @KensaIraiShokenIraiRenban)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKensaIraiKey(ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable, string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaTblDataTable GetDataByKensaIraiKey(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokenKekkaTblDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ShokenKekkaTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_KensaIraiShokanIraiHoteiKbn, 
                    string Original_KensaIraiShokenIraiHokenjoCd, 
                    string Original_KensaIraiShokenIraiNendo, 
                    string Original_KensaIraiShokenIraiRenban, 
                    string Original_KensaIraiShokenRenban, 
                    string Original_ShokenKbn, 
                    string Original_ShokenCd, 
                    global::System.Nullable<int> Original_ShokenHyojiichi, 
                    string Original_ShokenTegaki, 
                    string Original_ShokenCheckKomoku, 
                    string Original_ShokenCheckHantei, 
                    string Original_ShokenShitekiKashoNo, 
                    string Original_ShokenSetchishaRenrakuFlg, 
                    string Original_ShokenHoshuGyoshaRenrakuFlg, 
                    string Original_ShokenSeisoGyoshaRenrakuFlg, 
                    string Original_ShokenKojiGyoshaRenrakuFlg, 
                    string Original_ShokenMakerRenrakuFlg, 
                    string Original_ShokenHokenjoRenrakuFlg, 
                    string Original_ShokenHoshuKeiyakuKakuninFlg, 
                    string Original_ShokenTenkenKaisuuKakuninFlg, 
                    string Original_ShokenSeisouKaisuuKakuninFlg, 
                    string Original_TaniSochiNm, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((Original_KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_KensaIraiShokanIraiHoteiKbn));
            }
            if ((Original_KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_KensaIraiShokenIraiHokenjoCd));
            }
            if ((Original_KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_KensaIraiShokenIraiNendo));
            }
            if ((Original_KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KensaIraiShokenIraiRenban));
            }
            if ((Original_KensaIraiShokenRenban == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenRenban");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KensaIraiShokenRenban));
            }
            if ((Original_ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ShokenKbn));
            }
            if ((Original_ShokenCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ShokenCd));
            }
            if ((Original_ShokenHyojiichi.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ShokenHyojiichi.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ShokenTegaki == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ShokenTegaki));
            }
            if ((Original_ShokenCheckKomoku == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ShokenCheckKomoku));
            }
            if ((Original_ShokenCheckHantei == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ShokenCheckHantei));
            }
            if ((Original_ShokenShitekiKashoNo == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ShokenShitekiKashoNo));
            }
            if ((Original_ShokenSetchishaRenrakuFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ShokenSetchishaRenrakuFlg));
            }
            if ((Original_ShokenHoshuGyoshaRenrakuFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_ShokenHoshuGyoshaRenrakuFlg));
            }
            if ((Original_ShokenSeisoGyoshaRenrakuFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_ShokenSeisoGyoshaRenrakuFlg));
            }
            if ((Original_ShokenKojiGyoshaRenrakuFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ShokenKojiGyoshaRenrakuFlg));
            }
            if ((Original_ShokenMakerRenrakuFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ShokenMakerRenrakuFlg));
            }
            if ((Original_ShokenHokenjoRenrakuFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_ShokenHokenjoRenrakuFlg));
            }
            if ((Original_ShokenHoshuKeiyakuKakuninFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_ShokenHoshuKeiyakuKakuninFlg));
            }
            if ((Original_ShokenTenkenKaisuuKakuninFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_ShokenTenkenKaisuuKakuninFlg));
            }
            if ((Original_ShokenSeisouKaisuuKakuninFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ShokenSeisouKaisuuKakuninFlg));
            }
            if ((Original_TaniSochiNm == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_TaniSochiNm));
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.DeleteCommand.Parameters[40].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string KensaIraiShokanIraiHoteiKbn, 
                    string KensaIraiShokenIraiHokenjoCd, 
                    string KensaIraiShokenIraiNendo, 
                    string KensaIraiShokenIraiRenban, 
                    string KensaIraiShokenRenban, 
                    string ShokenKbn, 
                    string ShokenCd, 
                    global::System.Nullable<int> ShokenHyojiichi, 
                    string ShokenTegaki, 
                    string ShokenCheckKomoku, 
                    string ShokenCheckHantei, 
                    string ShokenShitekiKashoNo, 
                    string ShokenSetchishaRenrakuFlg, 
                    string ShokenHoshuGyoshaRenrakuFlg, 
                    string ShokenSeisoGyoshaRenrakuFlg, 
                    string ShokenKojiGyoshaRenrakuFlg, 
                    string ShokenMakerRenrakuFlg, 
                    string ShokenHokenjoRenrakuFlg, 
                    string ShokenHoshuKeiyakuKakuninFlg, 
                    string ShokenTenkenKaisuuKakuninFlg, 
                    string ShokenSeisouKaisuuKakuninFlg, 
                    string TaniSochiNm, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm) {
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            if ((KensaIraiShokenRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenRenban");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KensaIraiShokenRenban));
            }
            if ((ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ShokenKbn));
            }
            if ((ShokenCd == null)) {
                throw new global::System.ArgumentNullException("ShokenCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ShokenCd));
            }
            if ((ShokenHyojiichi.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ShokenHyojiichi.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ShokenTegaki == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ShokenTegaki));
            }
            if ((ShokenCheckKomoku == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ShokenCheckKomoku));
            }
            if ((ShokenCheckHantei == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ShokenCheckHantei));
            }
            if ((ShokenShitekiKashoNo == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ShokenShitekiKashoNo));
            }
            if ((ShokenSetchishaRenrakuFlg == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ShokenSetchishaRenrakuFlg));
            }
            if ((ShokenHoshuGyoshaRenrakuFlg == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ShokenHoshuGyoshaRenrakuFlg));
            }
            if ((ShokenSeisoGyoshaRenrakuFlg == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ShokenSeisoGyoshaRenrakuFlg));
            }
            if ((ShokenKojiGyoshaRenrakuFlg == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ShokenKojiGyoshaRenrakuFlg));
            }
            if ((ShokenMakerRenrakuFlg == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ShokenMakerRenrakuFlg));
            }
            if ((ShokenHokenjoRenrakuFlg == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ShokenHokenjoRenrakuFlg));
            }
            if ((ShokenHoshuKeiyakuKakuninFlg == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ShokenHoshuKeiyakuKakuninFlg));
            }
            if ((ShokenTenkenKaisuuKakuninFlg == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ShokenTenkenKaisuuKakuninFlg));
            }
            if ((ShokenSeisouKaisuuKakuninFlg == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ShokenSeisouKaisuuKakuninFlg));
            }
            if ((TaniSochiNm == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(TaniSochiNm));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(InsertTarm));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string KensaIraiShokanIraiHoteiKbn, 
                    string KensaIraiShokenIraiHokenjoCd, 
                    string KensaIraiShokenIraiNendo, 
                    string KensaIraiShokenIraiRenban, 
                    string KensaIraiShokenRenban, 
                    string ShokenKbn, 
                    string ShokenCd, 
                    global::System.Nullable<int> ShokenHyojiichi, 
                    string ShokenTegaki, 
                    string ShokenCheckKomoku, 
                    string ShokenCheckHantei, 
                    string ShokenShitekiKashoNo, 
                    string ShokenSetchishaRenrakuFlg, 
                    string ShokenHoshuGyoshaRenrakuFlg, 
                    string ShokenSeisoGyoshaRenrakuFlg, 
                    string ShokenKojiGyoshaRenrakuFlg, 
                    string ShokenMakerRenrakuFlg, 
                    string ShokenHokenjoRenrakuFlg, 
                    string ShokenHoshuKeiyakuKakuninFlg, 
                    string ShokenTenkenKaisuuKakuninFlg, 
                    string ShokenSeisouKaisuuKakuninFlg, 
                    string TaniSochiNm, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_KensaIraiShokanIraiHoteiKbn, 
                    string Original_KensaIraiShokenIraiHokenjoCd, 
                    string Original_KensaIraiShokenIraiNendo, 
                    string Original_KensaIraiShokenIraiRenban, 
                    string Original_KensaIraiShokenRenban, 
                    string Original_ShokenKbn, 
                    string Original_ShokenCd, 
                    global::System.Nullable<int> Original_ShokenHyojiichi, 
                    string Original_ShokenTegaki, 
                    string Original_ShokenCheckKomoku, 
                    string Original_ShokenCheckHantei, 
                    string Original_ShokenShitekiKashoNo, 
                    string Original_ShokenSetchishaRenrakuFlg, 
                    string Original_ShokenHoshuGyoshaRenrakuFlg, 
                    string Original_ShokenSeisoGyoshaRenrakuFlg, 
                    string Original_ShokenKojiGyoshaRenrakuFlg, 
                    string Original_ShokenMakerRenrakuFlg, 
                    string Original_ShokenHokenjoRenrakuFlg, 
                    string Original_ShokenHoshuKeiyakuKakuninFlg, 
                    string Original_ShokenTenkenKaisuuKakuninFlg, 
                    string Original_ShokenSeisouKaisuuKakuninFlg, 
                    string Original_TaniSochiNm, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            if ((KensaIraiShokenRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenRenban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KensaIraiShokenRenban));
            }
            if ((ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ShokenKbn));
            }
            if ((ShokenCd == null)) {
                throw new global::System.ArgumentNullException("ShokenCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ShokenCd));
            }
            if ((ShokenHyojiichi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ShokenHyojiichi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ShokenTegaki == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ShokenTegaki));
            }
            if ((ShokenCheckKomoku == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ShokenCheckKomoku));
            }
            if ((ShokenCheckHantei == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ShokenCheckHantei));
            }
            if ((ShokenShitekiKashoNo == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ShokenShitekiKashoNo));
            }
            if ((ShokenSetchishaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ShokenSetchishaRenrakuFlg));
            }
            if ((ShokenHoshuGyoshaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ShokenHoshuGyoshaRenrakuFlg));
            }
            if ((ShokenSeisoGyoshaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ShokenSeisoGyoshaRenrakuFlg));
            }
            if ((ShokenKojiGyoshaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ShokenKojiGyoshaRenrakuFlg));
            }
            if ((ShokenMakerRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ShokenMakerRenrakuFlg));
            }
            if ((ShokenHokenjoRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ShokenHokenjoRenrakuFlg));
            }
            if ((ShokenHoshuKeiyakuKakuninFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ShokenHoshuKeiyakuKakuninFlg));
            }
            if ((ShokenTenkenKaisuuKakuninFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(ShokenTenkenKaisuuKakuninFlg));
            }
            if ((ShokenSeisouKaisuuKakuninFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ShokenSeisouKaisuuKakuninFlg));
            }
            if ((TaniSochiNm == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(TaniSochiNm));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(UpdateTarm));
            }
            if ((Original_KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_KensaIraiShokanIraiHoteiKbn));
            }
            if ((Original_KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_KensaIraiShokenIraiHokenjoCd));
            }
            if ((Original_KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_KensaIraiShokenIraiNendo));
            }
            if ((Original_KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_KensaIraiShokenIraiRenban));
            }
            if ((Original_KensaIraiShokenRenban == null)) {
                throw new global::System.ArgumentNullException("Original_KensaIraiShokenRenban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_KensaIraiShokenRenban));
            }
            if ((Original_ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ShokenKbn));
            }
            if ((Original_ShokenCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ShokenCd));
            }
            if ((Original_ShokenHyojiichi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_ShokenHyojiichi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ShokenTegaki == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_ShokenTegaki));
            }
            if ((Original_ShokenCheckKomoku == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_ShokenCheckKomoku));
            }
            if ((Original_ShokenCheckHantei == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_ShokenCheckHantei));
            }
            if ((Original_ShokenShitekiKashoNo == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_ShokenShitekiKashoNo));
            }
            if ((Original_ShokenSetchishaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_ShokenSetchishaRenrakuFlg));
            }
            if ((Original_ShokenHoshuGyoshaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ShokenHoshuGyoshaRenrakuFlg));
            }
            if ((Original_ShokenSeisoGyoshaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_ShokenSeisoGyoshaRenrakuFlg));
            }
            if ((Original_ShokenKojiGyoshaRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ShokenKojiGyoshaRenrakuFlg));
            }
            if ((Original_ShokenMakerRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_ShokenMakerRenrakuFlg));
            }
            if ((Original_ShokenHokenjoRenrakuFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ShokenHokenjoRenrakuFlg));
            }
            if ((Original_ShokenHoshuKeiyakuKakuninFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_ShokenHoshuKeiyakuKakuninFlg));
            }
            if ((Original_ShokenTenkenKaisuuKakuninFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_ShokenTenkenKaisuuKakuninFlg));
            }
            if ((Original_ShokenSeisouKaisuuKakuninFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_ShokenSeisouKaisuuKakuninFlg));
            }
            if ((Original_TaniSochiNm == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_TaniSochiNm));
            }
            this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ShokenKbn, 
                    string ShokenCd, 
                    global::System.Nullable<int> ShokenHyojiichi, 
                    string ShokenTegaki, 
                    string ShokenCheckKomoku, 
                    string ShokenCheckHantei, 
                    string ShokenShitekiKashoNo, 
                    string ShokenSetchishaRenrakuFlg, 
                    string ShokenHoshuGyoshaRenrakuFlg, 
                    string ShokenSeisoGyoshaRenrakuFlg, 
                    string ShokenKojiGyoshaRenrakuFlg, 
                    string ShokenMakerRenrakuFlg, 
                    string ShokenHokenjoRenrakuFlg, 
                    string ShokenHoshuKeiyakuKakuninFlg, 
                    string ShokenTenkenKaisuuKakuninFlg, 
                    string ShokenSeisouKaisuuKakuninFlg, 
                    string TaniSochiNm, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_KensaIraiShokanIraiHoteiKbn, 
                    string Original_KensaIraiShokenIraiHokenjoCd, 
                    string Original_KensaIraiShokenIraiNendo, 
                    string Original_KensaIraiShokenIraiRenban, 
                    string Original_KensaIraiShokenRenban, 
                    string Original_ShokenKbn, 
                    string Original_ShokenCd, 
                    global::System.Nullable<int> Original_ShokenHyojiichi, 
                    string Original_ShokenTegaki, 
                    string Original_ShokenCheckKomoku, 
                    string Original_ShokenCheckHantei, 
                    string Original_ShokenShitekiKashoNo, 
                    string Original_ShokenSetchishaRenrakuFlg, 
                    string Original_ShokenHoshuGyoshaRenrakuFlg, 
                    string Original_ShokenSeisoGyoshaRenrakuFlg, 
                    string Original_ShokenKojiGyoshaRenrakuFlg, 
                    string Original_ShokenMakerRenrakuFlg, 
                    string Original_ShokenHokenjoRenrakuFlg, 
                    string Original_ShokenHoshuKeiyakuKakuninFlg, 
                    string Original_ShokenTenkenKaisuuKakuninFlg, 
                    string Original_ShokenSeisouKaisuuKakuninFlg, 
                    string Original_TaniSochiNm, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            return this.Update(Original_KensaIraiShokanIraiHoteiKbn, Original_KensaIraiShokenIraiHokenjoCd, Original_KensaIraiShokenIraiNendo, Original_KensaIraiShokenIraiRenban, Original_KensaIraiShokenRenban, ShokenKbn, ShokenCd, ShokenHyojiichi, ShokenTegaki, ShokenCheckKomoku, ShokenCheckHantei, ShokenShitekiKashoNo, ShokenSetchishaRenrakuFlg, ShokenHoshuGyoshaRenrakuFlg, ShokenSeisoGyoshaRenrakuFlg, ShokenKojiGyoshaRenrakuFlg, ShokenMakerRenrakuFlg, ShokenHokenjoRenrakuFlg, ShokenHoshuKeiyakuKakuninFlg, ShokenTenkenKaisuuKakuninFlg, ShokenSeisouKaisuuKakuninFlg, TaniSochiNm, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, Original_KensaIraiShokanIraiHoteiKbn, Original_KensaIraiShokenIraiHokenjoCd, Original_KensaIraiShokenIraiNendo, Original_KensaIraiShokenIraiRenban, Original_KensaIraiShokenRenban, Original_ShokenKbn, Original_ShokenCd, Original_ShokenHyojiichi, Original_ShokenTegaki, Original_ShokenCheckKomoku, Original_ShokenCheckHantei, Original_ShokenShitekiKashoNo, Original_ShokenSetchishaRenrakuFlg, Original_ShokenHoshuGyoshaRenrakuFlg, Original_ShokenSeisoGyoshaRenrakuFlg, Original_ShokenKojiGyoshaRenrakuFlg, Original_ShokenMakerRenrakuFlg, Original_ShokenHokenjoRenrakuFlg, Original_ShokenHoshuKeiyakuKakuninFlg, Original_ShokenTenkenKaisuuKakuninFlg, Original_ShokenSeisouKaisuuKakuninFlg, Original_TaniSochiNm, Original_InsertDt, Original_InsertUser, Original_InsertTarm, Original_UpdateDt, Original_UpdateUser, Original_UpdateTarm);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByKensaIraiKey(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                command.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                command.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                command.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                command.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByKensaIraiNo(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                command.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                command.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                command.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                command.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ShokenKekkaTblTableAdapter _shokenKekkaTblTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ShokenKekkaTblTableAdapter ShokenKekkaTblTableAdapter {
            get {
                return this._shokenKekkaTblTableAdapter;
            }
            set {
                this._shokenKekkaTblTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._shokenKekkaTblTableAdapter != null) 
                            && (this._shokenKekkaTblTableAdapter.Connection != null))) {
                    return this._shokenKekkaTblTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._shokenKekkaTblTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ShokenKekkaTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokenKekkaTblTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ShokenKekkaTbl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._shokenKekkaTblTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ShokenKekkaTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokenKekkaTblTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ShokenKekkaTbl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._shokenKekkaTblTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ShokenKekkaTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._shokenKekkaTblTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ShokenKekkaTbl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._shokenKekkaTblTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ShokenKekkaTblDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._shokenKekkaTblTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._shokenKekkaTblTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._shokenKekkaTblTableAdapter != null)) {
                    revertConnections.Add(this._shokenKekkaTblTableAdapter, this._shokenKekkaTblTableAdapter.Connection);
                    this._shokenKekkaTblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._shokenKekkaTblTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._shokenKekkaTblTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._shokenKekkaTblTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._shokenKekkaTblTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._shokenKekkaTblTableAdapter != null)) {
                    this._shokenKekkaTblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._shokenKekkaTblTableAdapter]));
                    this._shokenKekkaTblTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591