//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjBizSystem.Application.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ChikuMstDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ChikuMstDataSet : global::System.Data.DataSet {
        
        private ChikuMstDataTable tableChikuMst;
        
        private ChikuMstKensakuDataTable tableChikuMstKensaku;
        
        private ChikuMstSearchCommonDataTable tableChikuMstSearchCommon;
        
        private ChikuwariCdListDataTable tableChikuwariCdList;
        
        private ShikuchosonInfoDataTable tableShikuchosonInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ChikuMstDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ChikuMstDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ChikuMst"] != null)) {
                    base.Tables.Add(new ChikuMstDataTable(ds.Tables["ChikuMst"]));
                }
                if ((ds.Tables["ChikuMstKensaku"] != null)) {
                    base.Tables.Add(new ChikuMstKensakuDataTable(ds.Tables["ChikuMstKensaku"]));
                }
                if ((ds.Tables["ChikuMstSearchCommon"] != null)) {
                    base.Tables.Add(new ChikuMstSearchCommonDataTable(ds.Tables["ChikuMstSearchCommon"]));
                }
                if ((ds.Tables["ChikuwariCdList"] != null)) {
                    base.Tables.Add(new ChikuwariCdListDataTable(ds.Tables["ChikuwariCdList"]));
                }
                if ((ds.Tables["ShikuchosonInfo"] != null)) {
                    base.Tables.Add(new ShikuchosonInfoDataTable(ds.Tables["ShikuchosonInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChikuMstDataTable ChikuMst {
            get {
                return this.tableChikuMst;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChikuMstKensakuDataTable ChikuMstKensaku {
            get {
                return this.tableChikuMstKensaku;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChikuMstSearchCommonDataTable ChikuMstSearchCommon {
            get {
                return this.tableChikuMstSearchCommon;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChikuwariCdListDataTable ChikuwariCdList {
            get {
                return this.tableChikuwariCdList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShikuchosonInfoDataTable ShikuchosonInfo {
            get {
                return this.tableShikuchosonInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ChikuMstDataSet cln = ((ChikuMstDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ChikuMst"] != null)) {
                    base.Tables.Add(new ChikuMstDataTable(ds.Tables["ChikuMst"]));
                }
                if ((ds.Tables["ChikuMstKensaku"] != null)) {
                    base.Tables.Add(new ChikuMstKensakuDataTable(ds.Tables["ChikuMstKensaku"]));
                }
                if ((ds.Tables["ChikuMstSearchCommon"] != null)) {
                    base.Tables.Add(new ChikuMstSearchCommonDataTable(ds.Tables["ChikuMstSearchCommon"]));
                }
                if ((ds.Tables["ChikuwariCdList"] != null)) {
                    base.Tables.Add(new ChikuwariCdListDataTable(ds.Tables["ChikuwariCdList"]));
                }
                if ((ds.Tables["ShikuchosonInfo"] != null)) {
                    base.Tables.Add(new ShikuchosonInfoDataTable(ds.Tables["ShikuchosonInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableChikuMst = ((ChikuMstDataTable)(base.Tables["ChikuMst"]));
            if ((initTable == true)) {
                if ((this.tableChikuMst != null)) {
                    this.tableChikuMst.InitVars();
                }
            }
            this.tableChikuMstKensaku = ((ChikuMstKensakuDataTable)(base.Tables["ChikuMstKensaku"]));
            if ((initTable == true)) {
                if ((this.tableChikuMstKensaku != null)) {
                    this.tableChikuMstKensaku.InitVars();
                }
            }
            this.tableChikuMstSearchCommon = ((ChikuMstSearchCommonDataTable)(base.Tables["ChikuMstSearchCommon"]));
            if ((initTable == true)) {
                if ((this.tableChikuMstSearchCommon != null)) {
                    this.tableChikuMstSearchCommon.InitVars();
                }
            }
            this.tableChikuwariCdList = ((ChikuwariCdListDataTable)(base.Tables["ChikuwariCdList"]));
            if ((initTable == true)) {
                if ((this.tableChikuwariCdList != null)) {
                    this.tableChikuwariCdList.InitVars();
                }
            }
            this.tableShikuchosonInfo = ((ShikuchosonInfoDataTable)(base.Tables["ShikuchosonInfo"]));
            if ((initTable == true)) {
                if ((this.tableShikuchosonInfo != null)) {
                    this.tableShikuchosonInfo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ChikuMstDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ChikuMstDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableChikuMst = new ChikuMstDataTable();
            base.Tables.Add(this.tableChikuMst);
            this.tableChikuMstKensaku = new ChikuMstKensakuDataTable();
            base.Tables.Add(this.tableChikuMstKensaku);
            this.tableChikuMstSearchCommon = new ChikuMstSearchCommonDataTable();
            base.Tables.Add(this.tableChikuMstSearchCommon);
            this.tableChikuwariCdList = new ChikuwariCdListDataTable();
            base.Tables.Add(this.tableChikuwariCdList);
            this.tableShikuchosonInfo = new ShikuchosonInfoDataTable();
            base.Tables.Add(this.tableShikuchosonInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeChikuMst() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeChikuMstKensaku() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeChikuMstSearchCommon() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeChikuwariCdList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShikuchosonInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ChikuMstDataSet ds = new ChikuMstDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ChikuMstRowChangeEventHandler(object sender, ChikuMstRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ChikuMstKensakuRowChangeEventHandler(object sender, ChikuMstKensakuRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ChikuMstSearchCommonRowChangeEventHandler(object sender, ChikuMstSearchCommonRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ChikuwariCdListRowChangeEventHandler(object sender, ChikuwariCdListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShikuchosonInfoRowChangeEventHandler(object sender, ShikuchosonInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChikuMstDataTable : global::System.Data.TypedTableBase<ChikuMstRow> {
            
            private global::System.Data.DataColumn columnChikuCd;
            
            private global::System.Data.DataColumn columnChikuNm;
            
            private global::System.Data.DataColumn columnChikuRyakusho;
            
            private global::System.Data.DataColumn columnKankatsuHokenjoCd;
            
            private global::System.Data.DataColumn columnHoteiTantoShishoCd;
            
            private global::System.Data.DataColumn columnSuishitsuTantoShishoCd;
            
            private global::System.Data.DataColumn columnGaikanChikuwariCd;
            
            private global::System.Data.DataColumn columnGaikanChikuwari2Cd;
            
            private global::System.Data.DataColumn columnGappeigoChikuCd;
            
            private global::System.Data.DataColumn columnChikuTantoKa;
            
            private global::System.Data.DataColumn columnChikuTantoYubinNo;
            
            private global::System.Data.DataColumn columnChikuTantoAdr;
            
            private global::System.Data.DataColumn columnChikuTantoTelNo;
            
            private global::System.Data.DataColumn columnChikuTantoFax;
            
            private global::System.Data.DataColumn columnDelFlg;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnChikuHyojunChi7Jo;
            
            private global::System.Data.DataColumn columnChikuHyojunChi11JoTandoku;
            
            private global::System.Data.DataColumn columnChikuHyojunChi11JoGappei;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstDataTable() {
                this.TableName = "ChikuMst";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuMstDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ChikuMstDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuCdColumn {
                get {
                    return this.columnChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuNmColumn {
                get {
                    return this.columnChikuNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuRyakushoColumn {
                get {
                    return this.columnChikuRyakusho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KankatsuHokenjoCdColumn {
                get {
                    return this.columnKankatsuHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoteiTantoShishoCdColumn {
                get {
                    return this.columnHoteiTantoShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuishitsuTantoShishoCdColumn {
                get {
                    return this.columnSuishitsuTantoShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwariCdColumn {
                get {
                    return this.columnGaikanChikuwariCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwari2CdColumn {
                get {
                    return this.columnGaikanChikuwari2Cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GappeigoChikuCdColumn {
                get {
                    return this.columnGappeigoChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoKaColumn {
                get {
                    return this.columnChikuTantoKa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoYubinNoColumn {
                get {
                    return this.columnChikuTantoYubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoAdrColumn {
                get {
                    return this.columnChikuTantoAdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoTelNoColumn {
                get {
                    return this.columnChikuTantoTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoFaxColumn {
                get {
                    return this.columnChikuTantoFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelFlgColumn {
                get {
                    return this.columnDelFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuHyojunChi7JoColumn {
                get {
                    return this.columnChikuHyojunChi7Jo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuHyojunChi11JoTandokuColumn {
                get {
                    return this.columnChikuHyojunChi11JoTandoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuHyojunChi11JoGappeiColumn {
                get {
                    return this.columnChikuHyojunChi11JoGappei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstRow this[int index] {
                get {
                    return ((ChikuMstRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstRowChangeEventHandler ChikuMstRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstRowChangeEventHandler ChikuMstRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstRowChangeEventHandler ChikuMstRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstRowChangeEventHandler ChikuMstRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddChikuMstRow(ChikuMstRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstRow AddChikuMstRow(
                        string ChikuCd, 
                        string ChikuNm, 
                        string ChikuRyakusho, 
                        string KankatsuHokenjoCd, 
                        string HoteiTantoShishoCd, 
                        string SuishitsuTantoShishoCd, 
                        string GaikanChikuwariCd, 
                        string GaikanChikuwari2Cd, 
                        string GappeigoChikuCd, 
                        string ChikuTantoKa, 
                        string ChikuTantoYubinNo, 
                        string ChikuTantoAdr, 
                        string ChikuTantoTelNo, 
                        string ChikuTantoFax, 
                        string DelFlg, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        int ChikuHyojunChi7Jo, 
                        int ChikuHyojunChi11JoTandoku, 
                        int ChikuHyojunChi11JoGappei) {
                ChikuMstRow rowChikuMstRow = ((ChikuMstRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChikuCd,
                        ChikuNm,
                        ChikuRyakusho,
                        KankatsuHokenjoCd,
                        HoteiTantoShishoCd,
                        SuishitsuTantoShishoCd,
                        GaikanChikuwariCd,
                        GaikanChikuwari2Cd,
                        GappeigoChikuCd,
                        ChikuTantoKa,
                        ChikuTantoYubinNo,
                        ChikuTantoAdr,
                        ChikuTantoTelNo,
                        ChikuTantoFax,
                        DelFlg,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ChikuHyojunChi7Jo,
                        ChikuHyojunChi11JoTandoku,
                        ChikuHyojunChi11JoGappei};
                rowChikuMstRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChikuMstRow);
                return rowChikuMstRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstRow FindByChikuCd(string ChikuCd) {
                return ((ChikuMstRow)(this.Rows.Find(new object[] {
                            ChikuCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ChikuMstDataTable cln = ((ChikuMstDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChikuMstDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnChikuCd = base.Columns["ChikuCd"];
                this.columnChikuNm = base.Columns["ChikuNm"];
                this.columnChikuRyakusho = base.Columns["ChikuRyakusho"];
                this.columnKankatsuHokenjoCd = base.Columns["KankatsuHokenjoCd"];
                this.columnHoteiTantoShishoCd = base.Columns["HoteiTantoShishoCd"];
                this.columnSuishitsuTantoShishoCd = base.Columns["SuishitsuTantoShishoCd"];
                this.columnGaikanChikuwariCd = base.Columns["GaikanChikuwariCd"];
                this.columnGaikanChikuwari2Cd = base.Columns["GaikanChikuwari2Cd"];
                this.columnGappeigoChikuCd = base.Columns["GappeigoChikuCd"];
                this.columnChikuTantoKa = base.Columns["ChikuTantoKa"];
                this.columnChikuTantoYubinNo = base.Columns["ChikuTantoYubinNo"];
                this.columnChikuTantoAdr = base.Columns["ChikuTantoAdr"];
                this.columnChikuTantoTelNo = base.Columns["ChikuTantoTelNo"];
                this.columnChikuTantoFax = base.Columns["ChikuTantoFax"];
                this.columnDelFlg = base.Columns["DelFlg"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnChikuHyojunChi7Jo = base.Columns["ChikuHyojunChi7Jo"];
                this.columnChikuHyojunChi11JoTandoku = base.Columns["ChikuHyojunChi11JoTandoku"];
                this.columnChikuHyojunChi11JoGappei = base.Columns["ChikuHyojunChi11JoGappei"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnChikuCd = new global::System.Data.DataColumn("ChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuCd);
                this.columnChikuNm = new global::System.Data.DataColumn("ChikuNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuNm);
                this.columnChikuRyakusho = new global::System.Data.DataColumn("ChikuRyakusho", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuRyakusho);
                this.columnKankatsuHokenjoCd = new global::System.Data.DataColumn("KankatsuHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKankatsuHokenjoCd);
                this.columnHoteiTantoShishoCd = new global::System.Data.DataColumn("HoteiTantoShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoteiTantoShishoCd);
                this.columnSuishitsuTantoShishoCd = new global::System.Data.DataColumn("SuishitsuTantoShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuishitsuTantoShishoCd);
                this.columnGaikanChikuwariCd = new global::System.Data.DataColumn("GaikanChikuwariCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwariCd);
                this.columnGaikanChikuwari2Cd = new global::System.Data.DataColumn("GaikanChikuwari2Cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwari2Cd);
                this.columnGappeigoChikuCd = new global::System.Data.DataColumn("GappeigoChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGappeigoChikuCd);
                this.columnChikuTantoKa = new global::System.Data.DataColumn("ChikuTantoKa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoKa);
                this.columnChikuTantoYubinNo = new global::System.Data.DataColumn("ChikuTantoYubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoYubinNo);
                this.columnChikuTantoAdr = new global::System.Data.DataColumn("ChikuTantoAdr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoAdr);
                this.columnChikuTantoTelNo = new global::System.Data.DataColumn("ChikuTantoTelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoTelNo);
                this.columnChikuTantoFax = new global::System.Data.DataColumn("ChikuTantoFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoFax);
                this.columnDelFlg = new global::System.Data.DataColumn("DelFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelFlg);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnChikuHyojunChi7Jo = new global::System.Data.DataColumn("ChikuHyojunChi7Jo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuHyojunChi7Jo);
                this.columnChikuHyojunChi11JoTandoku = new global::System.Data.DataColumn("ChikuHyojunChi11JoTandoku", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuHyojunChi11JoTandoku);
                this.columnChikuHyojunChi11JoGappei = new global::System.Data.DataColumn("ChikuHyojunChi11JoGappei", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuHyojunChi11JoGappei);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnChikuCd}, true));
                this.columnChikuCd.AllowDBNull = false;
                this.columnChikuCd.Unique = true;
                this.columnChikuCd.MaxLength = 5;
                this.columnChikuNm.AllowDBNull = false;
                this.columnChikuNm.MaxLength = 20;
                this.columnChikuRyakusho.AllowDBNull = false;
                this.columnChikuRyakusho.MaxLength = 10;
                this.columnKankatsuHokenjoCd.AllowDBNull = false;
                this.columnKankatsuHokenjoCd.MaxLength = 2;
                this.columnHoteiTantoShishoCd.AllowDBNull = false;
                this.columnHoteiTantoShishoCd.MaxLength = 1;
                this.columnSuishitsuTantoShishoCd.AllowDBNull = false;
                this.columnSuishitsuTantoShishoCd.MaxLength = 1;
                this.columnGaikanChikuwariCd.AllowDBNull = false;
                this.columnGaikanChikuwariCd.MaxLength = 1;
                this.columnGaikanChikuwari2Cd.AllowDBNull = false;
                this.columnGaikanChikuwari2Cd.MaxLength = 1;
                this.columnGappeigoChikuCd.AllowDBNull = false;
                this.columnGappeigoChikuCd.MaxLength = 5;
                this.columnChikuTantoKa.AllowDBNull = false;
                this.columnChikuTantoKa.MaxLength = 60;
                this.columnChikuTantoYubinNo.AllowDBNull = false;
                this.columnChikuTantoYubinNo.MaxLength = 8;
                this.columnChikuTantoAdr.AllowDBNull = false;
                this.columnChikuTantoAdr.MaxLength = 80;
                this.columnChikuTantoTelNo.AllowDBNull = false;
                this.columnChikuTantoTelNo.MaxLength = 13;
                this.columnChikuTantoFax.AllowDBNull = false;
                this.columnChikuTantoFax.MaxLength = 13;
                this.columnDelFlg.AllowDBNull = false;
                this.columnDelFlg.MaxLength = 1;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnChikuHyojunChi7Jo.AllowDBNull = false;
                this.columnChikuHyojunChi11JoTandoku.AllowDBNull = false;
                this.columnChikuHyojunChi11JoGappei.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstRow NewChikuMstRow() {
                return ((ChikuMstRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChikuMstRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ChikuMstRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChikuMstRowChanged != null)) {
                    this.ChikuMstRowChanged(this, new ChikuMstRowChangeEvent(((ChikuMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChikuMstRowChanging != null)) {
                    this.ChikuMstRowChanging(this, new ChikuMstRowChangeEvent(((ChikuMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChikuMstRowDeleted != null)) {
                    this.ChikuMstRowDeleted(this, new ChikuMstRowChangeEvent(((ChikuMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChikuMstRowDeleting != null)) {
                    this.ChikuMstRowDeleting(this, new ChikuMstRowChangeEvent(((ChikuMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveChikuMstRow(ChikuMstRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ChikuMstDataSet ds = new ChikuMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChikuMstDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChikuMstKensakuDataTable : global::System.Data.TypedTableBase<ChikuMstKensakuRow> {
            
            private global::System.Data.DataColumn columnChikuCd;
            
            private global::System.Data.DataColumn columnChikuNm;
            
            private global::System.Data.DataColumn columnChikuRyakusho;
            
            private global::System.Data.DataColumn columnKankatsuHokenjoCd;
            
            private global::System.Data.DataColumn columnHokenjoNm;
            
            private global::System.Data.DataColumn columnHoteiTantoShishoCd;
            
            private global::System.Data.DataColumn columnHoteiShishoName;
            
            private global::System.Data.DataColumn columnSuishitsuTantoShishoCd;
            
            private global::System.Data.DataColumn columnSuishitsuShishoName;
            
            private global::System.Data.DataColumn columnGaikanChikuwariCd;
            
            private global::System.Data.DataColumn columnGaikanChikuwari2Cd;
            
            private global::System.Data.DataColumn columnGappeigoChikuCd;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnChikuTantoKa;
            
            private global::System.Data.DataColumn columnChikuTantoYubinNo;
            
            private global::System.Data.DataColumn columnChikuTantoAdr;
            
            private global::System.Data.DataColumn columnChikuTantoTelNo;
            
            private global::System.Data.DataColumn columnChikuTantoFax;
            
            private global::System.Data.DataColumn columnChikuHyojunChi7Jo;
            
            private global::System.Data.DataColumn columnChikuHyojunChi11JoTandoku;
            
            private global::System.Data.DataColumn columnChikuHyojunChi11JoGappei;
            
            private global::System.Data.DataColumn columnDelFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstKensakuDataTable() {
                this.TableName = "ChikuMstKensaku";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuMstKensakuDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ChikuMstKensakuDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuCdColumn {
                get {
                    return this.columnChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuNmColumn {
                get {
                    return this.columnChikuNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuRyakushoColumn {
                get {
                    return this.columnChikuRyakusho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KankatsuHokenjoCdColumn {
                get {
                    return this.columnKankatsuHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HokenjoNmColumn {
                get {
                    return this.columnHokenjoNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoteiTantoShishoCdColumn {
                get {
                    return this.columnHoteiTantoShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoteiShishoNameColumn {
                get {
                    return this.columnHoteiShishoName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuishitsuTantoShishoCdColumn {
                get {
                    return this.columnSuishitsuTantoShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuishitsuShishoNameColumn {
                get {
                    return this.columnSuishitsuShishoName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwariCdColumn {
                get {
                    return this.columnGaikanChikuwariCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwari2CdColumn {
                get {
                    return this.columnGaikanChikuwari2Cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GappeigoChikuCdColumn {
                get {
                    return this.columnGappeigoChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoKaColumn {
                get {
                    return this.columnChikuTantoKa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoYubinNoColumn {
                get {
                    return this.columnChikuTantoYubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoAdrColumn {
                get {
                    return this.columnChikuTantoAdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoTelNoColumn {
                get {
                    return this.columnChikuTantoTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoFaxColumn {
                get {
                    return this.columnChikuTantoFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuHyojunChi7JoColumn {
                get {
                    return this.columnChikuHyojunChi7Jo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuHyojunChi11JoTandokuColumn {
                get {
                    return this.columnChikuHyojunChi11JoTandoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuHyojunChi11JoGappeiColumn {
                get {
                    return this.columnChikuHyojunChi11JoGappei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelFlgColumn {
                get {
                    return this.columnDelFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstKensakuRow this[int index] {
                get {
                    return ((ChikuMstKensakuRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstKensakuRowChangeEventHandler ChikuMstKensakuRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstKensakuRowChangeEventHandler ChikuMstKensakuRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstKensakuRowChangeEventHandler ChikuMstKensakuRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstKensakuRowChangeEventHandler ChikuMstKensakuRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddChikuMstKensakuRow(ChikuMstKensakuRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstKensakuRow AddChikuMstKensakuRow(
                        string ChikuCd, 
                        string ChikuNm, 
                        string ChikuRyakusho, 
                        string KankatsuHokenjoCd, 
                        string HokenjoNm, 
                        string HoteiTantoShishoCd, 
                        string HoteiShishoName, 
                        string SuishitsuTantoShishoCd, 
                        string SuishitsuShishoName, 
                        string GaikanChikuwariCd, 
                        string GaikanChikuwari2Cd, 
                        string GappeigoChikuCd, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        string ChikuTantoKa, 
                        string ChikuTantoYubinNo, 
                        string ChikuTantoAdr, 
                        string ChikuTantoTelNo, 
                        string ChikuTantoFax, 
                        int ChikuHyojunChi7Jo, 
                        int ChikuHyojunChi11JoTandoku, 
                        int ChikuHyojunChi11JoGappei, 
                        string DelFlg) {
                ChikuMstKensakuRow rowChikuMstKensakuRow = ((ChikuMstKensakuRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChikuCd,
                        ChikuNm,
                        ChikuRyakusho,
                        KankatsuHokenjoCd,
                        HokenjoNm,
                        HoteiTantoShishoCd,
                        HoteiShishoName,
                        SuishitsuTantoShishoCd,
                        SuishitsuShishoName,
                        GaikanChikuwariCd,
                        GaikanChikuwari2Cd,
                        GappeigoChikuCd,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ChikuTantoKa,
                        ChikuTantoYubinNo,
                        ChikuTantoAdr,
                        ChikuTantoTelNo,
                        ChikuTantoFax,
                        ChikuHyojunChi7Jo,
                        ChikuHyojunChi11JoTandoku,
                        ChikuHyojunChi11JoGappei,
                        DelFlg};
                rowChikuMstKensakuRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChikuMstKensakuRow);
                return rowChikuMstKensakuRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ChikuMstKensakuDataTable cln = ((ChikuMstKensakuDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChikuMstKensakuDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnChikuCd = base.Columns["ChikuCd"];
                this.columnChikuNm = base.Columns["ChikuNm"];
                this.columnChikuRyakusho = base.Columns["ChikuRyakusho"];
                this.columnKankatsuHokenjoCd = base.Columns["KankatsuHokenjoCd"];
                this.columnHokenjoNm = base.Columns["HokenjoNm"];
                this.columnHoteiTantoShishoCd = base.Columns["HoteiTantoShishoCd"];
                this.columnHoteiShishoName = base.Columns["HoteiShishoName"];
                this.columnSuishitsuTantoShishoCd = base.Columns["SuishitsuTantoShishoCd"];
                this.columnSuishitsuShishoName = base.Columns["SuishitsuShishoName"];
                this.columnGaikanChikuwariCd = base.Columns["GaikanChikuwariCd"];
                this.columnGaikanChikuwari2Cd = base.Columns["GaikanChikuwari2Cd"];
                this.columnGappeigoChikuCd = base.Columns["GappeigoChikuCd"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnChikuTantoKa = base.Columns["ChikuTantoKa"];
                this.columnChikuTantoYubinNo = base.Columns["ChikuTantoYubinNo"];
                this.columnChikuTantoAdr = base.Columns["ChikuTantoAdr"];
                this.columnChikuTantoTelNo = base.Columns["ChikuTantoTelNo"];
                this.columnChikuTantoFax = base.Columns["ChikuTantoFax"];
                this.columnChikuHyojunChi7Jo = base.Columns["ChikuHyojunChi7Jo"];
                this.columnChikuHyojunChi11JoTandoku = base.Columns["ChikuHyojunChi11JoTandoku"];
                this.columnChikuHyojunChi11JoGappei = base.Columns["ChikuHyojunChi11JoGappei"];
                this.columnDelFlg = base.Columns["DelFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnChikuCd = new global::System.Data.DataColumn("ChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuCd);
                this.columnChikuNm = new global::System.Data.DataColumn("ChikuNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuNm);
                this.columnChikuRyakusho = new global::System.Data.DataColumn("ChikuRyakusho", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuRyakusho);
                this.columnKankatsuHokenjoCd = new global::System.Data.DataColumn("KankatsuHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKankatsuHokenjoCd);
                this.columnHokenjoNm = new global::System.Data.DataColumn("HokenjoNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHokenjoNm);
                this.columnHoteiTantoShishoCd = new global::System.Data.DataColumn("HoteiTantoShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoteiTantoShishoCd);
                this.columnHoteiShishoName = new global::System.Data.DataColumn("HoteiShishoName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoteiShishoName);
                this.columnSuishitsuTantoShishoCd = new global::System.Data.DataColumn("SuishitsuTantoShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuishitsuTantoShishoCd);
                this.columnSuishitsuShishoName = new global::System.Data.DataColumn("SuishitsuShishoName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuishitsuShishoName);
                this.columnGaikanChikuwariCd = new global::System.Data.DataColumn("GaikanChikuwariCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwariCd);
                this.columnGaikanChikuwari2Cd = new global::System.Data.DataColumn("GaikanChikuwari2Cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwari2Cd);
                this.columnGappeigoChikuCd = new global::System.Data.DataColumn("GappeigoChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGappeigoChikuCd);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnChikuTantoKa = new global::System.Data.DataColumn("ChikuTantoKa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoKa);
                this.columnChikuTantoYubinNo = new global::System.Data.DataColumn("ChikuTantoYubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoYubinNo);
                this.columnChikuTantoAdr = new global::System.Data.DataColumn("ChikuTantoAdr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoAdr);
                this.columnChikuTantoTelNo = new global::System.Data.DataColumn("ChikuTantoTelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoTelNo);
                this.columnChikuTantoFax = new global::System.Data.DataColumn("ChikuTantoFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoFax);
                this.columnChikuHyojunChi7Jo = new global::System.Data.DataColumn("ChikuHyojunChi7Jo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuHyojunChi7Jo);
                this.columnChikuHyojunChi11JoTandoku = new global::System.Data.DataColumn("ChikuHyojunChi11JoTandoku", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuHyojunChi11JoTandoku);
                this.columnChikuHyojunChi11JoGappei = new global::System.Data.DataColumn("ChikuHyojunChi11JoGappei", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuHyojunChi11JoGappei);
                this.columnDelFlg = new global::System.Data.DataColumn("DelFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelFlg);
                this.columnChikuCd.MaxLength = 5;
                this.columnChikuNm.MaxLength = 20;
                this.columnChikuRyakusho.MaxLength = 10;
                this.columnKankatsuHokenjoCd.MaxLength = 2;
                this.columnHokenjoNm.MaxLength = 24;
                this.columnHoteiTantoShishoCd.MaxLength = 1;
                this.columnHoteiShishoName.MaxLength = 10;
                this.columnSuishitsuTantoShishoCd.MaxLength = 1;
                this.columnSuishitsuShishoName.MaxLength = 10;
                this.columnGaikanChikuwariCd.MaxLength = 1;
                this.columnGaikanChikuwari2Cd.MaxLength = 1;
                this.columnGappeigoChikuCd.MaxLength = 5;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnChikuTantoKa.MaxLength = 60;
                this.columnChikuTantoYubinNo.MaxLength = 8;
                this.columnChikuTantoAdr.MaxLength = 80;
                this.columnChikuTantoTelNo.MaxLength = 13;
                this.columnChikuTantoFax.MaxLength = 13;
                this.columnChikuHyojunChi7Jo.AllowDBNull = false;
                this.columnChikuHyojunChi11JoTandoku.AllowDBNull = false;
                this.columnChikuHyojunChi11JoGappei.AllowDBNull = false;
                this.columnDelFlg.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstKensakuRow NewChikuMstKensakuRow() {
                return ((ChikuMstKensakuRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChikuMstKensakuRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ChikuMstKensakuRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChikuMstKensakuRowChanged != null)) {
                    this.ChikuMstKensakuRowChanged(this, new ChikuMstKensakuRowChangeEvent(((ChikuMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChikuMstKensakuRowChanging != null)) {
                    this.ChikuMstKensakuRowChanging(this, new ChikuMstKensakuRowChangeEvent(((ChikuMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChikuMstKensakuRowDeleted != null)) {
                    this.ChikuMstKensakuRowDeleted(this, new ChikuMstKensakuRowChangeEvent(((ChikuMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChikuMstKensakuRowDeleting != null)) {
                    this.ChikuMstKensakuRowDeleting(this, new ChikuMstKensakuRowChangeEvent(((ChikuMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveChikuMstKensakuRow(ChikuMstKensakuRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ChikuMstDataSet ds = new ChikuMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChikuMstKensakuDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChikuMstSearchCommonDataTable : global::System.Data.TypedTableBase<ChikuMstSearchCommonRow> {
            
            private global::System.Data.DataColumn columnChikuCd;
            
            private global::System.Data.DataColumn columnChikuNm;
            
            private global::System.Data.DataColumn columnChikuRyakusho;
            
            private global::System.Data.DataColumn columnKankatsuHokenjoCd;
            
            private global::System.Data.DataColumn columnHokenjoNm;
            
            private global::System.Data.DataColumn columnHoteiTantoShishoCd;
            
            private global::System.Data.DataColumn columnHoteiShishoName;
            
            private global::System.Data.DataColumn columnSuishitsuTantoShishoCd;
            
            private global::System.Data.DataColumn columnSuishitsuShishoName;
            
            private global::System.Data.DataColumn columnGaikanChikuwariCd;
            
            private global::System.Data.DataColumn columnGaikanChikuwari2Cd;
            
            private global::System.Data.DataColumn columnGappeigoChikuCd;
            
            private global::System.Data.DataColumn columnChikuTantoKa;
            
            private global::System.Data.DataColumn columnChikuTantoYubinNo;
            
            private global::System.Data.DataColumn columnChikuTantoAdr;
            
            private global::System.Data.DataColumn columnChikuTantoTelNo;
            
            private global::System.Data.DataColumn columnChikuTantoFax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonDataTable() {
                this.TableName = "ChikuMstSearchCommon";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuMstSearchCommonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ChikuMstSearchCommonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuCdColumn {
                get {
                    return this.columnChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuNmColumn {
                get {
                    return this.columnChikuNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuRyakushoColumn {
                get {
                    return this.columnChikuRyakusho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KankatsuHokenjoCdColumn {
                get {
                    return this.columnKankatsuHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HokenjoNmColumn {
                get {
                    return this.columnHokenjoNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoteiTantoShishoCdColumn {
                get {
                    return this.columnHoteiTantoShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoteiShishoNameColumn {
                get {
                    return this.columnHoteiShishoName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuishitsuTantoShishoCdColumn {
                get {
                    return this.columnSuishitsuTantoShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SuishitsuShishoNameColumn {
                get {
                    return this.columnSuishitsuShishoName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwariCdColumn {
                get {
                    return this.columnGaikanChikuwariCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwari2CdColumn {
                get {
                    return this.columnGaikanChikuwari2Cd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GappeigoChikuCdColumn {
                get {
                    return this.columnGappeigoChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoKaColumn {
                get {
                    return this.columnChikuTantoKa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoYubinNoColumn {
                get {
                    return this.columnChikuTantoYubinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoAdrColumn {
                get {
                    return this.columnChikuTantoAdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoTelNoColumn {
                get {
                    return this.columnChikuTantoTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuTantoFaxColumn {
                get {
                    return this.columnChikuTantoFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonRow this[int index] {
                get {
                    return ((ChikuMstSearchCommonRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstSearchCommonRowChangeEventHandler ChikuMstSearchCommonRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstSearchCommonRowChangeEventHandler ChikuMstSearchCommonRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstSearchCommonRowChangeEventHandler ChikuMstSearchCommonRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuMstSearchCommonRowChangeEventHandler ChikuMstSearchCommonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddChikuMstSearchCommonRow(ChikuMstSearchCommonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonRow AddChikuMstSearchCommonRow(
                        string ChikuCd, 
                        string ChikuNm, 
                        string ChikuRyakusho, 
                        string KankatsuHokenjoCd, 
                        string HokenjoNm, 
                        string HoteiTantoShishoCd, 
                        string HoteiShishoName, 
                        string SuishitsuTantoShishoCd, 
                        string SuishitsuShishoName, 
                        string GaikanChikuwariCd, 
                        string GaikanChikuwari2Cd, 
                        string GappeigoChikuCd, 
                        string ChikuTantoKa, 
                        string ChikuTantoYubinNo, 
                        string ChikuTantoAdr, 
                        string ChikuTantoTelNo, 
                        string ChikuTantoFax) {
                ChikuMstSearchCommonRow rowChikuMstSearchCommonRow = ((ChikuMstSearchCommonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChikuCd,
                        ChikuNm,
                        ChikuRyakusho,
                        KankatsuHokenjoCd,
                        HokenjoNm,
                        HoteiTantoShishoCd,
                        HoteiShishoName,
                        SuishitsuTantoShishoCd,
                        SuishitsuShishoName,
                        GaikanChikuwariCd,
                        GaikanChikuwari2Cd,
                        GappeigoChikuCd,
                        ChikuTantoKa,
                        ChikuTantoYubinNo,
                        ChikuTantoAdr,
                        ChikuTantoTelNo,
                        ChikuTantoFax};
                rowChikuMstSearchCommonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChikuMstSearchCommonRow);
                return rowChikuMstSearchCommonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonRow FindByChikuCd(string ChikuCd) {
                return ((ChikuMstSearchCommonRow)(this.Rows.Find(new object[] {
                            ChikuCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ChikuMstSearchCommonDataTable cln = ((ChikuMstSearchCommonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChikuMstSearchCommonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnChikuCd = base.Columns["ChikuCd"];
                this.columnChikuNm = base.Columns["ChikuNm"];
                this.columnChikuRyakusho = base.Columns["ChikuRyakusho"];
                this.columnKankatsuHokenjoCd = base.Columns["KankatsuHokenjoCd"];
                this.columnHokenjoNm = base.Columns["HokenjoNm"];
                this.columnHoteiTantoShishoCd = base.Columns["HoteiTantoShishoCd"];
                this.columnHoteiShishoName = base.Columns["HoteiShishoName"];
                this.columnSuishitsuTantoShishoCd = base.Columns["SuishitsuTantoShishoCd"];
                this.columnSuishitsuShishoName = base.Columns["SuishitsuShishoName"];
                this.columnGaikanChikuwariCd = base.Columns["GaikanChikuwariCd"];
                this.columnGaikanChikuwari2Cd = base.Columns["GaikanChikuwari2Cd"];
                this.columnGappeigoChikuCd = base.Columns["GappeigoChikuCd"];
                this.columnChikuTantoKa = base.Columns["ChikuTantoKa"];
                this.columnChikuTantoYubinNo = base.Columns["ChikuTantoYubinNo"];
                this.columnChikuTantoAdr = base.Columns["ChikuTantoAdr"];
                this.columnChikuTantoTelNo = base.Columns["ChikuTantoTelNo"];
                this.columnChikuTantoFax = base.Columns["ChikuTantoFax"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnChikuCd = new global::System.Data.DataColumn("ChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuCd);
                this.columnChikuNm = new global::System.Data.DataColumn("ChikuNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuNm);
                this.columnChikuRyakusho = new global::System.Data.DataColumn("ChikuRyakusho", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuRyakusho);
                this.columnKankatsuHokenjoCd = new global::System.Data.DataColumn("KankatsuHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKankatsuHokenjoCd);
                this.columnHokenjoNm = new global::System.Data.DataColumn("HokenjoNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHokenjoNm);
                this.columnHoteiTantoShishoCd = new global::System.Data.DataColumn("HoteiTantoShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoteiTantoShishoCd);
                this.columnHoteiShishoName = new global::System.Data.DataColumn("HoteiShishoName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoteiShishoName);
                this.columnSuishitsuTantoShishoCd = new global::System.Data.DataColumn("SuishitsuTantoShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuishitsuTantoShishoCd);
                this.columnSuishitsuShishoName = new global::System.Data.DataColumn("SuishitsuShishoName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuishitsuShishoName);
                this.columnGaikanChikuwariCd = new global::System.Data.DataColumn("GaikanChikuwariCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwariCd);
                this.columnGaikanChikuwari2Cd = new global::System.Data.DataColumn("GaikanChikuwari2Cd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwari2Cd);
                this.columnGappeigoChikuCd = new global::System.Data.DataColumn("GappeigoChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGappeigoChikuCd);
                this.columnChikuTantoKa = new global::System.Data.DataColumn("ChikuTantoKa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoKa);
                this.columnChikuTantoYubinNo = new global::System.Data.DataColumn("ChikuTantoYubinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoYubinNo);
                this.columnChikuTantoAdr = new global::System.Data.DataColumn("ChikuTantoAdr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoAdr);
                this.columnChikuTantoTelNo = new global::System.Data.DataColumn("ChikuTantoTelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoTelNo);
                this.columnChikuTantoFax = new global::System.Data.DataColumn("ChikuTantoFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuTantoFax);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnChikuCd}, true));
                this.columnChikuCd.AllowDBNull = false;
                this.columnChikuCd.Unique = true;
                this.columnChikuCd.MaxLength = 5;
                this.columnChikuNm.AllowDBNull = false;
                this.columnChikuNm.MaxLength = 20;
                this.columnChikuRyakusho.AllowDBNull = false;
                this.columnChikuRyakusho.MaxLength = 10;
                this.columnKankatsuHokenjoCd.AllowDBNull = false;
                this.columnKankatsuHokenjoCd.MaxLength = 2;
                this.columnHokenjoNm.MaxLength = 24;
                this.columnHoteiTantoShishoCd.AllowDBNull = false;
                this.columnHoteiTantoShishoCd.MaxLength = 1;
                this.columnHoteiShishoName.MaxLength = 10;
                this.columnSuishitsuTantoShishoCd.AllowDBNull = false;
                this.columnSuishitsuTantoShishoCd.MaxLength = 1;
                this.columnSuishitsuShishoName.MaxLength = 10;
                this.columnGaikanChikuwariCd.AllowDBNull = false;
                this.columnGaikanChikuwariCd.MaxLength = 1;
                this.columnGaikanChikuwari2Cd.AllowDBNull = false;
                this.columnGaikanChikuwari2Cd.MaxLength = 1;
                this.columnGappeigoChikuCd.AllowDBNull = false;
                this.columnGappeigoChikuCd.MaxLength = 5;
                this.columnChikuTantoKa.AllowDBNull = false;
                this.columnChikuTantoKa.MaxLength = 60;
                this.columnChikuTantoYubinNo.AllowDBNull = false;
                this.columnChikuTantoYubinNo.MaxLength = 8;
                this.columnChikuTantoAdr.AllowDBNull = false;
                this.columnChikuTantoAdr.MaxLength = 80;
                this.columnChikuTantoTelNo.AllowDBNull = false;
                this.columnChikuTantoTelNo.MaxLength = 13;
                this.columnChikuTantoFax.AllowDBNull = false;
                this.columnChikuTantoFax.MaxLength = 13;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonRow NewChikuMstSearchCommonRow() {
                return ((ChikuMstSearchCommonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChikuMstSearchCommonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ChikuMstSearchCommonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChikuMstSearchCommonRowChanged != null)) {
                    this.ChikuMstSearchCommonRowChanged(this, new ChikuMstSearchCommonRowChangeEvent(((ChikuMstSearchCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChikuMstSearchCommonRowChanging != null)) {
                    this.ChikuMstSearchCommonRowChanging(this, new ChikuMstSearchCommonRowChangeEvent(((ChikuMstSearchCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChikuMstSearchCommonRowDeleted != null)) {
                    this.ChikuMstSearchCommonRowDeleted(this, new ChikuMstSearchCommonRowChangeEvent(((ChikuMstSearchCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChikuMstSearchCommonRowDeleting != null)) {
                    this.ChikuMstSearchCommonRowDeleting(this, new ChikuMstSearchCommonRowChangeEvent(((ChikuMstSearchCommonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveChikuMstSearchCommonRow(ChikuMstSearchCommonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ChikuMstDataSet ds = new ChikuMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChikuMstSearchCommonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChikuwariCdListDataTable : global::System.Data.TypedTableBase<ChikuwariCdListRow> {
            
            private global::System.Data.DataColumn columnGaikanChikuwariCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuwariCdListDataTable() {
                this.TableName = "ChikuwariCdList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuwariCdListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ChikuwariCdListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GaikanChikuwariCdColumn {
                get {
                    return this.columnGaikanChikuwariCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuwariCdListRow this[int index] {
                get {
                    return ((ChikuwariCdListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuwariCdListRowChangeEventHandler ChikuwariCdListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuwariCdListRowChangeEventHandler ChikuwariCdListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuwariCdListRowChangeEventHandler ChikuwariCdListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChikuwariCdListRowChangeEventHandler ChikuwariCdListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddChikuwariCdListRow(ChikuwariCdListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuwariCdListRow AddChikuwariCdListRow(string GaikanChikuwariCd) {
                ChikuwariCdListRow rowChikuwariCdListRow = ((ChikuwariCdListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GaikanChikuwariCd};
                rowChikuwariCdListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChikuwariCdListRow);
                return rowChikuwariCdListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ChikuwariCdListDataTable cln = ((ChikuwariCdListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChikuwariCdListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGaikanChikuwariCd = base.Columns["GaikanChikuwariCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGaikanChikuwariCd = new global::System.Data.DataColumn("GaikanChikuwariCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaikanChikuwariCd);
                this.columnGaikanChikuwariCd.ReadOnly = true;
                this.columnGaikanChikuwariCd.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuwariCdListRow NewChikuwariCdListRow() {
                return ((ChikuwariCdListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChikuwariCdListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ChikuwariCdListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChikuwariCdListRowChanged != null)) {
                    this.ChikuwariCdListRowChanged(this, new ChikuwariCdListRowChangeEvent(((ChikuwariCdListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChikuwariCdListRowChanging != null)) {
                    this.ChikuwariCdListRowChanging(this, new ChikuwariCdListRowChangeEvent(((ChikuwariCdListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChikuwariCdListRowDeleted != null)) {
                    this.ChikuwariCdListRowDeleted(this, new ChikuwariCdListRowChangeEvent(((ChikuwariCdListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChikuwariCdListRowDeleting != null)) {
                    this.ChikuwariCdListRowDeleting(this, new ChikuwariCdListRowChangeEvent(((ChikuwariCdListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveChikuwariCdListRow(ChikuwariCdListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ChikuMstDataSet ds = new ChikuMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChikuwariCdListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShikuchosonInfoDataTable : global::System.Data.TypedTableBase<ShikuchosonInfoRow> {
            
            private global::System.Data.DataColumn columnChikuNm;
            
            private global::System.Data.DataColumn columnChikuCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShikuchosonInfoDataTable() {
                this.TableName = "ShikuchosonInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShikuchosonInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShikuchosonInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuNmColumn {
                get {
                    return this.columnChikuNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChikuCdColumn {
                get {
                    return this.columnChikuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShikuchosonInfoRow this[int index] {
                get {
                    return ((ShikuchosonInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShikuchosonInfoRowChangeEventHandler ShikuchosonInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShikuchosonInfoRowChangeEventHandler ShikuchosonInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShikuchosonInfoRowChangeEventHandler ShikuchosonInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShikuchosonInfoRowChangeEventHandler ShikuchosonInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShikuchosonInfoRow(ShikuchosonInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShikuchosonInfoRow AddShikuchosonInfoRow(string ChikuNm, string ChikuCd) {
                ShikuchosonInfoRow rowShikuchosonInfoRow = ((ShikuchosonInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChikuNm,
                        ChikuCd};
                rowShikuchosonInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShikuchosonInfoRow);
                return rowShikuchosonInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShikuchosonInfoDataTable cln = ((ShikuchosonInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShikuchosonInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnChikuNm = base.Columns["ChikuNm"];
                this.columnChikuCd = base.Columns["ChikuCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnChikuNm = new global::System.Data.DataColumn("ChikuNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuNm);
                this.columnChikuCd = new global::System.Data.DataColumn("ChikuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChikuCd);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShikuchosonInfoRow NewShikuchosonInfoRow() {
                return ((ShikuchosonInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShikuchosonInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShikuchosonInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShikuchosonInfoRowChanged != null)) {
                    this.ShikuchosonInfoRowChanged(this, new ShikuchosonInfoRowChangeEvent(((ShikuchosonInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShikuchosonInfoRowChanging != null)) {
                    this.ShikuchosonInfoRowChanging(this, new ShikuchosonInfoRowChangeEvent(((ShikuchosonInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShikuchosonInfoRowDeleted != null)) {
                    this.ShikuchosonInfoRowDeleted(this, new ShikuchosonInfoRowChangeEvent(((ShikuchosonInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShikuchosonInfoRowDeleting != null)) {
                    this.ShikuchosonInfoRowDeleting(this, new ShikuchosonInfoRowChangeEvent(((ShikuchosonInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShikuchosonInfoRow(ShikuchosonInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ChikuMstDataSet ds = new ChikuMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShikuchosonInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ChikuMstRow : global::System.Data.DataRow {
            
            private ChikuMstDataTable tableChikuMst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuMstRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChikuMst = ((ChikuMstDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuCd {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuCdColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuNm {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuNmColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuRyakusho {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuRyakushoColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuRyakushoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KankatsuHokenjoCd {
                get {
                    return ((string)(this[this.tableChikuMst.KankatsuHokenjoCdColumn]));
                }
                set {
                    this[this.tableChikuMst.KankatsuHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoteiTantoShishoCd {
                get {
                    return ((string)(this[this.tableChikuMst.HoteiTantoShishoCdColumn]));
                }
                set {
                    this[this.tableChikuMst.HoteiTantoShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SuishitsuTantoShishoCd {
                get {
                    return ((string)(this[this.tableChikuMst.SuishitsuTantoShishoCdColumn]));
                }
                set {
                    this[this.tableChikuMst.SuishitsuTantoShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwariCd {
                get {
                    return ((string)(this[this.tableChikuMst.GaikanChikuwariCdColumn]));
                }
                set {
                    this[this.tableChikuMst.GaikanChikuwariCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwari2Cd {
                get {
                    return ((string)(this[this.tableChikuMst.GaikanChikuwari2CdColumn]));
                }
                set {
                    this[this.tableChikuMst.GaikanChikuwari2CdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GappeigoChikuCd {
                get {
                    return ((string)(this[this.tableChikuMst.GappeigoChikuCdColumn]));
                }
                set {
                    this[this.tableChikuMst.GappeigoChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoKa {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuTantoKaColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuTantoKaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoYubinNo {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuTantoYubinNoColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuTantoYubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoAdr {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuTantoAdrColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuTantoAdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoTelNo {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuTantoTelNoColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuTantoTelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoFax {
                get {
                    return ((string)(this[this.tableChikuMst.ChikuTantoFaxColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuTantoFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelFlg {
                get {
                    return ((string)(this[this.tableChikuMst.DelFlgColumn]));
                }
                set {
                    this[this.tableChikuMst.DelFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableChikuMst.InsertDtColumn]));
                }
                set {
                    this[this.tableChikuMst.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableChikuMst.InsertUserColumn]));
                }
                set {
                    this[this.tableChikuMst.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableChikuMst.InsertTarmColumn]));
                }
                set {
                    this[this.tableChikuMst.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableChikuMst.UpdateDtColumn]));
                }
                set {
                    this[this.tableChikuMst.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableChikuMst.UpdateUserColumn]));
                }
                set {
                    this[this.tableChikuMst.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableChikuMst.UpdateTarmColumn]));
                }
                set {
                    this[this.tableChikuMst.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChikuHyojunChi7Jo {
                get {
                    return ((int)(this[this.tableChikuMst.ChikuHyojunChi7JoColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuHyojunChi7JoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChikuHyojunChi11JoTandoku {
                get {
                    return ((int)(this[this.tableChikuMst.ChikuHyojunChi11JoTandokuColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuHyojunChi11JoTandokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChikuHyojunChi11JoGappei {
                get {
                    return ((int)(this[this.tableChikuMst.ChikuHyojunChi11JoGappeiColumn]));
                }
                set {
                    this[this.tableChikuMst.ChikuHyojunChi11JoGappeiColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ChikuMstKensakuRow : global::System.Data.DataRow {
            
            private ChikuMstKensakuDataTable tableChikuMstKensaku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuMstKensakuRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChikuMstKensaku = ((ChikuMstKensakuDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuCd {
                get {
                    if (this.IsChikuCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuCdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuNm {
                get {
                    if (this.IsChikuNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuNmColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuRyakusho {
                get {
                    if (this.IsChikuRyakushoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuRyakushoColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuRyakushoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KankatsuHokenjoCd {
                get {
                    if (this.IsKankatsuHokenjoCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.KankatsuHokenjoCdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.KankatsuHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HokenjoNm {
                get {
                    if (this.IsHokenjoNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.HokenjoNmColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.HokenjoNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoteiTantoShishoCd {
                get {
                    if (this.IsHoteiTantoShishoCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.HoteiTantoShishoCdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.HoteiTantoShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoteiShishoName {
                get {
                    if (this.IsHoteiShishoNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.HoteiShishoNameColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.HoteiShishoNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SuishitsuTantoShishoCd {
                get {
                    if (this.IsSuishitsuTantoShishoCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.SuishitsuTantoShishoCdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.SuishitsuTantoShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SuishitsuShishoName {
                get {
                    if (this.IsSuishitsuShishoNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.SuishitsuShishoNameColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.SuishitsuShishoNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwariCd {
                get {
                    if (this.IsGaikanChikuwariCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.GaikanChikuwariCdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.GaikanChikuwariCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwari2Cd {
                get {
                    if (this.IsGaikanChikuwari2CdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.GaikanChikuwari2CdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.GaikanChikuwari2CdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GappeigoChikuCd {
                get {
                    if (this.IsGappeigoChikuCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.GappeigoChikuCdColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.GappeigoChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChikuMstKensaku.InsertDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsertDt\' in table \'ChikuMstKensaku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    if (this.IsInsertUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.InsertUserColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    if (this.IsInsertTarmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.InsertTarmColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChikuMstKensaku.UpdateDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDt\' in table \'ChikuMstKensaku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    if (this.IsUpdateUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.UpdateUserColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    if (this.IsUpdateTarmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.UpdateTarmColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoKa {
                get {
                    if (this.IsChikuTantoKaNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuTantoKaColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuTantoKaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoYubinNo {
                get {
                    if (this.IsChikuTantoYubinNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuTantoYubinNoColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuTantoYubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoAdr {
                get {
                    if (this.IsChikuTantoAdrNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuTantoAdrColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuTantoAdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoTelNo {
                get {
                    if (this.IsChikuTantoTelNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuTantoTelNoColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuTantoTelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoFax {
                get {
                    if (this.IsChikuTantoFaxNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.ChikuTantoFaxColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuTantoFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChikuHyojunChi7Jo {
                get {
                    return ((int)(this[this.tableChikuMstKensaku.ChikuHyojunChi7JoColumn]));
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuHyojunChi7JoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChikuHyojunChi11JoTandoku {
                get {
                    return ((int)(this[this.tableChikuMstKensaku.ChikuHyojunChi11JoTandokuColumn]));
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuHyojunChi11JoTandokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChikuHyojunChi11JoGappei {
                get {
                    return ((int)(this[this.tableChikuMstKensaku.ChikuHyojunChi11JoGappeiColumn]));
                }
                set {
                    this[this.tableChikuMstKensaku.ChikuHyojunChi11JoGappeiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelFlg {
                get {
                    if (this.IsDelFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableChikuMstKensaku.DelFlgColumn]));
                    }
                }
                set {
                    this[this.tableChikuMstKensaku.DelFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuCdNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuCdNull() {
                this[this.tableChikuMstKensaku.ChikuCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuNmNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuNmNull() {
                this[this.tableChikuMstKensaku.ChikuNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuRyakushoNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuRyakushoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuRyakushoNull() {
                this[this.tableChikuMstKensaku.ChikuRyakushoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKankatsuHokenjoCdNull() {
                return this.IsNull(this.tableChikuMstKensaku.KankatsuHokenjoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKankatsuHokenjoCdNull() {
                this[this.tableChikuMstKensaku.KankatsuHokenjoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHokenjoNmNull() {
                return this.IsNull(this.tableChikuMstKensaku.HokenjoNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHokenjoNmNull() {
                this[this.tableChikuMstKensaku.HokenjoNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoteiTantoShishoCdNull() {
                return this.IsNull(this.tableChikuMstKensaku.HoteiTantoShishoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoteiTantoShishoCdNull() {
                this[this.tableChikuMstKensaku.HoteiTantoShishoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoteiShishoNameNull() {
                return this.IsNull(this.tableChikuMstKensaku.HoteiShishoNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoteiShishoNameNull() {
                this[this.tableChikuMstKensaku.HoteiShishoNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuishitsuTantoShishoCdNull() {
                return this.IsNull(this.tableChikuMstKensaku.SuishitsuTantoShishoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuishitsuTantoShishoCdNull() {
                this[this.tableChikuMstKensaku.SuishitsuTantoShishoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuishitsuShishoNameNull() {
                return this.IsNull(this.tableChikuMstKensaku.SuishitsuShishoNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuishitsuShishoNameNull() {
                this[this.tableChikuMstKensaku.SuishitsuShishoNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGaikanChikuwariCdNull() {
                return this.IsNull(this.tableChikuMstKensaku.GaikanChikuwariCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGaikanChikuwariCdNull() {
                this[this.tableChikuMstKensaku.GaikanChikuwariCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGaikanChikuwari2CdNull() {
                return this.IsNull(this.tableChikuMstKensaku.GaikanChikuwari2CdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGaikanChikuwari2CdNull() {
                this[this.tableChikuMstKensaku.GaikanChikuwari2CdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGappeigoChikuCdNull() {
                return this.IsNull(this.tableChikuMstKensaku.GappeigoChikuCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGappeigoChikuCdNull() {
                this[this.tableChikuMstKensaku.GappeigoChikuCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertDtNull() {
                return this.IsNull(this.tableChikuMstKensaku.InsertDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertDtNull() {
                this[this.tableChikuMstKensaku.InsertDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertUserNull() {
                return this.IsNull(this.tableChikuMstKensaku.InsertUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertUserNull() {
                this[this.tableChikuMstKensaku.InsertUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertTarmNull() {
                return this.IsNull(this.tableChikuMstKensaku.InsertTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertTarmNull() {
                this[this.tableChikuMstKensaku.InsertTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateDtNull() {
                return this.IsNull(this.tableChikuMstKensaku.UpdateDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateDtNull() {
                this[this.tableChikuMstKensaku.UpdateDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateUserNull() {
                return this.IsNull(this.tableChikuMstKensaku.UpdateUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateUserNull() {
                this[this.tableChikuMstKensaku.UpdateUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateTarmNull() {
                return this.IsNull(this.tableChikuMstKensaku.UpdateTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateTarmNull() {
                this[this.tableChikuMstKensaku.UpdateTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuTantoKaNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuTantoKaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuTantoKaNull() {
                this[this.tableChikuMstKensaku.ChikuTantoKaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuTantoYubinNoNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuTantoYubinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuTantoYubinNoNull() {
                this[this.tableChikuMstKensaku.ChikuTantoYubinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuTantoAdrNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuTantoAdrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuTantoAdrNull() {
                this[this.tableChikuMstKensaku.ChikuTantoAdrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuTantoTelNoNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuTantoTelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuTantoTelNoNull() {
                this[this.tableChikuMstKensaku.ChikuTantoTelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuTantoFaxNull() {
                return this.IsNull(this.tableChikuMstKensaku.ChikuTantoFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuTantoFaxNull() {
                this[this.tableChikuMstKensaku.ChikuTantoFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelFlgNull() {
                return this.IsNull(this.tableChikuMstKensaku.DelFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelFlgNull() {
                this[this.tableChikuMstKensaku.DelFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ChikuMstSearchCommonRow : global::System.Data.DataRow {
            
            private ChikuMstSearchCommonDataTable tableChikuMstSearchCommon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuMstSearchCommonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChikuMstSearchCommon = ((ChikuMstSearchCommonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuCd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuCdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuNm {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuNmColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuRyakusho {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuRyakushoColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuRyakushoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KankatsuHokenjoCd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.KankatsuHokenjoCdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.KankatsuHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HokenjoNm {
                get {
                    try {
                        return ((string)(this[this.tableChikuMstSearchCommon.HokenjoNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HokenjoNm\' in table \'ChikuMstSearchCommon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChikuMstSearchCommon.HokenjoNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoteiTantoShishoCd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.HoteiTantoShishoCdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.HoteiTantoShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoteiShishoName {
                get {
                    try {
                        return ((string)(this[this.tableChikuMstSearchCommon.HoteiShishoNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoteiShishoName\' in table \'ChikuMstSearchCommon\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableChikuMstSearchCommon.HoteiShishoNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SuishitsuTantoShishoCd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.SuishitsuTantoShishoCdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.SuishitsuTantoShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SuishitsuShishoName {
                get {
                    try {
                        return ((string)(this[this.tableChikuMstSearchCommon.SuishitsuShishoNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuishitsuShishoName\' in table \'ChikuMstSearchCommon\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableChikuMstSearchCommon.SuishitsuShishoNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwariCd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.GaikanChikuwariCdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.GaikanChikuwariCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwari2Cd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.GaikanChikuwari2CdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.GaikanChikuwari2CdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GappeigoChikuCd {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.GappeigoChikuCdColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.GappeigoChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoKa {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuTantoKaColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuTantoKaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoYubinNo {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuTantoYubinNoColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuTantoYubinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoAdr {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuTantoAdrColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuTantoAdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoTelNo {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuTantoTelNoColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuTantoTelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuTantoFax {
                get {
                    return ((string)(this[this.tableChikuMstSearchCommon.ChikuTantoFaxColumn]));
                }
                set {
                    this[this.tableChikuMstSearchCommon.ChikuTantoFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHokenjoNmNull() {
                return this.IsNull(this.tableChikuMstSearchCommon.HokenjoNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHokenjoNmNull() {
                this[this.tableChikuMstSearchCommon.HokenjoNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoteiShishoNameNull() {
                return this.IsNull(this.tableChikuMstSearchCommon.HoteiShishoNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoteiShishoNameNull() {
                this[this.tableChikuMstSearchCommon.HoteiShishoNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSuishitsuShishoNameNull() {
                return this.IsNull(this.tableChikuMstSearchCommon.SuishitsuShishoNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSuishitsuShishoNameNull() {
                this[this.tableChikuMstSearchCommon.SuishitsuShishoNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ChikuwariCdListRow : global::System.Data.DataRow {
            
            private ChikuwariCdListDataTable tableChikuwariCdList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChikuwariCdListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChikuwariCdList = ((ChikuwariCdListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GaikanChikuwariCd {
                get {
                    try {
                        return ((string)(this[this.tableChikuwariCdList.GaikanChikuwariCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GaikanChikuwariCd\' in table \'ChikuwariCdList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChikuwariCdList.GaikanChikuwariCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGaikanChikuwariCdNull() {
                return this.IsNull(this.tableChikuwariCdList.GaikanChikuwariCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGaikanChikuwariCdNull() {
                this[this.tableChikuwariCdList.GaikanChikuwariCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShikuchosonInfoRow : global::System.Data.DataRow {
            
            private ShikuchosonInfoDataTable tableShikuchosonInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShikuchosonInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShikuchosonInfo = ((ShikuchosonInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuNm {
                get {
                    if (this.IsChikuNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShikuchosonInfo.ChikuNmColumn]));
                    }
                }
                set {
                    this[this.tableShikuchosonInfo.ChikuNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChikuCd {
                get {
                    if (this.IsChikuCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShikuchosonInfo.ChikuCdColumn]));
                    }
                }
                set {
                    this[this.tableShikuchosonInfo.ChikuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuNmNull() {
                return this.IsNull(this.tableShikuchosonInfo.ChikuNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuNmNull() {
                this[this.tableShikuchosonInfo.ChikuNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChikuCdNull() {
                return this.IsNull(this.tableShikuchosonInfo.ChikuCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChikuCdNull() {
                this[this.tableShikuchosonInfo.ChikuCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ChikuMstRowChangeEvent : global::System.EventArgs {
            
            private ChikuMstRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstRowChangeEvent(ChikuMstRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ChikuMstKensakuRowChangeEvent : global::System.EventArgs {
            
            private ChikuMstKensakuRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstKensakuRowChangeEvent(ChikuMstKensakuRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstKensakuRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ChikuMstSearchCommonRowChangeEvent : global::System.EventArgs {
            
            private ChikuMstSearchCommonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonRowChangeEvent(ChikuMstSearchCommonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuMstSearchCommonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ChikuwariCdListRowChangeEvent : global::System.EventArgs {
            
            private ChikuwariCdListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuwariCdListRowChangeEvent(ChikuwariCdListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChikuwariCdListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShikuchosonInfoRowChangeEvent : global::System.EventArgs {
            
            private ShikuchosonInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShikuchosonInfoRowChangeEvent(ShikuchosonInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShikuchosonInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjBizSystem.Application.DataSet.ChikuMstDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ChikuMstTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ChikuMstTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ChikuMst";
            tableMapping.ColumnMappings.Add("ChikuCd", "ChikuCd");
            tableMapping.ColumnMappings.Add("ChikuNm", "ChikuNm");
            tableMapping.ColumnMappings.Add("ChikuRyakusho", "ChikuRyakusho");
            tableMapping.ColumnMappings.Add("KankatsuHokenjoCd", "KankatsuHokenjoCd");
            tableMapping.ColumnMappings.Add("HoteiTantoShishoCd", "HoteiTantoShishoCd");
            tableMapping.ColumnMappings.Add("SuishitsuTantoShishoCd", "SuishitsuTantoShishoCd");
            tableMapping.ColumnMappings.Add("GaikanChikuwariCd", "GaikanChikuwariCd");
            tableMapping.ColumnMappings.Add("GaikanChikuwari2Cd", "GaikanChikuwari2Cd");
            tableMapping.ColumnMappings.Add("GappeigoChikuCd", "GappeigoChikuCd");
            tableMapping.ColumnMappings.Add("ChikuTantoKa", "ChikuTantoKa");
            tableMapping.ColumnMappings.Add("ChikuTantoYubinNo", "ChikuTantoYubinNo");
            tableMapping.ColumnMappings.Add("ChikuTantoAdr", "ChikuTantoAdr");
            tableMapping.ColumnMappings.Add("ChikuTantoTelNo", "ChikuTantoTelNo");
            tableMapping.ColumnMappings.Add("ChikuTantoFax", "ChikuTantoFax");
            tableMapping.ColumnMappings.Add("DelFlg", "DelFlg");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ChikuHyojunChi7Jo", "ChikuHyojunChi7Jo");
            tableMapping.ColumnMappings.Add("ChikuHyojunChi11JoTandoku", "ChikuHyojunChi11JoTandoku");
            tableMapping.ColumnMappings.Add("ChikuHyojunChi11JoGappei", "ChikuHyojunChi11JoGappei");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ChikuMst] WHERE (([ChikuCd] = @Original_ChikuCd) AND ([ChikuNm] = @Original_ChikuNm) AND ([ChikuRyakusho] = @Original_ChikuRyakusho) AND ([KankatsuHokenjoCd] = @Original_KankatsuHokenjoCd) AND ([HoteiTantoShishoCd] = @Original_HoteiTantoShishoCd) AND ([SuishitsuTantoShishoCd] = @Original_SuishitsuTantoShishoCd) AND ([GaikanChikuwariCd] = @Original_GaikanChikuwariCd) AND ([GaikanChikuwari2Cd] = @Original_GaikanChikuwari2Cd) AND ([GappeigoChikuCd] = @Original_GappeigoChikuCd) AND ([ChikuTantoKa] = @Original_ChikuTantoKa) AND ([ChikuTantoYubinNo] = @Original_ChikuTantoYubinNo) AND ([ChikuTantoAdr] = @Original_ChikuTantoAdr) AND ([ChikuTantoTelNo] = @Original_ChikuTantoTelNo) AND ([ChikuTantoFax] = @Original_ChikuTantoFax) AND ([ChikuHyojunChi7Jo] = @Original_ChikuHyojunChi7Jo) AND ([ChikuHyojunChi11JoTandoku] = @Original_ChikuHyojunChi11JoTandoku) AND ([ChikuHyojunChi11JoGappei] = @Original_ChikuHyojunChi11JoGappei) AND ([DelFlg] = @Original_DelFlg) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Original_InsertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @Original_UpdateTarm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuRyakusho", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuRyakusho", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KankatsuHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KankatsuHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoteiTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoteiTantoShishoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuishitsuTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuishitsuTantoShishoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GaikanChikuwariCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwariCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GaikanChikuwari2Cd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwari2Cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GappeigoChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GappeigoChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoKa", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoKa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoYubinNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoYubinNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoAdr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoAdr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoTelNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoTelNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoFax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuHyojunChi7Jo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi7Jo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuHyojunChi11JoTandoku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoTandoku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuHyojunChi11JoGappei", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoGappei", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ChikuMst] ([ChikuCd], [ChikuNm], [ChikuRyakusho], [KankatsuHokenjoCd], [HoteiTantoShishoCd], [SuishitsuTantoShishoCd], [GaikanChikuwariCd], [GaikanChikuwari2Cd], [GappeigoChikuCd], [ChikuTantoKa], [ChikuTantoYubinNo], [ChikuTantoAdr], [ChikuTantoTelNo], [ChikuTantoFax], [ChikuHyojunChi7Jo], [ChikuHyojunChi11JoTandoku], [ChikuHyojunChi11JoGappei], [DelFlg], [InsertDt], [InsertUser], [InsertTarm], [UpdateDt], [UpdateUser], [UpdateTarm]) VALUES (@ChikuCd, @ChikuNm, @ChikuRyakusho, @KankatsuHokenjoCd, @HoteiTantoShishoCd, @SuishitsuTantoShishoCd, @GaikanChikuwariCd, @GaikanChikuwari2Cd, @GappeigoChikuCd, @ChikuTantoKa, @ChikuTantoYubinNo, @ChikuTantoAdr, @ChikuTantoTelNo, @ChikuTantoFax, @ChikuHyojunChi7Jo, @ChikuHyojunChi11JoTandoku, @ChikuHyojunChi11JoGappei, @DelFlg, @InsertDt, @InsertUser, @InsertTarm, @UpdateDt, @UpdateUser, @UpdateTarm);
SELECT ChikuCd, ChikuNm, ChikuRyakusho, KankatsuHokenjoCd, HoteiTantoShishoCd, SuishitsuTantoShishoCd, GaikanChikuwariCd, GaikanChikuwari2Cd, GappeigoChikuCd, ChikuTantoKa, ChikuTantoYubinNo, ChikuTantoAdr, ChikuTantoTelNo, ChikuTantoFax, ChikuHyojunChi7Jo, ChikuHyojunChi11JoTandoku, ChikuHyojunChi11JoGappei, DelFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM ChikuMst WHERE (ChikuCd = @ChikuCd)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuRyakusho", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuRyakusho", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KankatsuHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KankatsuHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoteiTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoteiTantoShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuishitsuTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuishitsuTantoShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaikanChikuwariCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwariCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaikanChikuwari2Cd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwari2Cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GappeigoChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GappeigoChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoKa", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoKa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoYubinNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoYubinNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoAdr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoAdr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoTelNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoTelNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuHyojunChi7Jo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi7Jo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuHyojunChi11JoTandoku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoTandoku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuHyojunChi11JoGappei", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoGappei", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ChikuMst] SET [ChikuCd] = @ChikuCd, [ChikuNm] = @ChikuNm, [ChikuRyakusho]" +
                " = @ChikuRyakusho, [KankatsuHokenjoCd] = @KankatsuHokenjoCd, [HoteiTantoShishoCd" +
                "] = @HoteiTantoShishoCd, [SuishitsuTantoShishoCd] = @SuishitsuTantoShishoCd, [Ga" +
                "ikanChikuwariCd] = @GaikanChikuwariCd, [GaikanChikuwari2Cd] = @GaikanChikuwari2C" +
                "d, [GappeigoChikuCd] = @GappeigoChikuCd, [ChikuTantoKa] = @ChikuTantoKa, [ChikuT" +
                "antoYubinNo] = @ChikuTantoYubinNo, [ChikuTantoAdr] = @ChikuTantoAdr, [ChikuTanto" +
                "TelNo] = @ChikuTantoTelNo, [ChikuTantoFax] = @ChikuTantoFax, [ChikuHyojunChi7Jo]" +
                " = @ChikuHyojunChi7Jo, [ChikuHyojunChi11JoTandoku] = @ChikuHyojunChi11JoTandoku," +
                " [ChikuHyojunChi11JoGappei] = @ChikuHyojunChi11JoGappei, [DelFlg] = @DelFlg, [In" +
                "sertDt] = @InsertDt, [InsertUser] = @InsertUser, [InsertTarm] = @InsertTarm, [Up" +
                "dateDt] = @UpdateDt, [UpdateUser] = @UpdateUser, [UpdateTarm] = @UpdateTarm WHER" +
                "E (([ChikuCd] = @Original_ChikuCd) AND ([ChikuNm] = @Original_ChikuNm) AND ([Chi" +
                "kuRyakusho] = @Original_ChikuRyakusho) AND ([KankatsuHokenjoCd] = @Original_Kank" +
                "atsuHokenjoCd) AND ([HoteiTantoShishoCd] = @Original_HoteiTantoShishoCd) AND ([S" +
                "uishitsuTantoShishoCd] = @Original_SuishitsuTantoShishoCd) AND ([GaikanChikuwari" +
                "Cd] = @Original_GaikanChikuwariCd) AND ([GaikanChikuwari2Cd] = @Original_GaikanC" +
                "hikuwari2Cd) AND ([GappeigoChikuCd] = @Original_GappeigoChikuCd) AND ([ChikuTant" +
                "oKa] = @Original_ChikuTantoKa) AND ([ChikuTantoYubinNo] = @Original_ChikuTantoYu" +
                "binNo) AND ([ChikuTantoAdr] = @Original_ChikuTantoAdr) AND ([ChikuTantoTelNo] = " +
                "@Original_ChikuTantoTelNo) AND ([ChikuTantoFax] = @Original_ChikuTantoFax) AND (" +
                "[ChikuHyojunChi7Jo] = @Original_ChikuHyojunChi7Jo) AND ([ChikuHyojunChi11JoTando" +
                "ku] = @Original_ChikuHyojunChi11JoTandoku) AND ([ChikuHyojunChi11JoGappei] = @Or" +
                "iginal_ChikuHyojunChi11JoGappei) AND ([DelFlg] = @Original_DelFlg) AND ([InsertD" +
                "t] = @Original_InsertDt) AND ([InsertUser] = @Original_InsertUser) AND ([InsertT" +
                "arm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateU" +
                "ser] = @Original_UpdateUser) AND ([UpdateTarm] = @Original_UpdateTarm));\r\nSELECT" +
                " ChikuCd, ChikuNm, ChikuRyakusho, KankatsuHokenjoCd, HoteiTantoShishoCd, Suishit" +
                "suTantoShishoCd, GaikanChikuwariCd, GaikanChikuwari2Cd, GappeigoChikuCd, ChikuTa" +
                "ntoKa, ChikuTantoYubinNo, ChikuTantoAdr, ChikuTantoTelNo, ChikuTantoFax, ChikuHy" +
                "ojunChi7Jo, ChikuHyojunChi11JoTandoku, ChikuHyojunChi11JoGappei, DelFlg, InsertD" +
                "t, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM ChikuMst WHERE " +
                "(ChikuCd = @ChikuCd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuRyakusho", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuRyakusho", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KankatsuHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KankatsuHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoteiTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoteiTantoShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SuishitsuTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuishitsuTantoShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaikanChikuwariCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwariCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GaikanChikuwari2Cd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwari2Cd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GappeigoChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GappeigoChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoKa", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoKa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoYubinNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoYubinNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoAdr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoAdr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoTelNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoTelNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuTantoFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuHyojunChi7Jo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi7Jo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuHyojunChi11JoTandoku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoTandoku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuHyojunChi11JoGappei", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoGappei", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DelFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuRyakusho", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuRyakusho", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KankatsuHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KankatsuHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HoteiTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HoteiTantoShishoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SuishitsuTantoShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SuishitsuTantoShishoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GaikanChikuwariCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwariCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GaikanChikuwari2Cd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GaikanChikuwari2Cd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GappeigoChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GappeigoChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoKa", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoKa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoYubinNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoYubinNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoAdr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoAdr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoTelNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoTelNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuTantoFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuTantoFax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuHyojunChi7Jo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi7Jo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuHyojunChi11JoTandoku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoTandoku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuHyojunChi11JoGappei", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuHyojunChi11JoGappei", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DelFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DelFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  ChikuCd
  , ChikuNm
  , ChikuRyakusho
  , KankatsuHokenjoCd
  , HoteiTantoShishoCd
  , SuishitsuTantoShishoCd
  , GaikanChikuwariCd
  , GaikanChikuwari2Cd
  , GappeigoChikuCd
  , ChikuTantoKa
  , ChikuTantoYubinNo
  , ChikuTantoAdr
  , ChikuTantoTelNo
  , ChikuTantoFax
  , ChikuHyojunChi7Jo
  , ChikuHyojunChi11JoTandoku
  , ChikuHyojunChi11JoGappei
  , DelFlg
  , InsertDt
  , InsertUser
  , InsertTarm
  , UpdateDt
  , UpdateUser
  , UpdateTarm 
FROM
  ChikuMst
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM [dbo].[ChikuMst] WHERE ([ChikuCd] = @Original_ChikuCd)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuCd", global::System.Data.SqlDbType.NVarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT
  ChikuCd
  , ChikuNm
  , ChikuRyakusho
  , KankatsuHokenjoCd
  , HoteiTantoShishoCd
  , SuishitsuTantoShishoCd
  , GaikanChikuwariCd
  , GaikanChikuwari2Cd
  , GappeigoChikuCd
  , ChikuTantoKa
  , ChikuTantoYubinNo
  , ChikuTantoAdr
  , ChikuTantoTelNo
  , ChikuTantoFax
  , ChikuHyojunChi7Jo
  , ChikuHyojunChi11JoTandoku
  , ChikuHyojunChi11JoGappei
  , DelFlg
  , InsertDt
  , InsertUser
  , InsertTarm
  , UpdateDt
  , UpdateUser
  , UpdateTarm 
FROM
  ChikuMst 
WHERE
  (ChikuCd = @ChikuCd)
";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuCd", global::System.Data.SqlDbType.NVarChar, 5, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ChikuMstDataSet.ChikuMstDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ChikuMstDataSet.ChikuMstDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ChikuMstDataSet.ChikuMstDataTable dataTable = new ChikuMstDataSet.ChikuMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKey(ChikuMstDataSet.ChikuMstDataTable dataTable, string ChikuCd) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ChikuCd == null)) {
                throw new global::System.ArgumentNullException("ChikuCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ChikuCd));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ChikuMstDataSet.ChikuMstDataTable GetDataByKey(string ChikuCd) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ChikuCd == null)) {
                throw new global::System.ArgumentNullException("ChikuCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ChikuCd));
            }
            ChikuMstDataSet.ChikuMstDataTable dataTable = new ChikuMstDataSet.ChikuMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ChikuMstDataSet.ChikuMstDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ChikuMstDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ChikuMst");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ChikuCd, 
                    string Original_ChikuNm, 
                    string Original_ChikuRyakusho, 
                    string Original_KankatsuHokenjoCd, 
                    string Original_HoteiTantoShishoCd, 
                    string Original_SuishitsuTantoShishoCd, 
                    string Original_GaikanChikuwariCd, 
                    string Original_GaikanChikuwari2Cd, 
                    string Original_GappeigoChikuCd, 
                    string Original_ChikuTantoKa, 
                    string Original_ChikuTantoYubinNo, 
                    string Original_ChikuTantoAdr, 
                    string Original_ChikuTantoTelNo, 
                    string Original_ChikuTantoFax, 
                    int Original_ChikuHyojunChi7Jo, 
                    int Original_ChikuHyojunChi11JoTandoku, 
                    int Original_ChikuHyojunChi11JoGappei, 
                    string Original_DelFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((Original_ChikuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ChikuCd));
            }
            if ((Original_ChikuNm == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ChikuNm));
            }
            if ((Original_ChikuRyakusho == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuRyakusho");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ChikuRyakusho));
            }
            if ((Original_KankatsuHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("Original_KankatsuHokenjoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KankatsuHokenjoCd));
            }
            if ((Original_HoteiTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("Original_HoteiTantoShishoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_HoteiTantoShishoCd));
            }
            if ((Original_SuishitsuTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("Original_SuishitsuTantoShishoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SuishitsuTantoShishoCd));
            }
            if ((Original_GaikanChikuwariCd == null)) {
                throw new global::System.ArgumentNullException("Original_GaikanChikuwariCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GaikanChikuwariCd));
            }
            if ((Original_GaikanChikuwari2Cd == null)) {
                throw new global::System.ArgumentNullException("Original_GaikanChikuwari2Cd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_GaikanChikuwari2Cd));
            }
            if ((Original_GappeigoChikuCd == null)) {
                throw new global::System.ArgumentNullException("Original_GappeigoChikuCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_GappeigoChikuCd));
            }
            if ((Original_ChikuTantoKa == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoKa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ChikuTantoKa));
            }
            if ((Original_ChikuTantoYubinNo == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoYubinNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ChikuTantoYubinNo));
            }
            if ((Original_ChikuTantoAdr == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoAdr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ChikuTantoAdr));
            }
            if ((Original_ChikuTantoTelNo == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoTelNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ChikuTantoTelNo));
            }
            if ((Original_ChikuTantoFax == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoFax");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ChikuTantoFax));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ChikuHyojunChi7Jo));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_ChikuHyojunChi11JoTandoku));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_ChikuHyojunChi11JoGappei));
            if ((Original_DelFlg == null)) {
                throw new global::System.ArgumentNullException("Original_DelFlg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_DelFlg));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ChikuCd, 
                    string ChikuNm, 
                    string ChikuRyakusho, 
                    string KankatsuHokenjoCd, 
                    string HoteiTantoShishoCd, 
                    string SuishitsuTantoShishoCd, 
                    string GaikanChikuwariCd, 
                    string GaikanChikuwari2Cd, 
                    string GappeigoChikuCd, 
                    string ChikuTantoKa, 
                    string ChikuTantoYubinNo, 
                    string ChikuTantoAdr, 
                    string ChikuTantoTelNo, 
                    string ChikuTantoFax, 
                    int ChikuHyojunChi7Jo, 
                    int ChikuHyojunChi11JoTandoku, 
                    int ChikuHyojunChi11JoGappei, 
                    string DelFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm) {
            if ((ChikuCd == null)) {
                throw new global::System.ArgumentNullException("ChikuCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ChikuCd));
            }
            if ((ChikuNm == null)) {
                throw new global::System.ArgumentNullException("ChikuNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ChikuNm));
            }
            if ((ChikuRyakusho == null)) {
                throw new global::System.ArgumentNullException("ChikuRyakusho");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ChikuRyakusho));
            }
            if ((KankatsuHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KankatsuHokenjoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KankatsuHokenjoCd));
            }
            if ((HoteiTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("HoteiTantoShishoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(HoteiTantoShishoCd));
            }
            if ((SuishitsuTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("SuishitsuTantoShishoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SuishitsuTantoShishoCd));
            }
            if ((GaikanChikuwariCd == null)) {
                throw new global::System.ArgumentNullException("GaikanChikuwariCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(GaikanChikuwariCd));
            }
            if ((GaikanChikuwari2Cd == null)) {
                throw new global::System.ArgumentNullException("GaikanChikuwari2Cd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(GaikanChikuwari2Cd));
            }
            if ((GappeigoChikuCd == null)) {
                throw new global::System.ArgumentNullException("GappeigoChikuCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(GappeigoChikuCd));
            }
            if ((ChikuTantoKa == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoKa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ChikuTantoKa));
            }
            if ((ChikuTantoYubinNo == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoYubinNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ChikuTantoYubinNo));
            }
            if ((ChikuTantoAdr == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoAdr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ChikuTantoAdr));
            }
            if ((ChikuTantoTelNo == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoTelNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ChikuTantoTelNo));
            }
            if ((ChikuTantoFax == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoFax");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ChikuTantoFax));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(ChikuHyojunChi7Jo));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(ChikuHyojunChi11JoTandoku));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(ChikuHyojunChi11JoGappei));
            if ((DelFlg == null)) {
                throw new global::System.ArgumentNullException("DelFlg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DelFlg));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(InsertTarm));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ChikuCd, 
                    string ChikuNm, 
                    string ChikuRyakusho, 
                    string KankatsuHokenjoCd, 
                    string HoteiTantoShishoCd, 
                    string SuishitsuTantoShishoCd, 
                    string GaikanChikuwariCd, 
                    string GaikanChikuwari2Cd, 
                    string GappeigoChikuCd, 
                    string ChikuTantoKa, 
                    string ChikuTantoYubinNo, 
                    string ChikuTantoAdr, 
                    string ChikuTantoTelNo, 
                    string ChikuTantoFax, 
                    int ChikuHyojunChi7Jo, 
                    int ChikuHyojunChi11JoTandoku, 
                    int ChikuHyojunChi11JoGappei, 
                    string DelFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_ChikuCd, 
                    string Original_ChikuNm, 
                    string Original_ChikuRyakusho, 
                    string Original_KankatsuHokenjoCd, 
                    string Original_HoteiTantoShishoCd, 
                    string Original_SuishitsuTantoShishoCd, 
                    string Original_GaikanChikuwariCd, 
                    string Original_GaikanChikuwari2Cd, 
                    string Original_GappeigoChikuCd, 
                    string Original_ChikuTantoKa, 
                    string Original_ChikuTantoYubinNo, 
                    string Original_ChikuTantoAdr, 
                    string Original_ChikuTantoTelNo, 
                    string Original_ChikuTantoFax, 
                    int Original_ChikuHyojunChi7Jo, 
                    int Original_ChikuHyojunChi11JoTandoku, 
                    int Original_ChikuHyojunChi11JoGappei, 
                    string Original_DelFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((ChikuCd == null)) {
                throw new global::System.ArgumentNullException("ChikuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ChikuCd));
            }
            if ((ChikuNm == null)) {
                throw new global::System.ArgumentNullException("ChikuNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ChikuNm));
            }
            if ((ChikuRyakusho == null)) {
                throw new global::System.ArgumentNullException("ChikuRyakusho");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ChikuRyakusho));
            }
            if ((KankatsuHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KankatsuHokenjoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KankatsuHokenjoCd));
            }
            if ((HoteiTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("HoteiTantoShishoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(HoteiTantoShishoCd));
            }
            if ((SuishitsuTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("SuishitsuTantoShishoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SuishitsuTantoShishoCd));
            }
            if ((GaikanChikuwariCd == null)) {
                throw new global::System.ArgumentNullException("GaikanChikuwariCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(GaikanChikuwariCd));
            }
            if ((GaikanChikuwari2Cd == null)) {
                throw new global::System.ArgumentNullException("GaikanChikuwari2Cd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(GaikanChikuwari2Cd));
            }
            if ((GappeigoChikuCd == null)) {
                throw new global::System.ArgumentNullException("GappeigoChikuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(GappeigoChikuCd));
            }
            if ((ChikuTantoKa == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoKa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ChikuTantoKa));
            }
            if ((ChikuTantoYubinNo == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoYubinNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ChikuTantoYubinNo));
            }
            if ((ChikuTantoAdr == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoAdr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ChikuTantoAdr));
            }
            if ((ChikuTantoTelNo == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoTelNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ChikuTantoTelNo));
            }
            if ((ChikuTantoFax == null)) {
                throw new global::System.ArgumentNullException("ChikuTantoFax");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ChikuTantoFax));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(ChikuHyojunChi7Jo));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ChikuHyojunChi11JoTandoku));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ChikuHyojunChi11JoGappei));
            if ((DelFlg == null)) {
                throw new global::System.ArgumentNullException("DelFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DelFlg));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(UpdateTarm));
            }
            if ((Original_ChikuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ChikuCd));
            }
            if ((Original_ChikuNm == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ChikuNm));
            }
            if ((Original_ChikuRyakusho == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuRyakusho");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ChikuRyakusho));
            }
            if ((Original_KankatsuHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("Original_KankatsuHokenjoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_KankatsuHokenjoCd));
            }
            if ((Original_HoteiTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("Original_HoteiTantoShishoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_HoteiTantoShishoCd));
            }
            if ((Original_SuishitsuTantoShishoCd == null)) {
                throw new global::System.ArgumentNullException("Original_SuishitsuTantoShishoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_SuishitsuTantoShishoCd));
            }
            if ((Original_GaikanChikuwariCd == null)) {
                throw new global::System.ArgumentNullException("Original_GaikanChikuwariCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_GaikanChikuwariCd));
            }
            if ((Original_GaikanChikuwari2Cd == null)) {
                throw new global::System.ArgumentNullException("Original_GaikanChikuwari2Cd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_GaikanChikuwari2Cd));
            }
            if ((Original_GappeigoChikuCd == null)) {
                throw new global::System.ArgumentNullException("Original_GappeigoChikuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_GappeigoChikuCd));
            }
            if ((Original_ChikuTantoKa == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoKa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ChikuTantoKa));
            }
            if ((Original_ChikuTantoYubinNo == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoYubinNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ChikuTantoYubinNo));
            }
            if ((Original_ChikuTantoAdr == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoAdr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_ChikuTantoAdr));
            }
            if ((Original_ChikuTantoTelNo == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoTelNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ChikuTantoTelNo));
            }
            if ((Original_ChikuTantoFax == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuTantoFax");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_ChikuTantoFax));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_ChikuHyojunChi7Jo));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_ChikuHyojunChi11JoTandoku));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_ChikuHyojunChi11JoGappei));
            if ((Original_DelFlg == null)) {
                throw new global::System.ArgumentNullException("Original_DelFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_DelFlg));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ChikuNm, 
                    string ChikuRyakusho, 
                    string KankatsuHokenjoCd, 
                    string HoteiTantoShishoCd, 
                    string SuishitsuTantoShishoCd, 
                    string GaikanChikuwariCd, 
                    string GaikanChikuwari2Cd, 
                    string GappeigoChikuCd, 
                    string ChikuTantoKa, 
                    string ChikuTantoYubinNo, 
                    string ChikuTantoAdr, 
                    string ChikuTantoTelNo, 
                    string ChikuTantoFax, 
                    int ChikuHyojunChi7Jo, 
                    int ChikuHyojunChi11JoTandoku, 
                    int ChikuHyojunChi11JoGappei, 
                    string DelFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_ChikuCd, 
                    string Original_ChikuNm, 
                    string Original_ChikuRyakusho, 
                    string Original_KankatsuHokenjoCd, 
                    string Original_HoteiTantoShishoCd, 
                    string Original_SuishitsuTantoShishoCd, 
                    string Original_GaikanChikuwariCd, 
                    string Original_GaikanChikuwari2Cd, 
                    string Original_GappeigoChikuCd, 
                    string Original_ChikuTantoKa, 
                    string Original_ChikuTantoYubinNo, 
                    string Original_ChikuTantoAdr, 
                    string Original_ChikuTantoTelNo, 
                    string Original_ChikuTantoFax, 
                    int Original_ChikuHyojunChi7Jo, 
                    int Original_ChikuHyojunChi11JoTandoku, 
                    int Original_ChikuHyojunChi11JoGappei, 
                    string Original_DelFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            return this.Update(Original_ChikuCd, ChikuNm, ChikuRyakusho, KankatsuHokenjoCd, HoteiTantoShishoCd, SuishitsuTantoShishoCd, GaikanChikuwariCd, GaikanChikuwari2Cd, GappeigoChikuCd, ChikuTantoKa, ChikuTantoYubinNo, ChikuTantoAdr, ChikuTantoTelNo, ChikuTantoFax, ChikuHyojunChi7Jo, ChikuHyojunChi11JoTandoku, ChikuHyojunChi11JoGappei, DelFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, Original_ChikuCd, Original_ChikuNm, Original_ChikuRyakusho, Original_KankatsuHokenjoCd, Original_HoteiTantoShishoCd, Original_SuishitsuTantoShishoCd, Original_GaikanChikuwariCd, Original_GaikanChikuwari2Cd, Original_GappeigoChikuCd, Original_ChikuTantoKa, Original_ChikuTantoYubinNo, Original_ChikuTantoAdr, Original_ChikuTantoTelNo, Original_ChikuTantoFax, Original_ChikuHyojunChi7Jo, Original_ChikuHyojunChi11JoTandoku, Original_ChikuHyojunChi11JoGappei, Original_DelFlg, Original_InsertDt, Original_InsertUser, Original_InsertTarm, Original_UpdateDt, Original_UpdateUser, Original_UpdateTarm);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByKey(string Original_ChikuCd) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Original_ChikuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ChikuCd");
            }
            else {
                command.Parameters[0].Value = ((string)(Original_ChikuCd));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ChikuMstKensakuTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ChikuMstKensakuTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ChikuMstKensaku";
            tableMapping.ColumnMappings.Add("ChikuCd", "ChikuCd");
            tableMapping.ColumnMappings.Add("ChikuNm", "ChikuNm");
            tableMapping.ColumnMappings.Add("ChikuRyakusho", "ChikuRyakusho");
            tableMapping.ColumnMappings.Add("KankatsuHokenjoCd", "KankatsuHokenjoCd");
            tableMapping.ColumnMappings.Add("HokenjoNm", "HokenjoNm");
            tableMapping.ColumnMappings.Add("HoteiTantoShishoCd", "HoteiTantoShishoCd");
            tableMapping.ColumnMappings.Add("HoteiShishoName", "HoteiShishoName");
            tableMapping.ColumnMappings.Add("SuishitsuTantoShishoCd", "SuishitsuTantoShishoCd");
            tableMapping.ColumnMappings.Add("SuishitsuShishoName", "SuishitsuShishoName");
            tableMapping.ColumnMappings.Add("GaikanChikuwariCd", "GaikanChikuwariCd");
            tableMapping.ColumnMappings.Add("GaikanChikuwari2Cd", "GaikanChikuwari2Cd");
            tableMapping.ColumnMappings.Add("GappeigoChikuCd", "GappeigoChikuCd");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ChikuTantoKa", "ChikuTantoKa");
            tableMapping.ColumnMappings.Add("ChikuTantoYubinNo", "ChikuTantoYubinNo");
            tableMapping.ColumnMappings.Add("ChikuTantoAdr", "ChikuTantoAdr");
            tableMapping.ColumnMappings.Add("ChikuTantoTelNo", "ChikuTantoTelNo");
            tableMapping.ColumnMappings.Add("ChikuTantoFax", "ChikuTantoFax");
            tableMapping.ColumnMappings.Add("ChikuHyojunChi7Jo", "ChikuHyojunChi7Jo");
            tableMapping.ColumnMappings.Add("ChikuHyojunChi11JoTandoku", "ChikuHyojunChi11JoTandoku");
            tableMapping.ColumnMappings.Add("ChikuHyojunChi11JoGappei", "ChikuHyojunChi11JoGappei");
            tableMapping.ColumnMappings.Add("DelFlg", "DelFlg");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  ck.ChikuCd
  , ck.ChikuNm
  , ck.ChikuRyakusho
  , ck.KankatsuHokenjoCd
  , hj.HokenjoNm
  , ck.HoteiTantoShishoCd
  , ss.ShishoNm AS HoteiShishoName
  , ck.SuishitsuTantoShishoCd
  , st.ShishoNm AS SuishitsuShishoName
  , ck.GaikanChikuwariCd
  , ck.GaikanChikuwari2Cd
  , ck.GappeigoChikuCd
  , ck.ChikuTantoKa
  , ck.ChikuTantoYubinNo
  , ck.ChikuTantoAdr
  , ck.ChikuTantoTelNo
  , ck.ChikuTantoFax
  , ck.ChikuHyojunChi7Jo
  , ck.ChikuHyojunChi11JoTandoku
  , ck.ChikuHyojunChi11JoGappei
  , ck.DelFlg
  , ck.InsertDt
  , ck.InsertUser
  , ck.InsertTarm
  , ck.UpdateDt
  , ck.UpdateUser
  , ck.UpdateTarm 
FROM
  ChikuMst AS ck 
  LEFT OUTER JOIN HokenjoMst AS hj 
    ON ck.KankatsuHokenjoCd = hj.HokenjoCd 
  LEFT OUTER JOIN ShishoMst AS ss 
    ON ck.HoteiTantoShishoCd = ss.ShishoCd 
  LEFT OUTER JOIN ShishoMst AS st 
    ON ck.SuishitsuTantoShishoCd = st.ShishoCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ChikuMstDataSet.ChikuMstKensakuDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ChikuMstDataSet.ChikuMstKensakuDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ChikuMstDataSet.ChikuMstKensakuDataTable dataTable = new ChikuMstDataSet.ChikuMstKensakuDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ChikuMstSearchCommonTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ChikuMstSearchCommonTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ChikuMstSearchCommon";
            tableMapping.ColumnMappings.Add("ChikuCd", "ChikuCd");
            tableMapping.ColumnMappings.Add("ChikuNm", "ChikuNm");
            tableMapping.ColumnMappings.Add("ChikuRyakusho", "ChikuRyakusho");
            tableMapping.ColumnMappings.Add("KankatsuHokenjoCd", "KankatsuHokenjoCd");
            tableMapping.ColumnMappings.Add("HokenjoNm", "HokenjoNm");
            tableMapping.ColumnMappings.Add("HoteiTantoShishoCd", "HoteiTantoShishoCd");
            tableMapping.ColumnMappings.Add("HoteiShishoName", "HoteiShishoName");
            tableMapping.ColumnMappings.Add("SuishitsuTantoShishoCd", "SuishitsuTantoShishoCd");
            tableMapping.ColumnMappings.Add("SuishitsuShishoName", "SuishitsuShishoName");
            tableMapping.ColumnMappings.Add("GaikanChikuwariCd", "GaikanChikuwariCd");
            tableMapping.ColumnMappings.Add("GaikanChikuwari2Cd", "GaikanChikuwari2Cd");
            tableMapping.ColumnMappings.Add("GappeigoChikuCd", "GappeigoChikuCd");
            tableMapping.ColumnMappings.Add("ChikuTantoKa", "ChikuTantoKa");
            tableMapping.ColumnMappings.Add("ChikuTantoYubinNo", "ChikuTantoYubinNo");
            tableMapping.ColumnMappings.Add("ChikuTantoAdr", "ChikuTantoAdr");
            tableMapping.ColumnMappings.Add("ChikuTantoTelNo", "ChikuTantoTelNo");
            tableMapping.ColumnMappings.Add("ChikuTantoFax", "ChikuTantoFax");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  ck.ChikuCd
  , ck.ChikuNm
  , ck.ChikuRyakusho
  , ck.KankatsuHokenjoCd
  , hj.HokenjoNm
  , ck.HoteiTantoShishoCd
  , ss.ShishoNm AS HoteiShishoName
  , ck.SuishitsuTantoShishoCd
  , st.ShishoNm AS SuishitsuShishoName
  , ck.GaikanChikuwariCd
  , ck.GaikanChikuwari2Cd
  , ck.GappeigoChikuCd
  , ck. ChikuTantoKa
  , ck. ChikuTantoYubinNo
  , ck. ChikuTantoAdr
  , ck. ChikuTantoTelNo
  , ck. ChikuTantoFax
FROM
  ChikuMst AS ck 
  LEFT OUTER JOIN HokenjoMst AS hj 
    ON ck.KankatsuHokenjoCd = hj.HokenjoCd 
  LEFT OUTER JOIN ShishoMst AS ss 
    ON ck.HoteiTantoShishoCd = ss.ShishoCd 
  LEFT OUTER JOIN ShishoMst AS st 
    ON ck.SuishitsuTantoShishoCd = st.ShishoCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ChikuMstDataSet.ChikuMstSearchCommonDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ChikuMstDataSet.ChikuMstSearchCommonDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ChikuMstDataSet.ChikuMstSearchCommonDataTable dataTable = new ChikuMstDataSet.ChikuMstSearchCommonDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ChikuwariCdListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ChikuwariCdListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ChikuwariCdList";
            tableMapping.ColumnMappings.Add("GaikanChikuwariCd", "GaikanChikuwariCd");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  GaikanChikuwariCd 
FROM
  ( 
    SELECT DISTINCT
      GaikanChikuwariCd 
    FROM
      ChikuMst 
    WHERE
      GaikanChikuwariCd <> '' 
    UNION 
    SELECT DISTINCT
      GaikanChikuwari2Cd 
    FROM
      ChikuMst 
    WHERE
      GaikanChikuwari2Cd <> ''
  ) AS A 
ORDER BY
  GaikanChikuwariCd
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ChikuMstDataSet.ChikuwariCdListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ChikuMstDataSet.ChikuwariCdListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ChikuMstDataSet.ChikuwariCdListDataTable dataTable = new ChikuMstDataSet.ChikuwariCdListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShikuchosonInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShikuchosonInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShikuchosonInfo";
            tableMapping.ColumnMappings.Add("ChikuNm", "ChikuNm");
            tableMapping.ColumnMappings.Add("ChikuCd", "ChikuCd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ChikuMst] WHERE (([ChikuCd] = @Original_ChikuCd))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ChikuMst] ([ChikuCd]) VALUES (@ChikuCd);\r\nSELECT { fn CONCAT({ fn CO" +
                "NCAT(ChikuCd, \':\') }, ChikuNm) } AS ChikuNm, ChikuCd FROM ChikuMst AS cm WHERE (" +
                "ChikuCd = @ChikuCd) ORDER BY ChikuCd";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ChikuMst] SET [ChikuCd] = @ChikuCd WHERE (([ChikuCd] = @Original_ChikuCd)" +
                ");\r\nSELECT { fn CONCAT({ fn CONCAT(ChikuCd, \':\') }, ChikuNm) } AS ChikuNm, Chiku" +
                "Cd FROM ChikuMst AS cm WHERE (ChikuCd = @ChikuCd) ORDER BY ChikuCd";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChikuCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChikuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT                      { fn CONCAT({ fn CONCAT(ChikuCd, \':\') }, ChikuNm) } A" +
                "S ChikuNm, ChikuCd\r\nFROM                         ChikuMst AS cm\r\nORDER BY       " +
                "        ChikuCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ChikuMstDataSet.ShikuchosonInfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ChikuMstDataSet.ShikuchosonInfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ChikuMstDataSet.ShikuchosonInfoDataTable dataTable = new ChikuMstDataSet.ShikuchosonInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ChikuMstDataSet.ShikuchosonInfoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ChikuMstDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ShikuchosonInfo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ChikuCd) {
            if ((Original_ChikuCd == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ChikuCd));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ChikuCd) {
            if ((ChikuCd == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ChikuCd));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ChikuCd, string Original_ChikuCd) {
            if ((ChikuCd == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ChikuCd));
            }
            if ((Original_ChikuCd == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_ChikuCd));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ChikuMstTableAdapter _chikuMstTableAdapter;
        
        private ShikuchosonInfoTableAdapter _shikuchosonInfoTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ChikuMstTableAdapter ChikuMstTableAdapter {
            get {
                return this._chikuMstTableAdapter;
            }
            set {
                this._chikuMstTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ShikuchosonInfoTableAdapter ShikuchosonInfoTableAdapter {
            get {
                return this._shikuchosonInfoTableAdapter;
            }
            set {
                this._shikuchosonInfoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._chikuMstTableAdapter != null) 
                            && (this._chikuMstTableAdapter.Connection != null))) {
                    return this._chikuMstTableAdapter.Connection;
                }
                if (((this._shikuchosonInfoTableAdapter != null) 
                            && (this._shikuchosonInfoTableAdapter.Connection != null))) {
                    return this._shikuchosonInfoTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._chikuMstTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._shikuchosonInfoTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ChikuMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shikuchosonInfoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ShikuchosonInfo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._shikuchosonInfoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._chikuMstTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ChikuMst.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._chikuMstTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ChikuMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shikuchosonInfoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ShikuchosonInfo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._shikuchosonInfoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._chikuMstTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ChikuMst.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._chikuMstTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ChikuMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._chikuMstTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ChikuMst.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._chikuMstTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._shikuchosonInfoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ShikuchosonInfo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._shikuchosonInfoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ChikuMstDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._chikuMstTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._chikuMstTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._shikuchosonInfoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._shikuchosonInfoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._chikuMstTableAdapter != null)) {
                    revertConnections.Add(this._chikuMstTableAdapter, this._chikuMstTableAdapter.Connection);
                    this._chikuMstTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._chikuMstTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._chikuMstTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._chikuMstTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._chikuMstTableAdapter.Adapter);
                    }
                }
                if ((this._shikuchosonInfoTableAdapter != null)) {
                    revertConnections.Add(this._shikuchosonInfoTableAdapter, this._shikuchosonInfoTableAdapter.Connection);
                    this._shikuchosonInfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._shikuchosonInfoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._shikuchosonInfoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._shikuchosonInfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._shikuchosonInfoTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._chikuMstTableAdapter != null)) {
                    this._chikuMstTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._chikuMstTableAdapter]));
                    this._chikuMstTableAdapter.Transaction = null;
                }
                if ((this._shikuchosonInfoTableAdapter != null)) {
                    this._shikuchosonInfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._shikuchosonInfoTableAdapter]));
                    this._shikuchosonInfoTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591