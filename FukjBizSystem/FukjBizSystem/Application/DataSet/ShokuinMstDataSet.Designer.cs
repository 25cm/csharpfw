//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjBizSystem.Application.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ShokuinMstDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ShokuinMstDataSet : global::System.Data.DataSet {
        
        private ShokuinMstDataTable tableShokuinMst;
        
        private ShokuinMstKensakuDataTable tableShokuinMstKensaku;
        
        private ShokuinNmShishoNmKensainSyuhoListDataTable tableShokuinNmShishoNmKensainSyuhoList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokuinMstDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ShokuinMstDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ShokuinMst"] != null)) {
                    base.Tables.Add(new ShokuinMstDataTable(ds.Tables["ShokuinMst"]));
                }
                if ((ds.Tables["ShokuinMstKensaku"] != null)) {
                    base.Tables.Add(new ShokuinMstKensakuDataTable(ds.Tables["ShokuinMstKensaku"]));
                }
                if ((ds.Tables["ShokuinNmShishoNmKensainSyuhoList"] != null)) {
                    base.Tables.Add(new ShokuinNmShishoNmKensainSyuhoListDataTable(ds.Tables["ShokuinNmShishoNmKensainSyuhoList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokuinMstDataTable ShokuinMst {
            get {
                return this.tableShokuinMst;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokuinMstKensakuDataTable ShokuinMstKensaku {
            get {
                return this.tableShokuinMstKensaku;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokuinNmShishoNmKensainSyuhoListDataTable ShokuinNmShishoNmKensainSyuhoList {
            get {
                return this.tableShokuinNmShishoNmKensainSyuhoList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ShokuinMstDataSet cln = ((ShokuinMstDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ShokuinMst"] != null)) {
                    base.Tables.Add(new ShokuinMstDataTable(ds.Tables["ShokuinMst"]));
                }
                if ((ds.Tables["ShokuinMstKensaku"] != null)) {
                    base.Tables.Add(new ShokuinMstKensakuDataTable(ds.Tables["ShokuinMstKensaku"]));
                }
                if ((ds.Tables["ShokuinNmShishoNmKensainSyuhoList"] != null)) {
                    base.Tables.Add(new ShokuinNmShishoNmKensainSyuhoListDataTable(ds.Tables["ShokuinNmShishoNmKensainSyuhoList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableShokuinMst = ((ShokuinMstDataTable)(base.Tables["ShokuinMst"]));
            if ((initTable == true)) {
                if ((this.tableShokuinMst != null)) {
                    this.tableShokuinMst.InitVars();
                }
            }
            this.tableShokuinMstKensaku = ((ShokuinMstKensakuDataTable)(base.Tables["ShokuinMstKensaku"]));
            if ((initTable == true)) {
                if ((this.tableShokuinMstKensaku != null)) {
                    this.tableShokuinMstKensaku.InitVars();
                }
            }
            this.tableShokuinNmShishoNmKensainSyuhoList = ((ShokuinNmShishoNmKensainSyuhoListDataTable)(base.Tables["ShokuinNmShishoNmKensainSyuhoList"]));
            if ((initTable == true)) {
                if ((this.tableShokuinNmShishoNmKensainSyuhoList != null)) {
                    this.tableShokuinNmShishoNmKensainSyuhoList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ShokuinMstDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ShokuinMstDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableShokuinMst = new ShokuinMstDataTable();
            base.Tables.Add(this.tableShokuinMst);
            this.tableShokuinMstKensaku = new ShokuinMstKensakuDataTable();
            base.Tables.Add(this.tableShokuinMstKensaku);
            this.tableShokuinNmShishoNmKensainSyuhoList = new ShokuinNmShishoNmKensainSyuhoListDataTable();
            base.Tables.Add(this.tableShokuinNmShishoNmKensainSyuhoList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokuinMst() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokuinMstKensaku() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokuinNmShishoNmKensainSyuhoList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ShokuinMstDataSet ds = new ShokuinMstDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokuinMstRowChangeEventHandler(object sender, ShokuinMstRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokuinMstKensakuRowChangeEventHandler(object sender, ShokuinMstKensakuRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokuinNmShishoNmKensainSyuhoListRowChangeEventHandler(object sender, ShokuinNmShishoNmKensainSyuhoListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokuinMstDataTable : global::System.Data.TypedTableBase<ShokuinMstRow> {
            
            private global::System.Data.DataColumn columnShokuinCd;
            
            private global::System.Data.DataColumn columnShokuinShozokuShishoCd;
            
            private global::System.Data.DataColumn columnShokuinNm;
            
            private global::System.Data.DataColumn columnShokuinKana;
            
            private global::System.Data.DataColumn columnShokuinSeinengappi;
            
            private global::System.Data.DataColumn columnShokuinNyushaDt;
            
            private global::System.Data.DataColumn columnShokuinKensainFlg;
            
            private global::System.Data.DataColumn columnShokuinTaishokuDt;
            
            private global::System.Data.DataColumn columnShokuinTaishokuFlg;
            
            private global::System.Data.DataColumn columnShokuinPassword;
            
            private global::System.Data.DataColumn columnShokuinInjiJun;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnShokuinShukeiJogaiFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstDataTable() {
                this.TableName = "ShokuinMst";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokuinMstDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokuinMstDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinCdColumn {
                get {
                    return this.columnShokuinCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinShozokuShishoCdColumn {
                get {
                    return this.columnShokuinShozokuShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinNmColumn {
                get {
                    return this.columnShokuinNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinKanaColumn {
                get {
                    return this.columnShokuinKana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinSeinengappiColumn {
                get {
                    return this.columnShokuinSeinengappi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinNyushaDtColumn {
                get {
                    return this.columnShokuinNyushaDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinKensainFlgColumn {
                get {
                    return this.columnShokuinKensainFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinTaishokuDtColumn {
                get {
                    return this.columnShokuinTaishokuDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinTaishokuFlgColumn {
                get {
                    return this.columnShokuinTaishokuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinPasswordColumn {
                get {
                    return this.columnShokuinPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinInjiJunColumn {
                get {
                    return this.columnShokuinInjiJun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinShukeiJogaiFlgColumn {
                get {
                    return this.columnShokuinShukeiJogaiFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstRow this[int index] {
                get {
                    return ((ShokuinMstRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstRowChangeEventHandler ShokuinMstRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstRowChangeEventHandler ShokuinMstRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstRowChangeEventHandler ShokuinMstRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstRowChangeEventHandler ShokuinMstRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokuinMstRow(ShokuinMstRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstRow AddShokuinMstRow(
                        string ShokuinCd, 
                        string ShokuinShozokuShishoCd, 
                        string ShokuinNm, 
                        string ShokuinKana, 
                        string ShokuinSeinengappi, 
                        string ShokuinNyushaDt, 
                        string ShokuinKensainFlg, 
                        string ShokuinTaishokuDt, 
                        string ShokuinTaishokuFlg, 
                        string ShokuinPassword, 
                        int ShokuinInjiJun, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        string ShokuinShukeiJogaiFlg) {
                ShokuinMstRow rowShokuinMstRow = ((ShokuinMstRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShokuinCd,
                        ShokuinShozokuShishoCd,
                        ShokuinNm,
                        ShokuinKana,
                        ShokuinSeinengappi,
                        ShokuinNyushaDt,
                        ShokuinKensainFlg,
                        ShokuinTaishokuDt,
                        ShokuinTaishokuFlg,
                        ShokuinPassword,
                        ShokuinInjiJun,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ShokuinShukeiJogaiFlg};
                rowShokuinMstRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokuinMstRow);
                return rowShokuinMstRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstRow FindByShokuinCd(string ShokuinCd) {
                return ((ShokuinMstRow)(this.Rows.Find(new object[] {
                            ShokuinCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokuinMstDataTable cln = ((ShokuinMstDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokuinMstDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShokuinCd = base.Columns["ShokuinCd"];
                this.columnShokuinShozokuShishoCd = base.Columns["ShokuinShozokuShishoCd"];
                this.columnShokuinNm = base.Columns["ShokuinNm"];
                this.columnShokuinKana = base.Columns["ShokuinKana"];
                this.columnShokuinSeinengappi = base.Columns["ShokuinSeinengappi"];
                this.columnShokuinNyushaDt = base.Columns["ShokuinNyushaDt"];
                this.columnShokuinKensainFlg = base.Columns["ShokuinKensainFlg"];
                this.columnShokuinTaishokuDt = base.Columns["ShokuinTaishokuDt"];
                this.columnShokuinTaishokuFlg = base.Columns["ShokuinTaishokuFlg"];
                this.columnShokuinPassword = base.Columns["ShokuinPassword"];
                this.columnShokuinInjiJun = base.Columns["ShokuinInjiJun"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnShokuinShukeiJogaiFlg = base.Columns["ShokuinShukeiJogaiFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShokuinCd = new global::System.Data.DataColumn("ShokuinCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinCd);
                this.columnShokuinShozokuShishoCd = new global::System.Data.DataColumn("ShokuinShozokuShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinShozokuShishoCd);
                this.columnShokuinNm = new global::System.Data.DataColumn("ShokuinNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinNm);
                this.columnShokuinKana = new global::System.Data.DataColumn("ShokuinKana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinKana);
                this.columnShokuinSeinengappi = new global::System.Data.DataColumn("ShokuinSeinengappi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinSeinengappi);
                this.columnShokuinNyushaDt = new global::System.Data.DataColumn("ShokuinNyushaDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinNyushaDt);
                this.columnShokuinKensainFlg = new global::System.Data.DataColumn("ShokuinKensainFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinKensainFlg);
                this.columnShokuinTaishokuDt = new global::System.Data.DataColumn("ShokuinTaishokuDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinTaishokuDt);
                this.columnShokuinTaishokuFlg = new global::System.Data.DataColumn("ShokuinTaishokuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinTaishokuFlg);
                this.columnShokuinPassword = new global::System.Data.DataColumn("ShokuinPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinPassword);
                this.columnShokuinInjiJun = new global::System.Data.DataColumn("ShokuinInjiJun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinInjiJun);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnShokuinShukeiJogaiFlg = new global::System.Data.DataColumn("ShokuinShukeiJogaiFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinShukeiJogaiFlg);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShokuinCd}, true));
                this.columnShokuinCd.AllowDBNull = false;
                this.columnShokuinCd.Unique = true;
                this.columnShokuinCd.MaxLength = 3;
                this.columnShokuinShozokuShishoCd.AllowDBNull = false;
                this.columnShokuinShozokuShishoCd.MaxLength = 1;
                this.columnShokuinNm.AllowDBNull = false;
                this.columnShokuinNm.MaxLength = 20;
                this.columnShokuinKana.AllowDBNull = false;
                this.columnShokuinKana.MaxLength = 20;
                this.columnShokuinSeinengappi.AllowDBNull = false;
                this.columnShokuinSeinengappi.MaxLength = 8;
                this.columnShokuinNyushaDt.AllowDBNull = false;
                this.columnShokuinNyushaDt.MaxLength = 8;
                this.columnShokuinKensainFlg.AllowDBNull = false;
                this.columnShokuinKensainFlg.MaxLength = 1;
                this.columnShokuinTaishokuDt.AllowDBNull = false;
                this.columnShokuinTaishokuDt.MaxLength = 8;
                this.columnShokuinTaishokuFlg.AllowDBNull = false;
                this.columnShokuinTaishokuFlg.MaxLength = 1;
                this.columnShokuinPassword.AllowDBNull = false;
                this.columnShokuinPassword.MaxLength = 10;
                this.columnShokuinInjiJun.AllowDBNull = false;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnShokuinShukeiJogaiFlg.AllowDBNull = false;
                this.columnShokuinShukeiJogaiFlg.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstRow NewShokuinMstRow() {
                return ((ShokuinMstRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokuinMstRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokuinMstRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokuinMstRowChanged != null)) {
                    this.ShokuinMstRowChanged(this, new ShokuinMstRowChangeEvent(((ShokuinMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokuinMstRowChanging != null)) {
                    this.ShokuinMstRowChanging(this, new ShokuinMstRowChangeEvent(((ShokuinMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokuinMstRowDeleted != null)) {
                    this.ShokuinMstRowDeleted(this, new ShokuinMstRowChangeEvent(((ShokuinMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokuinMstRowDeleting != null)) {
                    this.ShokuinMstRowDeleting(this, new ShokuinMstRowChangeEvent(((ShokuinMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokuinMstRow(ShokuinMstRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokuinMstDataSet ds = new ShokuinMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokuinMstDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokuinMstKensakuDataTable : global::System.Data.TypedTableBase<ShokuinMstKensakuRow> {
            
            private global::System.Data.DataColumn columnShokuinShozokuShishoCd;
            
            private global::System.Data.DataColumn columnShokuinCd;
            
            private global::System.Data.DataColumn columnShokuinNm;
            
            private global::System.Data.DataColumn columnShokuinKana;
            
            private global::System.Data.DataColumn columnShokuinSeinengappi;
            
            private global::System.Data.DataColumn columnShokuinNyushaDt;
            
            private global::System.Data.DataColumn columnShokuinKensainFlg;
            
            private global::System.Data.DataColumn columnShokuinTaishokuDt;
            
            private global::System.Data.DataColumn columnShokuinTaishokuFlg;
            
            private global::System.Data.DataColumn columnShokuinPassword;
            
            private global::System.Data.DataColumn columnShokuinInjiJun;
            
            private global::System.Data.DataColumn columnShishoNm;
            
            private global::System.Data.DataColumn columnShokuinShukeiJogaiFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstKensakuDataTable() {
                this.TableName = "ShokuinMstKensaku";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokuinMstKensakuDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokuinMstKensakuDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinShozokuShishoCdColumn {
                get {
                    return this.columnShokuinShozokuShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinCdColumn {
                get {
                    return this.columnShokuinCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinNmColumn {
                get {
                    return this.columnShokuinNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinKanaColumn {
                get {
                    return this.columnShokuinKana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinSeinengappiColumn {
                get {
                    return this.columnShokuinSeinengappi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinNyushaDtColumn {
                get {
                    return this.columnShokuinNyushaDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinKensainFlgColumn {
                get {
                    return this.columnShokuinKensainFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinTaishokuDtColumn {
                get {
                    return this.columnShokuinTaishokuDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinTaishokuFlgColumn {
                get {
                    return this.columnShokuinTaishokuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinPasswordColumn {
                get {
                    return this.columnShokuinPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinInjiJunColumn {
                get {
                    return this.columnShokuinInjiJun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShishoNmColumn {
                get {
                    return this.columnShishoNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinShukeiJogaiFlgColumn {
                get {
                    return this.columnShokuinShukeiJogaiFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstKensakuRow this[int index] {
                get {
                    return ((ShokuinMstKensakuRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstKensakuRowChangeEventHandler ShokuinMstKensakuRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstKensakuRowChangeEventHandler ShokuinMstKensakuRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstKensakuRowChangeEventHandler ShokuinMstKensakuRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinMstKensakuRowChangeEventHandler ShokuinMstKensakuRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokuinMstKensakuRow(ShokuinMstKensakuRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstKensakuRow AddShokuinMstKensakuRow(string ShokuinShozokuShishoCd, string ShokuinCd, string ShokuinNm, string ShokuinKana, string ShokuinSeinengappi, string ShokuinNyushaDt, string ShokuinKensainFlg, string ShokuinTaishokuDt, string ShokuinTaishokuFlg, string ShokuinPassword, int ShokuinInjiJun, string ShishoNm, string ShokuinShukeiJogaiFlg) {
                ShokuinMstKensakuRow rowShokuinMstKensakuRow = ((ShokuinMstKensakuRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShokuinShozokuShishoCd,
                        ShokuinCd,
                        ShokuinNm,
                        ShokuinKana,
                        ShokuinSeinengappi,
                        ShokuinNyushaDt,
                        ShokuinKensainFlg,
                        ShokuinTaishokuDt,
                        ShokuinTaishokuFlg,
                        ShokuinPassword,
                        ShokuinInjiJun,
                        ShishoNm,
                        ShokuinShukeiJogaiFlg};
                rowShokuinMstKensakuRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokuinMstKensakuRow);
                return rowShokuinMstKensakuRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokuinMstKensakuDataTable cln = ((ShokuinMstKensakuDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokuinMstKensakuDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShokuinShozokuShishoCd = base.Columns["ShokuinShozokuShishoCd"];
                this.columnShokuinCd = base.Columns["ShokuinCd"];
                this.columnShokuinNm = base.Columns["ShokuinNm"];
                this.columnShokuinKana = base.Columns["ShokuinKana"];
                this.columnShokuinSeinengappi = base.Columns["ShokuinSeinengappi"];
                this.columnShokuinNyushaDt = base.Columns["ShokuinNyushaDt"];
                this.columnShokuinKensainFlg = base.Columns["ShokuinKensainFlg"];
                this.columnShokuinTaishokuDt = base.Columns["ShokuinTaishokuDt"];
                this.columnShokuinTaishokuFlg = base.Columns["ShokuinTaishokuFlg"];
                this.columnShokuinPassword = base.Columns["ShokuinPassword"];
                this.columnShokuinInjiJun = base.Columns["ShokuinInjiJun"];
                this.columnShishoNm = base.Columns["ShishoNm"];
                this.columnShokuinShukeiJogaiFlg = base.Columns["ShokuinShukeiJogaiFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShokuinShozokuShishoCd = new global::System.Data.DataColumn("ShokuinShozokuShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinShozokuShishoCd);
                this.columnShokuinCd = new global::System.Data.DataColumn("ShokuinCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinCd);
                this.columnShokuinNm = new global::System.Data.DataColumn("ShokuinNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinNm);
                this.columnShokuinKana = new global::System.Data.DataColumn("ShokuinKana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinKana);
                this.columnShokuinSeinengappi = new global::System.Data.DataColumn("ShokuinSeinengappi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinSeinengappi);
                this.columnShokuinNyushaDt = new global::System.Data.DataColumn("ShokuinNyushaDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinNyushaDt);
                this.columnShokuinKensainFlg = new global::System.Data.DataColumn("ShokuinKensainFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinKensainFlg);
                this.columnShokuinTaishokuDt = new global::System.Data.DataColumn("ShokuinTaishokuDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinTaishokuDt);
                this.columnShokuinTaishokuFlg = new global::System.Data.DataColumn("ShokuinTaishokuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinTaishokuFlg);
                this.columnShokuinPassword = new global::System.Data.DataColumn("ShokuinPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinPassword);
                this.columnShokuinInjiJun = new global::System.Data.DataColumn("ShokuinInjiJun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinInjiJun);
                this.columnShishoNm = new global::System.Data.DataColumn("ShishoNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShishoNm);
                this.columnShokuinShukeiJogaiFlg = new global::System.Data.DataColumn("ShokuinShukeiJogaiFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinShukeiJogaiFlg);
                this.columnShokuinShozokuShishoCd.MaxLength = 1;
                this.columnShokuinCd.MaxLength = 3;
                this.columnShokuinNm.MaxLength = 20;
                this.columnShokuinKana.MaxLength = 20;
                this.columnShokuinSeinengappi.MaxLength = 10;
                this.columnShokuinNyushaDt.MaxLength = 10;
                this.columnShokuinKensainFlg.MaxLength = 1;
                this.columnShokuinTaishokuDt.MaxLength = 10;
                this.columnShokuinTaishokuFlg.MaxLength = 1;
                this.columnShokuinPassword.MaxLength = 10;
                this.columnShishoNm.MaxLength = 10;
                this.columnShokuinShukeiJogaiFlg.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstKensakuRow NewShokuinMstKensakuRow() {
                return ((ShokuinMstKensakuRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokuinMstKensakuRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokuinMstKensakuRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokuinMstKensakuRowChanged != null)) {
                    this.ShokuinMstKensakuRowChanged(this, new ShokuinMstKensakuRowChangeEvent(((ShokuinMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokuinMstKensakuRowChanging != null)) {
                    this.ShokuinMstKensakuRowChanging(this, new ShokuinMstKensakuRowChangeEvent(((ShokuinMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokuinMstKensakuRowDeleted != null)) {
                    this.ShokuinMstKensakuRowDeleted(this, new ShokuinMstKensakuRowChangeEvent(((ShokuinMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokuinMstKensakuRowDeleting != null)) {
                    this.ShokuinMstKensakuRowDeleting(this, new ShokuinMstKensakuRowChangeEvent(((ShokuinMstKensakuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokuinMstKensakuRow(ShokuinMstKensakuRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokuinMstDataSet ds = new ShokuinMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokuinMstKensakuDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokuinNmShishoNmKensainSyuhoListDataTable : global::System.Data.TypedTableBase<ShokuinNmShishoNmKensainSyuhoListRow> {
            
            private global::System.Data.DataColumn columnShokuinCd;
            
            private global::System.Data.DataColumn columnShokuinNm;
            
            private global::System.Data.DataColumn columnShishoCd;
            
            private global::System.Data.DataColumn columnShishoNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinNmShishoNmKensainSyuhoListDataTable() {
                this.TableName = "ShokuinNmShishoNmKensainSyuhoList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokuinNmShishoNmKensainSyuhoListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokuinNmShishoNmKensainSyuhoListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinCdColumn {
                get {
                    return this.columnShokuinCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinNmColumn {
                get {
                    return this.columnShokuinNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShishoCdColumn {
                get {
                    return this.columnShishoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShishoNmColumn {
                get {
                    return this.columnShishoNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinNmShishoNmKensainSyuhoListRow this[int index] {
                get {
                    return ((ShokuinNmShishoNmKensainSyuhoListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinNmShishoNmKensainSyuhoListRowChangeEventHandler ShokuinNmShishoNmKensainSyuhoListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinNmShishoNmKensainSyuhoListRowChangeEventHandler ShokuinNmShishoNmKensainSyuhoListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinNmShishoNmKensainSyuhoListRowChangeEventHandler ShokuinNmShishoNmKensainSyuhoListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokuinNmShishoNmKensainSyuhoListRowChangeEventHandler ShokuinNmShishoNmKensainSyuhoListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokuinNmShishoNmKensainSyuhoListRow(ShokuinNmShishoNmKensainSyuhoListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinNmShishoNmKensainSyuhoListRow AddShokuinNmShishoNmKensainSyuhoListRow(string ShokuinCd, string ShokuinNm, string ShishoCd, string ShishoNm) {
                ShokuinNmShishoNmKensainSyuhoListRow rowShokuinNmShishoNmKensainSyuhoListRow = ((ShokuinNmShishoNmKensainSyuhoListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShokuinCd,
                        ShokuinNm,
                        ShishoCd,
                        ShishoNm};
                rowShokuinNmShishoNmKensainSyuhoListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokuinNmShishoNmKensainSyuhoListRow);
                return rowShokuinNmShishoNmKensainSyuhoListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokuinNmShishoNmKensainSyuhoListDataTable cln = ((ShokuinNmShishoNmKensainSyuhoListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokuinNmShishoNmKensainSyuhoListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShokuinCd = base.Columns["ShokuinCd"];
                this.columnShokuinNm = base.Columns["ShokuinNm"];
                this.columnShishoCd = base.Columns["ShishoCd"];
                this.columnShishoNm = base.Columns["ShishoNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShokuinCd = new global::System.Data.DataColumn("ShokuinCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinCd);
                this.columnShokuinNm = new global::System.Data.DataColumn("ShokuinNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinNm);
                this.columnShishoCd = new global::System.Data.DataColumn("ShishoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShishoCd);
                this.columnShishoNm = new global::System.Data.DataColumn("ShishoNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShishoNm);
                this.columnShokuinCd.MaxLength = 3;
                this.columnShokuinNm.MaxLength = 20;
                this.columnShishoCd.MaxLength = 1;
                this.columnShishoNm.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinNmShishoNmKensainSyuhoListRow NewShokuinNmShishoNmKensainSyuhoListRow() {
                return ((ShokuinNmShishoNmKensainSyuhoListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokuinNmShishoNmKensainSyuhoListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokuinNmShishoNmKensainSyuhoListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokuinNmShishoNmKensainSyuhoListRowChanged != null)) {
                    this.ShokuinNmShishoNmKensainSyuhoListRowChanged(this, new ShokuinNmShishoNmKensainSyuhoListRowChangeEvent(((ShokuinNmShishoNmKensainSyuhoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokuinNmShishoNmKensainSyuhoListRowChanging != null)) {
                    this.ShokuinNmShishoNmKensainSyuhoListRowChanging(this, new ShokuinNmShishoNmKensainSyuhoListRowChangeEvent(((ShokuinNmShishoNmKensainSyuhoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokuinNmShishoNmKensainSyuhoListRowDeleted != null)) {
                    this.ShokuinNmShishoNmKensainSyuhoListRowDeleted(this, new ShokuinNmShishoNmKensainSyuhoListRowChangeEvent(((ShokuinNmShishoNmKensainSyuhoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokuinNmShishoNmKensainSyuhoListRowDeleting != null)) {
                    this.ShokuinNmShishoNmKensainSyuhoListRowDeleting(this, new ShokuinNmShishoNmKensainSyuhoListRowChangeEvent(((ShokuinNmShishoNmKensainSyuhoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokuinNmShishoNmKensainSyuhoListRow(ShokuinNmShishoNmKensainSyuhoListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokuinMstDataSet ds = new ShokuinMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokuinNmShishoNmKensainSyuhoListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokuinMstRow : global::System.Data.DataRow {
            
            private ShokuinMstDataTable tableShokuinMst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokuinMstRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokuinMst = ((ShokuinMstDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinCd {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinCdColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinShozokuShishoCd {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinShozokuShishoCdColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinShozokuShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinNm {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinNmColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinKana {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinKanaColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinKanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinSeinengappi {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinSeinengappiColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinSeinengappiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinNyushaDt {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinNyushaDtColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinNyushaDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinKensainFlg {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinKensainFlgColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinKensainFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinTaishokuDt {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinTaishokuDtColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinTaishokuDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinTaishokuFlg {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinTaishokuFlgColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinTaishokuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinPassword {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinPasswordColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokuinInjiJun {
                get {
                    return ((int)(this[this.tableShokuinMst.ShokuinInjiJunColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinInjiJunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokuinMst.InsertDtColumn]));
                }
                set {
                    this[this.tableShokuinMst.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableShokuinMst.InsertUserColumn]));
                }
                set {
                    this[this.tableShokuinMst.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableShokuinMst.InsertTarmColumn]));
                }
                set {
                    this[this.tableShokuinMst.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokuinMst.UpdateDtColumn]));
                }
                set {
                    this[this.tableShokuinMst.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableShokuinMst.UpdateUserColumn]));
                }
                set {
                    this[this.tableShokuinMst.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableShokuinMst.UpdateTarmColumn]));
                }
                set {
                    this[this.tableShokuinMst.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinShukeiJogaiFlg {
                get {
                    return ((string)(this[this.tableShokuinMst.ShokuinShukeiJogaiFlgColumn]));
                }
                set {
                    this[this.tableShokuinMst.ShokuinShukeiJogaiFlgColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokuinMstKensakuRow : global::System.Data.DataRow {
            
            private ShokuinMstKensakuDataTable tableShokuinMstKensaku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokuinMstKensakuRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokuinMstKensaku = ((ShokuinMstKensakuDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinShozokuShishoCd {
                get {
                    if (this.IsShokuinShozokuShishoCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinShozokuShishoCdColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinShozokuShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinCd {
                get {
                    if (this.IsShokuinCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinCdColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinNm {
                get {
                    if (this.IsShokuinNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinNmColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinKana {
                get {
                    if (this.IsShokuinKanaNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinKanaColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinKanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinSeinengappi {
                get {
                    if (this.IsShokuinSeinengappiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinSeinengappiColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinSeinengappiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinNyushaDt {
                get {
                    if (this.IsShokuinNyushaDtNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinNyushaDtColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinNyushaDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinKensainFlg {
                get {
                    if (this.IsShokuinKensainFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinKensainFlgColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinKensainFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinTaishokuDt {
                get {
                    if (this.IsShokuinTaishokuDtNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinTaishokuDtColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinTaishokuDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinTaishokuFlg {
                get {
                    if (this.IsShokuinTaishokuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinTaishokuFlgColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinTaishokuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinPassword {
                get {
                    if (this.IsShokuinPasswordNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinPasswordColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokuinInjiJun {
                get {
                    try {
                        return ((int)(this[this.tableShokuinMstKensaku.ShokuinInjiJunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShokuinInjiJun\' in table \'ShokuinMstKensaku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinInjiJunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShishoNm {
                get {
                    if (this.IsShishoNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShishoNmColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShishoNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinShukeiJogaiFlg {
                get {
                    if (this.IsShokuinShukeiJogaiFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinMstKensaku.ShokuinShukeiJogaiFlgColumn]));
                    }
                }
                set {
                    this[this.tableShokuinMstKensaku.ShokuinShukeiJogaiFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinShozokuShishoCdNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinShozokuShishoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinShozokuShishoCdNull() {
                this[this.tableShokuinMstKensaku.ShokuinShozokuShishoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinCdNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinCdNull() {
                this[this.tableShokuinMstKensaku.ShokuinCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinNmNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinNmNull() {
                this[this.tableShokuinMstKensaku.ShokuinNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinKanaNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinKanaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinKanaNull() {
                this[this.tableShokuinMstKensaku.ShokuinKanaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinSeinengappiNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinSeinengappiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinSeinengappiNull() {
                this[this.tableShokuinMstKensaku.ShokuinSeinengappiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinNyushaDtNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinNyushaDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinNyushaDtNull() {
                this[this.tableShokuinMstKensaku.ShokuinNyushaDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinKensainFlgNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinKensainFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinKensainFlgNull() {
                this[this.tableShokuinMstKensaku.ShokuinKensainFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinTaishokuDtNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinTaishokuDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinTaishokuDtNull() {
                this[this.tableShokuinMstKensaku.ShokuinTaishokuDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinTaishokuFlgNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinTaishokuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinTaishokuFlgNull() {
                this[this.tableShokuinMstKensaku.ShokuinTaishokuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinPasswordNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinPasswordNull() {
                this[this.tableShokuinMstKensaku.ShokuinPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinInjiJunNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinInjiJunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinInjiJunNull() {
                this[this.tableShokuinMstKensaku.ShokuinInjiJunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShishoNmNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShishoNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShishoNmNull() {
                this[this.tableShokuinMstKensaku.ShishoNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinShukeiJogaiFlgNull() {
                return this.IsNull(this.tableShokuinMstKensaku.ShokuinShukeiJogaiFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinShukeiJogaiFlgNull() {
                this[this.tableShokuinMstKensaku.ShokuinShukeiJogaiFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokuinNmShishoNmKensainSyuhoListRow : global::System.Data.DataRow {
            
            private ShokuinNmShishoNmKensainSyuhoListDataTable tableShokuinNmShishoNmKensainSyuhoList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokuinNmShishoNmKensainSyuhoListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokuinNmShishoNmKensainSyuhoList = ((ShokuinNmShishoNmKensainSyuhoListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinCd {
                get {
                    if (this.IsShokuinCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinCdColumn]));
                    }
                }
                set {
                    this[this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinNm {
                get {
                    if (this.IsShokuinNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinNmColumn]));
                    }
                }
                set {
                    this[this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShishoCd {
                get {
                    if (this.IsShishoCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinNmShishoNmKensainSyuhoList.ShishoCdColumn]));
                    }
                }
                set {
                    this[this.tableShokuinNmShishoNmKensainSyuhoList.ShishoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShishoNm {
                get {
                    if (this.IsShishoNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableShokuinNmShishoNmKensainSyuhoList.ShishoNmColumn]));
                    }
                }
                set {
                    this[this.tableShokuinNmShishoNmKensainSyuhoList.ShishoNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinCdNull() {
                return this.IsNull(this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinCdNull() {
                this[this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinNmNull() {
                return this.IsNull(this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinNmNull() {
                this[this.tableShokuinNmShishoNmKensainSyuhoList.ShokuinNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShishoCdNull() {
                return this.IsNull(this.tableShokuinNmShishoNmKensainSyuhoList.ShishoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShishoCdNull() {
                this[this.tableShokuinNmShishoNmKensainSyuhoList.ShishoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShishoNmNull() {
                return this.IsNull(this.tableShokuinNmShishoNmKensainSyuhoList.ShishoNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShishoNmNull() {
                this[this.tableShokuinNmShishoNmKensainSyuhoList.ShishoNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokuinMstRowChangeEvent : global::System.EventArgs {
            
            private ShokuinMstRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstRowChangeEvent(ShokuinMstRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokuinMstKensakuRowChangeEvent : global::System.EventArgs {
            
            private ShokuinMstKensakuRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstKensakuRowChangeEvent(ShokuinMstKensakuRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinMstKensakuRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokuinNmShishoNmKensainSyuhoListRowChangeEvent : global::System.EventArgs {
            
            private ShokuinNmShishoNmKensainSyuhoListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinNmShishoNmKensainSyuhoListRowChangeEvent(ShokuinNmShishoNmKensainSyuhoListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokuinNmShishoNmKensainSyuhoListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjBizSystem.Application.DataSet.ShokuinMstDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokuinMstTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokuinMstTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokuinMst";
            tableMapping.ColumnMappings.Add("ShokuinCd", "ShokuinCd");
            tableMapping.ColumnMappings.Add("ShokuinShozokuShishoCd", "ShokuinShozokuShishoCd");
            tableMapping.ColumnMappings.Add("ShokuinNm", "ShokuinNm");
            tableMapping.ColumnMappings.Add("ShokuinKana", "ShokuinKana");
            tableMapping.ColumnMappings.Add("ShokuinSeinengappi", "ShokuinSeinengappi");
            tableMapping.ColumnMappings.Add("ShokuinNyushaDt", "ShokuinNyushaDt");
            tableMapping.ColumnMappings.Add("ShokuinKensainFlg", "ShokuinKensainFlg");
            tableMapping.ColumnMappings.Add("ShokuinTaishokuDt", "ShokuinTaishokuDt");
            tableMapping.ColumnMappings.Add("ShokuinTaishokuFlg", "ShokuinTaishokuFlg");
            tableMapping.ColumnMappings.Add("ShokuinPassword", "ShokuinPassword");
            tableMapping.ColumnMappings.Add("ShokuinInjiJun", "ShokuinInjiJun");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ShokuinShukeiJogaiFlg", "ShokuinShukeiJogaiFlg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ShokuinMst] WHERE (([ShokuinCd] = @Original_ShokuinCd) AND ([ShokuinShozokuShishoCd] = @Original_ShokuinShozokuShishoCd) AND ([ShokuinNm] = @Original_ShokuinNm) AND ([ShokuinKana] = @Original_ShokuinKana) AND ([ShokuinSeinengappi] = @Original_ShokuinSeinengappi) AND ([ShokuinNyushaDt] = @Original_ShokuinNyushaDt) AND ([ShokuinKensainFlg] = @Original_ShokuinKensainFlg) AND ([ShokuinTaishokuDt] = @Original_ShokuinTaishokuDt) AND ([ShokuinTaishokuFlg] = @Original_ShokuinTaishokuFlg) AND ([ShokuinPassword] = @Original_ShokuinPassword) AND ([ShokuinInjiJun] = @Original_ShokuinInjiJun) AND ([ShokuinShukeiJogaiFlg] = @Original_ShokuinShukeiJogaiFlg) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Original_InsertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @Original_UpdateTarm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinShozokuShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShozokuShishoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinKana", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKana", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinSeinengappi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinSeinengappi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinNyushaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNyushaDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinKensainFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKensainFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinTaishokuDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinTaishokuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinInjiJun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinInjiJun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinShukeiJogaiFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShukeiJogaiFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ShokuinMst] ([ShokuinCd], [ShokuinShozokuShishoCd], [ShokuinNm], [ShokuinKana], [ShokuinSeinengappi], [ShokuinNyushaDt], [ShokuinKensainFlg], [ShokuinTaishokuDt], [ShokuinTaishokuFlg], [ShokuinPassword], [ShokuinInjiJun], [ShokuinShukeiJogaiFlg], [InsertDt], [InsertUser], [InsertTarm], [UpdateDt], [UpdateUser], [UpdateTarm]) VALUES (@ShokuinCd, @ShokuinShozokuShishoCd, @ShokuinNm, @ShokuinKana, @ShokuinSeinengappi, @ShokuinNyushaDt, @ShokuinKensainFlg, @ShokuinTaishokuDt, @ShokuinTaishokuFlg, @ShokuinPassword, @ShokuinInjiJun, @ShokuinShukeiJogaiFlg, @InsertDt, @InsertUser, @InsertTarm, @UpdateDt, @UpdateUser, @UpdateTarm);
SELECT ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana, ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, ShokuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM ShokuinMst WHERE (ShokuinCd = @ShokuinCd)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinShozokuShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShozokuShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinKana", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinSeinengappi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinSeinengappi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinNyushaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNyushaDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinKensainFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKensainFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinTaishokuDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinTaishokuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinInjiJun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinInjiJun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinShukeiJogaiFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShukeiJogaiFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ShokuinMst] SET [ShokuinCd] = @ShokuinCd, [ShokuinShozokuShishoCd] = @Sho" +
                "kuinShozokuShishoCd, [ShokuinNm] = @ShokuinNm, [ShokuinKana] = @ShokuinKana, [Sh" +
                "okuinSeinengappi] = @ShokuinSeinengappi, [ShokuinNyushaDt] = @ShokuinNyushaDt, [" +
                "ShokuinKensainFlg] = @ShokuinKensainFlg, [ShokuinTaishokuDt] = @ShokuinTaishokuD" +
                "t, [ShokuinTaishokuFlg] = @ShokuinTaishokuFlg, [ShokuinPassword] = @ShokuinPassw" +
                "ord, [ShokuinInjiJun] = @ShokuinInjiJun, [ShokuinShukeiJogaiFlg] = @ShokuinShuke" +
                "iJogaiFlg, [InsertDt] = @InsertDt, [InsertUser] = @InsertUser, [InsertTarm] = @I" +
                "nsertTarm, [UpdateDt] = @UpdateDt, [UpdateUser] = @UpdateUser, [UpdateTarm] = @U" +
                "pdateTarm WHERE (([ShokuinCd] = @Original_ShokuinCd) AND ([ShokuinShozokuShishoC" +
                "d] = @Original_ShokuinShozokuShishoCd) AND ([ShokuinNm] = @Original_ShokuinNm) A" +
                "ND ([ShokuinKana] = @Original_ShokuinKana) AND ([ShokuinSeinengappi] = @Original" +
                "_ShokuinSeinengappi) AND ([ShokuinNyushaDt] = @Original_ShokuinNyushaDt) AND ([S" +
                "hokuinKensainFlg] = @Original_ShokuinKensainFlg) AND ([ShokuinTaishokuDt] = @Ori" +
                "ginal_ShokuinTaishokuDt) AND ([ShokuinTaishokuFlg] = @Original_ShokuinTaishokuFl" +
                "g) AND ([ShokuinPassword] = @Original_ShokuinPassword) AND ([ShokuinInjiJun] = @" +
                "Original_ShokuinInjiJun) AND ([ShokuinShukeiJogaiFlg] = @Original_ShokuinShukeiJ" +
                "ogaiFlg) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Original_Ins" +
                "ertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_U" +
                "pdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @Original" +
                "_UpdateTarm));\r\nSELECT ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana" +
                ", ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, Sho" +
                "kuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertD" +
                "t, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM ShokuinMst WHER" +
                "E (ShokuinCd = @ShokuinCd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinShozokuShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShozokuShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinKana", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKana", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinSeinengappi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinSeinengappi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinNyushaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNyushaDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinKensainFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKensainFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinTaishokuDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinTaishokuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinInjiJun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinInjiJun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinShukeiJogaiFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShukeiJogaiFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinShozokuShishoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShozokuShishoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinNm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinKana", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKana", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinSeinengappi", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinSeinengappi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinNyushaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinNyushaDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinKensainFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKensainFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinTaishokuDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinTaishokuFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinInjiJun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinInjiJun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinShukeiJogaiFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShukeiJogaiFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[8];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT                      ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana, ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, 
                                      ShokuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, 
                                      UpdateTarm
FROM                         ShokuinMst";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE \r\nFROM\r\n  [dbo].[ShokuinMst] \r\nWHERE\r\n  ([ShokuinCd] = @Original_ShokuinCd" +
                ")\r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokuinCd", global::System.Data.SqlDbType.NVarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT                      ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana, ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, 
                                      ShokuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, 
                                      UpdateTarm
FROM                         ShokuinMst
WHERE                       (ShokuinKensainFlg = @ShokuinKensainFlg) AND (ShokuinTaishokuFlg = @ShokuinTaishokuFlg)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinKensainFlg", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKensainFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinTaishokuFlg", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT                      ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana, ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, 
                                      ShokuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, 
                                      UpdateTarm
FROM                         ShokuinMst
WHERE
    ShokuinShozokuShishoCd = @ShokuinShozokuShishoCd
AND ShokuinKensainFlg = '1'";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinShozokuShishoCd", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinShozokuShishoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT InsertDt, InsertTarm, InsertUser, ShokuinCd, ShokuinInjiJun, ShokuinKana, ShokuinKensainFlg, ShokuinNm, ShokuinNyushaDt, ShokuinPassword, ShokuinSeinengappi, ShokuinShozokuShishoCd, ShokuinShukeiJogaiFlg, ShokuinTaishokuDt, ShokuinTaishokuFlg, UpdateDt, UpdateTarm, UpdateUser FROM ShokuinMst WHERE (ShokuinCd = @ShokuinCd)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinCd", global::System.Data.SqlDbType.NVarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"SELECT InsertDt, InsertTarm, InsertUser, ShokuinCd, ShokuinInjiJun, ShokuinKana, ShokuinKensainFlg, ShokuinNm, ShokuinNyushaDt, ShokuinPassword, ShokuinSeinengappi, ShokuinShozokuShishoCd, ShokuinShukeiJogaiFlg, ShokuinTaishokuDt, ShokuinTaishokuFlg, UpdateDt, UpdateTarm, UpdateUser FROM ShokuinMst WHERE (ShokuinCd = @ShokuinCd) AND (ShokuinPassword = @ShokuinPassword)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinCd", global::System.Data.SqlDbType.NVarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinPassword", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"SELECT InsertDt, InsertTarm, InsertUser, ShokuinCd, ShokuinInjiJun, ShokuinKana, ShokuinKensainFlg, ShokuinNm, ShokuinNyushaDt, ShokuinPassword, ShokuinSeinengappi, ShokuinShozokuShishoCd, ShokuinShukeiJogaiFlg, ShokuinTaishokuDt, ShokuinTaishokuFlg, UpdateDt, UpdateTarm, UpdateUser FROM ShokuinMst WHERE (ShokuinKensainFlg = @ShokuinKensainFlg) ORDER BY ShokuinCd";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinKensainFlg", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinKensainFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = @"SELECT                      ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana, ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, 
                                      ShokuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, 
                                      UpdateTarm
FROM                         ShokuinMst
WHERE                       (ShokuinTaishokuFlg = @ShokuinTaishokuFlg)";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokuinTaishokuFlg", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "ShokuinTaishokuFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokuinMstDataSet.ShokuinMstDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKensainFlgTaishouFlg(ShokuinMstDataSet.ShokuinMstDataTable dataTable, string ShokuinKensainFlg, string ShokuinTaishokuFlg) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinKensainFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinKensainFlg));
            }
            if ((ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ShokuinTaishokuFlg));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetDataByKensainFlgTaishouFlg(string ShokuinKensainFlg, string ShokuinTaishokuFlg) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinKensainFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinKensainFlg));
            }
            if ((ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ShokuinTaishokuFlg));
            }
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKensainShishoCd(ShokuinMstDataSet.ShokuinMstDataTable dataTable, string ShokuinShozokuShishoCd) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ShokuinShozokuShishoCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinShozokuShishoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinShozokuShishoCd));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetDataByKensainShishoCd(string ShokuinShozokuShishoCd) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ShokuinShozokuShishoCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinShozokuShishoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinShozokuShishoCd));
            }
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKey(ShokuinMstDataSet.ShokuinMstDataTable dataTable, string ShokuinCd) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinCd));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetDataByKey(string ShokuinCd) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinCd));
            }
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByShokuinCdShokuinPassword(ShokuinMstDataSet.ShokuinMstDataTable dataTable, string ShokuinCd, string ShokuinPassword) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinCd));
            }
            if ((ShokuinPassword == null)) {
                throw new global::System.ArgumentNullException("ShokuinPassword");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ShokuinPassword));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetDataByShokuinCdShokuinPassword(string ShokuinCd, string ShokuinPassword) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinCd));
            }
            if ((ShokuinPassword == null)) {
                throw new global::System.ArgumentNullException("ShokuinPassword");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ShokuinPassword));
            }
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByShokuinKensainFlg(ShokuinMstDataSet.ShokuinMstDataTable dataTable, string ShokuinKensainFlg) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinKensainFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinKensainFlg));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetDataByShokuinKensainFlg(string ShokuinKensainFlg) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinKensainFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinKensainFlg));
            }
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByShokuinTaishokuFlg(ShokuinMstDataSet.ShokuinMstDataTable dataTable, string ShokuinTaishokuFlg) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinTaishokuFlg));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokuinMstDataSet.ShokuinMstDataTable GetDataByShokuinTaishokuFlg(string ShokuinTaishokuFlg) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShokuinTaishokuFlg));
            }
            ShokuinMstDataSet.ShokuinMstDataTable dataTable = new ShokuinMstDataSet.ShokuinMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokuinMstDataSet.ShokuinMstDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokuinMstDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ShokuinMst");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ShokuinCd, 
                    string Original_ShokuinShozokuShishoCd, 
                    string Original_ShokuinNm, 
                    string Original_ShokuinKana, 
                    string Original_ShokuinSeinengappi, 
                    string Original_ShokuinNyushaDt, 
                    string Original_ShokuinKensainFlg, 
                    string Original_ShokuinTaishokuDt, 
                    string Original_ShokuinTaishokuFlg, 
                    string Original_ShokuinPassword, 
                    int Original_ShokuinInjiJun, 
                    string Original_ShokuinShukeiJogaiFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((Original_ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ShokuinCd));
            }
            if ((Original_ShokuinShozokuShishoCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinShozokuShishoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ShokuinShozokuShishoCd));
            }
            if ((Original_ShokuinNm == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinNm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ShokuinNm));
            }
            if ((Original_ShokuinKana == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinKana");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ShokuinKana));
            }
            if ((Original_ShokuinSeinengappi == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinSeinengappi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ShokuinSeinengappi));
            }
            if ((Original_ShokuinNyushaDt == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinNyushaDt");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ShokuinNyushaDt));
            }
            if ((Original_ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinKensainFlg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ShokuinKensainFlg));
            }
            if ((Original_ShokuinTaishokuDt == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinTaishokuDt");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ShokuinTaishokuDt));
            }
            if ((Original_ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ShokuinTaishokuFlg));
            }
            if ((Original_ShokuinPassword == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinPassword");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ShokuinPassword));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_ShokuinInjiJun));
            if ((Original_ShokuinShukeiJogaiFlg == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinShukeiJogaiFlg");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ShokuinShukeiJogaiFlg));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ShokuinCd, 
                    string ShokuinShozokuShishoCd, 
                    string ShokuinNm, 
                    string ShokuinKana, 
                    string ShokuinSeinengappi, 
                    string ShokuinNyushaDt, 
                    string ShokuinKensainFlg, 
                    string ShokuinTaishokuDt, 
                    string ShokuinTaishokuFlg, 
                    string ShokuinPassword, 
                    int ShokuinInjiJun, 
                    string ShokuinShukeiJogaiFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm) {
            if ((ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ShokuinCd));
            }
            if ((ShokuinShozokuShishoCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinShozokuShishoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ShokuinShozokuShishoCd));
            }
            if ((ShokuinNm == null)) {
                throw new global::System.ArgumentNullException("ShokuinNm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ShokuinNm));
            }
            if ((ShokuinKana == null)) {
                throw new global::System.ArgumentNullException("ShokuinKana");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ShokuinKana));
            }
            if ((ShokuinSeinengappi == null)) {
                throw new global::System.ArgumentNullException("ShokuinSeinengappi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ShokuinSeinengappi));
            }
            if ((ShokuinNyushaDt == null)) {
                throw new global::System.ArgumentNullException("ShokuinNyushaDt");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ShokuinNyushaDt));
            }
            if ((ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinKensainFlg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ShokuinKensainFlg));
            }
            if ((ShokuinTaishokuDt == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuDt");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ShokuinTaishokuDt));
            }
            if ((ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ShokuinTaishokuFlg));
            }
            if ((ShokuinPassword == null)) {
                throw new global::System.ArgumentNullException("ShokuinPassword");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ShokuinPassword));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ShokuinInjiJun));
            if ((ShokuinShukeiJogaiFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinShukeiJogaiFlg");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ShokuinShukeiJogaiFlg));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(InsertTarm));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ShokuinCd, 
                    string ShokuinShozokuShishoCd, 
                    string ShokuinNm, 
                    string ShokuinKana, 
                    string ShokuinSeinengappi, 
                    string ShokuinNyushaDt, 
                    string ShokuinKensainFlg, 
                    string ShokuinTaishokuDt, 
                    string ShokuinTaishokuFlg, 
                    string ShokuinPassword, 
                    int ShokuinInjiJun, 
                    string ShokuinShukeiJogaiFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_ShokuinCd, 
                    string Original_ShokuinShozokuShishoCd, 
                    string Original_ShokuinNm, 
                    string Original_ShokuinKana, 
                    string Original_ShokuinSeinengappi, 
                    string Original_ShokuinNyushaDt, 
                    string Original_ShokuinKensainFlg, 
                    string Original_ShokuinTaishokuDt, 
                    string Original_ShokuinTaishokuFlg, 
                    string Original_ShokuinPassword, 
                    int Original_ShokuinInjiJun, 
                    string Original_ShokuinShukeiJogaiFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ShokuinCd));
            }
            if ((ShokuinShozokuShishoCd == null)) {
                throw new global::System.ArgumentNullException("ShokuinShozokuShishoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ShokuinShozokuShishoCd));
            }
            if ((ShokuinNm == null)) {
                throw new global::System.ArgumentNullException("ShokuinNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ShokuinNm));
            }
            if ((ShokuinKana == null)) {
                throw new global::System.ArgumentNullException("ShokuinKana");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ShokuinKana));
            }
            if ((ShokuinSeinengappi == null)) {
                throw new global::System.ArgumentNullException("ShokuinSeinengappi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ShokuinSeinengappi));
            }
            if ((ShokuinNyushaDt == null)) {
                throw new global::System.ArgumentNullException("ShokuinNyushaDt");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ShokuinNyushaDt));
            }
            if ((ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinKensainFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ShokuinKensainFlg));
            }
            if ((ShokuinTaishokuDt == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuDt");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ShokuinTaishokuDt));
            }
            if ((ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ShokuinTaishokuFlg));
            }
            if ((ShokuinPassword == null)) {
                throw new global::System.ArgumentNullException("ShokuinPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ShokuinPassword));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ShokuinInjiJun));
            if ((ShokuinShukeiJogaiFlg == null)) {
                throw new global::System.ArgumentNullException("ShokuinShukeiJogaiFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ShokuinShukeiJogaiFlg));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(UpdateTarm));
            }
            if ((Original_ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ShokuinCd));
            }
            if ((Original_ShokuinShozokuShishoCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinShozokuShishoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ShokuinShozokuShishoCd));
            }
            if ((Original_ShokuinNm == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinNm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ShokuinNm));
            }
            if ((Original_ShokuinKana == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinKana");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ShokuinKana));
            }
            if ((Original_ShokuinSeinengappi == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinSeinengappi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ShokuinSeinengappi));
            }
            if ((Original_ShokuinNyushaDt == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinNyushaDt");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ShokuinNyushaDt));
            }
            if ((Original_ShokuinKensainFlg == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinKensainFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ShokuinKensainFlg));
            }
            if ((Original_ShokuinTaishokuDt == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinTaishokuDt");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ShokuinTaishokuDt));
            }
            if ((Original_ShokuinTaishokuFlg == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinTaishokuFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ShokuinTaishokuFlg));
            }
            if ((Original_ShokuinPassword == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ShokuinPassword));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_ShokuinInjiJun));
            if ((Original_ShokuinShukeiJogaiFlg == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinShukeiJogaiFlg");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_ShokuinShukeiJogaiFlg));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ShokuinShozokuShishoCd, 
                    string ShokuinNm, 
                    string ShokuinKana, 
                    string ShokuinSeinengappi, 
                    string ShokuinNyushaDt, 
                    string ShokuinKensainFlg, 
                    string ShokuinTaishokuDt, 
                    string ShokuinTaishokuFlg, 
                    string ShokuinPassword, 
                    int ShokuinInjiJun, 
                    string ShokuinShukeiJogaiFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_ShokuinCd, 
                    string Original_ShokuinShozokuShishoCd, 
                    string Original_ShokuinNm, 
                    string Original_ShokuinKana, 
                    string Original_ShokuinSeinengappi, 
                    string Original_ShokuinNyushaDt, 
                    string Original_ShokuinKensainFlg, 
                    string Original_ShokuinTaishokuDt, 
                    string Original_ShokuinTaishokuFlg, 
                    string Original_ShokuinPassword, 
                    int Original_ShokuinInjiJun, 
                    string Original_ShokuinShukeiJogaiFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            return this.Update(Original_ShokuinCd, ShokuinShozokuShishoCd, ShokuinNm, ShokuinKana, ShokuinSeinengappi, ShokuinNyushaDt, ShokuinKensainFlg, ShokuinTaishokuDt, ShokuinTaishokuFlg, ShokuinPassword, ShokuinInjiJun, ShokuinShukeiJogaiFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, Original_ShokuinCd, Original_ShokuinShozokuShishoCd, Original_ShokuinNm, Original_ShokuinKana, Original_ShokuinSeinengappi, Original_ShokuinNyushaDt, Original_ShokuinKensainFlg, Original_ShokuinTaishokuDt, Original_ShokuinTaishokuFlg, Original_ShokuinPassword, Original_ShokuinInjiJun, Original_ShokuinShukeiJogaiFlg, Original_InsertDt, Original_InsertUser, Original_InsertTarm, Original_UpdateDt, Original_UpdateUser, Original_UpdateTarm);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByKey(string Original_ShokuinCd) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((Original_ShokuinCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokuinCd");
            }
            else {
                command.Parameters[0].Value = ((string)(Original_ShokuinCd));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokuinMstKensakuTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokuinMstKensakuTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokuinMstKensaku";
            tableMapping.ColumnMappings.Add("ShokuinShozokuShishoCd", "ShokuinShozokuShishoCd");
            tableMapping.ColumnMappings.Add("ShokuinCd", "ShokuinCd");
            tableMapping.ColumnMappings.Add("ShokuinNm", "ShokuinNm");
            tableMapping.ColumnMappings.Add("ShokuinKana", "ShokuinKana");
            tableMapping.ColumnMappings.Add("ShokuinSeinengappi", "ShokuinSeinengappi");
            tableMapping.ColumnMappings.Add("ShokuinNyushaDt", "ShokuinNyushaDt");
            tableMapping.ColumnMappings.Add("ShokuinKensainFlg", "ShokuinKensainFlg");
            tableMapping.ColumnMappings.Add("ShokuinTaishokuDt", "ShokuinTaishokuDt");
            tableMapping.ColumnMappings.Add("ShokuinTaishokuFlg", "ShokuinTaishokuFlg");
            tableMapping.ColumnMappings.Add("ShokuinPassword", "ShokuinPassword");
            tableMapping.ColumnMappings.Add("ShokuinInjiJun", "ShokuinInjiJun");
            tableMapping.ColumnMappings.Add("ShishoNm", "ShishoNm");
            tableMapping.ColumnMappings.Add("ShokuinShukeiJogaiFlg", "ShokuinShukeiJogaiFlg");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT                      ShokuinMst.ShokuinShozokuShishoCd, ShokuinMst.Shokuin" +
                "Cd, ShokuinMst.ShokuinNm, ShokuinMst.ShokuinKana, \r\n                            " +
                "          CASE WHEN ISNULL(ShokuinMst.ShokuinSeinengappi, \'\') <> \'\' THEN CONCAT(" +
                "SUBSTRING(ShokuinMst.ShokuinSeinengappi, 0, 5), \'/\', \r\n                         " +
                "             SUBSTRING(ShokuinMst.ShokuinSeinengappi, 5, 2), \'/\', SUBSTRING(Shok" +
                "uinMst.ShokuinSeinengappi, 7, 2)) ELSE \'\' END AS ShokuinSeinengappi, \r\n         " +
                "                             CASE WHEN ISNULL(ShokuinMst.ShokuinNyushaDt, \'\') <>" +
                " \'\' THEN CONCAT(SUBSTRING(ShokuinMst.ShokuinNyushaDt, 0, 5), \'/\', \r\n            " +
                "                          SUBSTRING(ShokuinMst.ShokuinNyushaDt, 5, 2), \'/\', SUBS" +
                "TRING(ShokuinMst.ShokuinNyushaDt, 7, 2)) ELSE \'\' END AS ShokuinNyushaDt, \r\n     " +
                "                                 ShokuinMst.ShokuinKensainFlg, ShokuinMst.Shokui" +
                "nShukeiJogaiFlg, CASE WHEN ISNULL(ShokuinMst.ShokuinTaishokuDt, \'\') \r\n          " +
                "                            <> \'\' THEN CONCAT(SUBSTRING(ShokuinMst.ShokuinTaisho" +
                "kuDt, 0, 5), \'/\', SUBSTRING(ShokuinMst.ShokuinTaishokuDt, 5, 2), \'/\', \r\n        " +
                "                              SUBSTRING(ShokuinMst.ShokuinTaishokuDt, 7, 2)) ELS" +
                "E \'\' END AS ShokuinTaishokuDt, ShokuinMst.ShokuinTaishokuFlg, ShokuinMst.Shokuin" +
                "Password, \r\n                                      ShokuinMst.ShokuinInjiJun, Shi" +
                "shoMst.ShishoNm\r\nFROM                         ShokuinMst LEFT OUTER JOIN\r\n      " +
                "                                ShishoMst ON ShishoMst.ShishoCd = ShokuinMst.Sho" +
                "kuinShozokuShishoCd\r\nWHERE                       (1 = 1)\r\nORDER BY              " +
                " ShokuinMst.ShokuinShozokuShishoCd, ShokuinMst.ShokuinCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokuinMstDataSet.ShokuinMstKensakuDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokuinMstDataSet.ShokuinMstKensakuDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokuinMstDataSet.ShokuinMstKensakuDataTable dataTable = new ShokuinMstDataSet.ShokuinMstKensakuDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokuinNmShishoNmKensainSyuhoListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokuinNmShishoNmKensainSyuhoListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokuinNmShishoNmKensainSyuhoList";
            tableMapping.ColumnMappings.Add("ShokuinCd", "ShokuinCd");
            tableMapping.ColumnMappings.Add("ShokuinNm", "ShokuinNm");
            tableMapping.ColumnMappings.Add("ShishoCd", "ShishoCd");
            tableMapping.ColumnMappings.Add("ShishoNm", "ShishoNm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  ShokuinMst.ShokuinCd
  , ShokuinMst.ShokuinNm
  , ShishoMst.ShishoCd
  , ShishoMst.ShishoNm 
FROM
  ShokuinMst 
  INNER JOIN ShishoMst 
    ON ShishoMst.ShishoCd = ShokuinMst.ShokuinShozokuShishoCd 
WHERE
  (ShokuinMst.ShokuinKensainFlg = '1 ') 
ORDER BY
  ShishoMst.ShishoCd
  , ShokuinMst.ShokuinCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokuinMstDataSet.ShokuinNmShishoNmKensainSyuhoListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokuinMstDataSet.ShokuinNmShishoNmKensainSyuhoListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokuinMstDataSet.ShokuinNmShishoNmKensainSyuhoListDataTable dataTable = new ShokuinMstDataSet.ShokuinNmShishoNmKensainSyuhoListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ShokuinMstTableAdapter _shokuinMstTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ShokuinMstTableAdapter ShokuinMstTableAdapter {
            get {
                return this._shokuinMstTableAdapter;
            }
            set {
                this._shokuinMstTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._shokuinMstTableAdapter != null) 
                            && (this._shokuinMstTableAdapter.Connection != null))) {
                    return this._shokuinMstTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._shokuinMstTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ShokuinMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokuinMstTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ShokuinMst.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._shokuinMstTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ShokuinMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokuinMstTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ShokuinMst.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._shokuinMstTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ShokuinMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._shokuinMstTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ShokuinMst.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._shokuinMstTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ShokuinMstDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._shokuinMstTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._shokuinMstTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._shokuinMstTableAdapter != null)) {
                    revertConnections.Add(this._shokuinMstTableAdapter, this._shokuinMstTableAdapter.Connection);
                    this._shokuinMstTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._shokuinMstTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._shokuinMstTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._shokuinMstTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._shokuinMstTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._shokuinMstTableAdapter != null)) {
                    this._shokuinMstTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._shokuinMstTableAdapter]));
                    this._shokuinMstTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591