//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34014
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjBizSystem.Application.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GenbaShashinTblDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GenbaShashinTblDataSet : global::System.Data.DataSet {
        
        private GenbaShashinTblDataTable tableGenbaShashinTbl;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GenbaShashinTblDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected GenbaShashinTblDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GenbaShashinTbl"] != null)) {
                    base.Tables.Add(new GenbaShashinTblDataTable(ds.Tables["GenbaShashinTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GenbaShashinTblDataTable GenbaShashinTbl {
            get {
                return this.tableGenbaShashinTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            GenbaShashinTblDataSet cln = ((GenbaShashinTblDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GenbaShashinTbl"] != null)) {
                    base.Tables.Add(new GenbaShashinTblDataTable(ds.Tables["GenbaShashinTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableGenbaShashinTbl = ((GenbaShashinTblDataTable)(base.Tables["GenbaShashinTbl"]));
            if ((initTable == true)) {
                if ((this.tableGenbaShashinTbl != null)) {
                    this.tableGenbaShashinTbl.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "GenbaShashinTblDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GenbaShashinTblDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGenbaShashinTbl = new GenbaShashinTblDataTable();
            base.Tables.Add(this.tableGenbaShashinTbl);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGenbaShashinTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GenbaShashinTblDataSet ds = new GenbaShashinTblDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GenbaShashinTblRowChangeEventHandler(object sender, GenbaShashinTblRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GenbaShashinTblDataTable : global::System.Data.TypedTableBase<GenbaShashinTblRow> {
            
            private global::System.Data.DataColumn columnGenbaShashinKensaHoteiKbn;
            
            private global::System.Data.DataColumn columnGenbaShashinKensaHokenjoCd;
            
            private global::System.Data.DataColumn columnGenbaShashinKensaNendo;
            
            private global::System.Data.DataColumn columnGenbaShashinKensaRenban;
            
            private global::System.Data.DataColumn columnGenbaShashinCd;
            
            private global::System.Data.DataColumn columnGenbaShashinFilePath;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblDataTable() {
                this.TableName = "GenbaShashinTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GenbaShashinTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GenbaShashinTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenbaShashinKensaHoteiKbnColumn {
                get {
                    return this.columnGenbaShashinKensaHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenbaShashinKensaHokenjoCdColumn {
                get {
                    return this.columnGenbaShashinKensaHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenbaShashinKensaNendoColumn {
                get {
                    return this.columnGenbaShashinKensaNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenbaShashinKensaRenbanColumn {
                get {
                    return this.columnGenbaShashinKensaRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenbaShashinCdColumn {
                get {
                    return this.columnGenbaShashinCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenbaShashinFilePathColumn {
                get {
                    return this.columnGenbaShashinFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblRow this[int index] {
                get {
                    return ((GenbaShashinTblRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GenbaShashinTblRowChangeEventHandler GenbaShashinTblRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GenbaShashinTblRowChangeEventHandler GenbaShashinTblRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GenbaShashinTblRowChangeEventHandler GenbaShashinTblRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GenbaShashinTblRowChangeEventHandler GenbaShashinTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGenbaShashinTblRow(GenbaShashinTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblRow AddGenbaShashinTblRow(string GenbaShashinKensaHoteiKbn, string GenbaShashinKensaHokenjoCd, string GenbaShashinKensaNendo, string GenbaShashinKensaRenban, string GenbaShashinCd, string GenbaShashinFilePath, System.DateTime InsertDt, string InsertUser, string InsertTarm, System.DateTime UpdateDt, string UpdateUser, string UpdateTarm) {
                GenbaShashinTblRow rowGenbaShashinTblRow = ((GenbaShashinTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GenbaShashinKensaHoteiKbn,
                        GenbaShashinKensaHokenjoCd,
                        GenbaShashinKensaNendo,
                        GenbaShashinKensaRenban,
                        GenbaShashinCd,
                        GenbaShashinFilePath,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm};
                rowGenbaShashinTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGenbaShashinTblRow);
                return rowGenbaShashinTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblRow FindByGenbaShashinKensaHoteiKbnGenbaShashinKensaHokenjoCdGenbaShashinKensaNendoGenbaShashinKensaRenbanGenbaShashinCd(string GenbaShashinKensaHoteiKbn, string GenbaShashinKensaHokenjoCd, string GenbaShashinKensaNendo, string GenbaShashinKensaRenban, string GenbaShashinCd) {
                return ((GenbaShashinTblRow)(this.Rows.Find(new object[] {
                            GenbaShashinKensaHoteiKbn,
                            GenbaShashinKensaHokenjoCd,
                            GenbaShashinKensaNendo,
                            GenbaShashinKensaRenban,
                            GenbaShashinCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GenbaShashinTblDataTable cln = ((GenbaShashinTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GenbaShashinTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGenbaShashinKensaHoteiKbn = base.Columns["GenbaShashinKensaHoteiKbn"];
                this.columnGenbaShashinKensaHokenjoCd = base.Columns["GenbaShashinKensaHokenjoCd"];
                this.columnGenbaShashinKensaNendo = base.Columns["GenbaShashinKensaNendo"];
                this.columnGenbaShashinKensaRenban = base.Columns["GenbaShashinKensaRenban"];
                this.columnGenbaShashinCd = base.Columns["GenbaShashinCd"];
                this.columnGenbaShashinFilePath = base.Columns["GenbaShashinFilePath"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGenbaShashinKensaHoteiKbn = new global::System.Data.DataColumn("GenbaShashinKensaHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenbaShashinKensaHoteiKbn);
                this.columnGenbaShashinKensaHokenjoCd = new global::System.Data.DataColumn("GenbaShashinKensaHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenbaShashinKensaHokenjoCd);
                this.columnGenbaShashinKensaNendo = new global::System.Data.DataColumn("GenbaShashinKensaNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenbaShashinKensaNendo);
                this.columnGenbaShashinKensaRenban = new global::System.Data.DataColumn("GenbaShashinKensaRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenbaShashinKensaRenban);
                this.columnGenbaShashinCd = new global::System.Data.DataColumn("GenbaShashinCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenbaShashinCd);
                this.columnGenbaShashinFilePath = new global::System.Data.DataColumn("GenbaShashinFilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenbaShashinFilePath);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGenbaShashinKensaHoteiKbn,
                                this.columnGenbaShashinKensaHokenjoCd,
                                this.columnGenbaShashinKensaNendo,
                                this.columnGenbaShashinKensaRenban,
                                this.columnGenbaShashinCd}, true));
                this.columnGenbaShashinKensaHoteiKbn.AllowDBNull = false;
                this.columnGenbaShashinKensaHoteiKbn.MaxLength = 1;
                this.columnGenbaShashinKensaHokenjoCd.AllowDBNull = false;
                this.columnGenbaShashinKensaHokenjoCd.MaxLength = 2;
                this.columnGenbaShashinKensaNendo.AllowDBNull = false;
                this.columnGenbaShashinKensaNendo.MaxLength = 4;
                this.columnGenbaShashinKensaRenban.AllowDBNull = false;
                this.columnGenbaShashinKensaRenban.MaxLength = 6;
                this.columnGenbaShashinCd.AllowDBNull = false;
                this.columnGenbaShashinCd.MaxLength = 3;
                this.columnGenbaShashinFilePath.AllowDBNull = false;
                this.columnGenbaShashinFilePath.MaxLength = 100;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblRow NewGenbaShashinTblRow() {
                return ((GenbaShashinTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GenbaShashinTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GenbaShashinTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GenbaShashinTblRowChanged != null)) {
                    this.GenbaShashinTblRowChanged(this, new GenbaShashinTblRowChangeEvent(((GenbaShashinTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GenbaShashinTblRowChanging != null)) {
                    this.GenbaShashinTblRowChanging(this, new GenbaShashinTblRowChangeEvent(((GenbaShashinTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GenbaShashinTblRowDeleted != null)) {
                    this.GenbaShashinTblRowDeleted(this, new GenbaShashinTblRowChangeEvent(((GenbaShashinTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GenbaShashinTblRowDeleting != null)) {
                    this.GenbaShashinTblRowDeleting(this, new GenbaShashinTblRowChangeEvent(((GenbaShashinTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGenbaShashinTblRow(GenbaShashinTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GenbaShashinTblDataSet ds = new GenbaShashinTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GenbaShashinTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GenbaShashinTblRow : global::System.Data.DataRow {
            
            private GenbaShashinTblDataTable tableGenbaShashinTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GenbaShashinTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGenbaShashinTbl = ((GenbaShashinTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenbaShashinKensaHoteiKbn {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.GenbaShashinKensaHoteiKbnColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.GenbaShashinKensaHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenbaShashinKensaHokenjoCd {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.GenbaShashinKensaHokenjoCdColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.GenbaShashinKensaHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenbaShashinKensaNendo {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.GenbaShashinKensaNendoColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.GenbaShashinKensaNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenbaShashinKensaRenban {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.GenbaShashinKensaRenbanColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.GenbaShashinKensaRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenbaShashinCd {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.GenbaShashinCdColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.GenbaShashinCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenbaShashinFilePath {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.GenbaShashinFilePathColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.GenbaShashinFilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableGenbaShashinTbl.InsertDtColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.InsertUserColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.InsertTarmColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableGenbaShashinTbl.UpdateDtColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.UpdateUserColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableGenbaShashinTbl.UpdateTarmColumn]));
                }
                set {
                    this[this.tableGenbaShashinTbl.UpdateTarmColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GenbaShashinTblRowChangeEvent : global::System.EventArgs {
            
            private GenbaShashinTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblRowChangeEvent(GenbaShashinTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GenbaShashinTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjBizSystem.Application.DataSet.GenbaShashinTblDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GenbaShashinTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GenbaShashinTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GenbaShashinTbl";
            tableMapping.ColumnMappings.Add("GenbaShashinKensaHoteiKbn", "GenbaShashinKensaHoteiKbn");
            tableMapping.ColumnMappings.Add("GenbaShashinKensaHokenjoCd", "GenbaShashinKensaHokenjoCd");
            tableMapping.ColumnMappings.Add("GenbaShashinKensaNendo", "GenbaShashinKensaNendo");
            tableMapping.ColumnMappings.Add("GenbaShashinKensaRenban", "GenbaShashinKensaRenban");
            tableMapping.ColumnMappings.Add("GenbaShashinCd", "GenbaShashinCd");
            tableMapping.ColumnMappings.Add("GenbaShashinFilePath", "GenbaShashinFilePath");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [GenbaShashinTbl] WHERE (([GenbaShashinKensaHoteiKbn] = @Original_GenbaShashinKensaHoteiKbn) AND ([GenbaShashinKensaHokenjoCd] = @Original_GenbaShashinKensaHokenjoCd) AND ([GenbaShashinKensaNendo] = @Original_GenbaShashinKensaNendo) AND ([GenbaShashinKensaRenban] = @Original_GenbaShashinKensaRenban) AND ([GenbaShashinCd] = @Original_GenbaShashinCd) AND ([GenbaShashinFilePath] = @Original_GenbaShashinFilePath) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Original_InsertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @Original_UpdateTarm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinFilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinFilePath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [GenbaShashinTbl] ([GenbaShashinKensaHoteiKbn], [GenbaShashinKensaHokenjoCd], [GenbaShashinKensaNendo], [GenbaShashinKensaRenban], [GenbaShashinCd], [GenbaShashinFilePath], [InsertDt], [InsertUser], [InsertTarm], [UpdateDt], [UpdateUser], [UpdateTarm]) VALUES (@GenbaShashinKensaHoteiKbn, @GenbaShashinKensaHokenjoCd, @GenbaShashinKensaNendo, @GenbaShashinKensaRenban, @GenbaShashinCd, @GenbaShashinFilePath, @InsertDt, @InsertUser, @InsertTarm, @UpdateDt, @UpdateUser, @UpdateTarm);
SELECT GenbaShashinKensaHoteiKbn, GenbaShashinKensaHokenjoCd, GenbaShashinKensaNendo, GenbaShashinKensaRenban, GenbaShashinCd, GenbaShashinFilePath, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM GenbaShashinTbl WHERE (GenbaShashinCd = @GenbaShashinCd) AND (GenbaShashinKensaHokenjoCd = @GenbaShashinKensaHokenjoCd) AND (GenbaShashinKensaHoteiKbn = @GenbaShashinKensaHoteiKbn) AND (GenbaShashinKensaNendo = @GenbaShashinKensaNendo) AND (GenbaShashinKensaRenban = @GenbaShashinKensaRenban)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinFilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinFilePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [GenbaShashinTbl] SET [GenbaShashinKensaHoteiKbn] = @GenbaShashinKensaHote" +
                "iKbn, [GenbaShashinKensaHokenjoCd] = @GenbaShashinKensaHokenjoCd, [GenbaShashinK" +
                "ensaNendo] = @GenbaShashinKensaNendo, [GenbaShashinKensaRenban] = @GenbaShashinK" +
                "ensaRenban, [GenbaShashinCd] = @GenbaShashinCd, [GenbaShashinFilePath] = @GenbaS" +
                "hashinFilePath, [InsertDt] = @InsertDt, [InsertUser] = @InsertUser, [InsertTarm]" +
                " = @InsertTarm, [UpdateDt] = @UpdateDt, [UpdateUser] = @UpdateUser, [UpdateTarm]" +
                " = @UpdateTarm WHERE (([GenbaShashinKensaHoteiKbn] = @Original_GenbaShashinKensa" +
                "HoteiKbn) AND ([GenbaShashinKensaHokenjoCd] = @Original_GenbaShashinKensaHokenjo" +
                "Cd) AND ([GenbaShashinKensaNendo] = @Original_GenbaShashinKensaNendo) AND ([Genb" +
                "aShashinKensaRenban] = @Original_GenbaShashinKensaRenban) AND ([GenbaShashinCd] " +
                "= @Original_GenbaShashinCd) AND ([GenbaShashinFilePath] = @Original_GenbaShashin" +
                "FilePath) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Original_In" +
                "sertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_" +
                "UpdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @Origina" +
                "l_UpdateTarm));\r\nSELECT GenbaShashinKensaHoteiKbn, GenbaShashinKensaHokenjoCd, G" +
                "enbaShashinKensaNendo, GenbaShashinKensaRenban, GenbaShashinCd, GenbaShashinFile" +
                "Path, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM Ge" +
                "nbaShashinTbl WHERE (GenbaShashinCd = @GenbaShashinCd) AND (GenbaShashinKensaHok" +
                "enjoCd = @GenbaShashinKensaHokenjoCd) AND (GenbaShashinKensaHoteiKbn = @GenbaSha" +
                "shinKensaHoteiKbn) AND (GenbaShashinKensaNendo = @GenbaShashinKensaNendo) AND (G" +
                "enbaShashinKensaRenban = @GenbaShashinKensaRenban)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinFilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinFilePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaHoteiKbn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaHokenjoCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaNendo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinKensaRenban", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GenbaShashinFilePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinFilePath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  GenbaShashinKensaHoteiKbn
  , GenbaShashinKensaHokenjoCd
  , GenbaShashinKensaNendo
  , GenbaShashinKensaRenban
  , GenbaShashinCd
  , GenbaShashinFilePath
  , InsertDt
  , InsertUser
  , InsertTarm
  , UpdateDt
  , UpdateUser
  , UpdateTarm 
FROM
  GenbaShashinTbl
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"DELETE
FROM
  GenbaShashinTbl
where
  GenbaShashinKensaHoteiKbn = @GenbaShashinKensaHoteiKbn and
  GenbaShashinKensaHokenjoCd = @GenbaShashinKensaHokenjoCd and
  GenbaShashinKensaNendo = @GenbaShashinKensaNendo and
  GenbaShashinKensaRenban = @GenbaShashinKensaRenban
";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHoteiKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHokenjoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaNendo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaRenban", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT
  GenbaShashinKensaHoteiKbn
  , GenbaShashinKensaHokenjoCd
  , GenbaShashinKensaNendo
  , GenbaShashinKensaRenban
  , GenbaShashinCd
  , GenbaShashinFilePath
  , InsertDt
  , InsertUser
  , InsertTarm
  , UpdateDt
  , UpdateUser
  , UpdateTarm 
FROM
  GenbaShashinTbl
where
  GenbaShashinKensaHoteiKbn = @GenbaShashinKensaHoteiKbn and
  GenbaShashinKensaHokenjoCd = @GenbaShashinKensaHokenjoCd and
  GenbaShashinKensaNendo = @GenbaShashinKensaNendo and
  GenbaShashinKensaRenban = @GenbaShashinKensaRenban
";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHoteiKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaHokenjoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaNendo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenbaShashinKensaRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, "GenbaShashinKensaRenban", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GenbaShashinTblDataSet.GenbaShashinTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GenbaShashinTblDataSet.GenbaShashinTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GenbaShashinTblDataSet.GenbaShashinTblDataTable dataTable = new GenbaShashinTblDataSet.GenbaShashinTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKensaIraiKey(GenbaShashinTblDataSet.GenbaShashinTblDataTable dataTable, string GenbaShashinKensaHoteiKbn, string GenbaShashinKensaHokenjoCd, string GenbaShashinKensaNendo, string GenbaShashinKensaRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(GenbaShashinKensaHoteiKbn));
            }
            if ((GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(GenbaShashinKensaHokenjoCd));
            }
            if ((GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(GenbaShashinKensaNendo));
            }
            if ((GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(GenbaShashinKensaRenban));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual GenbaShashinTblDataSet.GenbaShashinTblDataTable GetDataByKensaIraiKey(string GenbaShashinKensaHoteiKbn, string GenbaShashinKensaHokenjoCd, string GenbaShashinKensaNendo, string GenbaShashinKensaRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(GenbaShashinKensaHoteiKbn));
            }
            if ((GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(GenbaShashinKensaHokenjoCd));
            }
            if ((GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(GenbaShashinKensaNendo));
            }
            if ((GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(GenbaShashinKensaRenban));
            }
            GenbaShashinTblDataSet.GenbaShashinTblDataTable dataTable = new GenbaShashinTblDataSet.GenbaShashinTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GenbaShashinTblDataSet.GenbaShashinTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GenbaShashinTblDataSet dataSet) {
            return this.Adapter.Update(dataSet, "GenbaShashinTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_GenbaShashinKensaHoteiKbn, string Original_GenbaShashinKensaHokenjoCd, string Original_GenbaShashinKensaNendo, string Original_GenbaShashinKensaRenban, string Original_GenbaShashinCd, string Original_GenbaShashinFilePath, System.DateTime Original_InsertDt, string Original_InsertUser, string Original_InsertTarm, System.DateTime Original_UpdateDt, string Original_UpdateUser, string Original_UpdateTarm) {
            if ((Original_GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaHoteiKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_GenbaShashinKensaHoteiKbn));
            }
            if ((Original_GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaHokenjoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_GenbaShashinKensaHokenjoCd));
            }
            if ((Original_GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaNendo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GenbaShashinKensaNendo));
            }
            if ((Original_GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaRenban");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_GenbaShashinKensaRenban));
            }
            if ((Original_GenbaShashinCd == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GenbaShashinCd));
            }
            if ((Original_GenbaShashinFilePath == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinFilePath");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_GenbaShashinFilePath));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string GenbaShashinKensaHoteiKbn, string GenbaShashinKensaHokenjoCd, string GenbaShashinKensaNendo, string GenbaShashinKensaRenban, string GenbaShashinCd, string GenbaShashinFilePath, System.DateTime InsertDt, string InsertUser, string InsertTarm, System.DateTime UpdateDt, string UpdateUser, string UpdateTarm) {
            if ((GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHoteiKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GenbaShashinKensaHoteiKbn));
            }
            if ((GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHokenjoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GenbaShashinKensaHokenjoCd));
            }
            if ((GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaNendo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GenbaShashinKensaNendo));
            }
            if ((GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaRenban");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(GenbaShashinKensaRenban));
            }
            if ((GenbaShashinCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GenbaShashinCd));
            }
            if ((GenbaShashinFilePath == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinFilePath");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(GenbaShashinFilePath));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(InsertTarm));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string GenbaShashinKensaHoteiKbn, 
                    string GenbaShashinKensaHokenjoCd, 
                    string GenbaShashinKensaNendo, 
                    string GenbaShashinKensaRenban, 
                    string GenbaShashinCd, 
                    string GenbaShashinFilePath, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_GenbaShashinKensaHoteiKbn, 
                    string Original_GenbaShashinKensaHokenjoCd, 
                    string Original_GenbaShashinKensaNendo, 
                    string Original_GenbaShashinKensaRenban, 
                    string Original_GenbaShashinCd, 
                    string Original_GenbaShashinFilePath, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHoteiKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(GenbaShashinKensaHoteiKbn));
            }
            if ((GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHokenjoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GenbaShashinKensaHokenjoCd));
            }
            if ((GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaNendo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GenbaShashinKensaNendo));
            }
            if ((GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaRenban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(GenbaShashinKensaRenban));
            }
            if ((GenbaShashinCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GenbaShashinCd));
            }
            if ((GenbaShashinFilePath == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinFilePath");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(GenbaShashinFilePath));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(UpdateTarm));
            }
            if ((Original_GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaHoteiKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_GenbaShashinKensaHoteiKbn));
            }
            if ((Original_GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaHokenjoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_GenbaShashinKensaHokenjoCd));
            }
            if ((Original_GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaNendo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_GenbaShashinKensaNendo));
            }
            if ((Original_GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinKensaRenban");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_GenbaShashinKensaRenban));
            }
            if ((Original_GenbaShashinCd == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_GenbaShashinCd));
            }
            if ((Original_GenbaShashinFilePath == null)) {
                throw new global::System.ArgumentNullException("Original_GenbaShashinFilePath");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_GenbaShashinFilePath));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string GenbaShashinFilePath, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_GenbaShashinKensaHoteiKbn, 
                    string Original_GenbaShashinKensaHokenjoCd, 
                    string Original_GenbaShashinKensaNendo, 
                    string Original_GenbaShashinKensaRenban, 
                    string Original_GenbaShashinCd, 
                    string Original_GenbaShashinFilePath, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            return this.Update(Original_GenbaShashinKensaHoteiKbn, Original_GenbaShashinKensaHokenjoCd, Original_GenbaShashinKensaNendo, Original_GenbaShashinKensaRenban, Original_GenbaShashinCd, GenbaShashinFilePath, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, Original_GenbaShashinKensaHoteiKbn, Original_GenbaShashinKensaHokenjoCd, Original_GenbaShashinKensaNendo, Original_GenbaShashinKensaRenban, Original_GenbaShashinCd, Original_GenbaShashinFilePath, Original_InsertDt, Original_InsertUser, Original_InsertTarm, Original_UpdateDt, Original_UpdateUser, Original_UpdateTarm);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByKensaIraiKey(string GenbaShashinKensaHoteiKbn, string GenbaShashinKensaHokenjoCd, string GenbaShashinKensaNendo, string GenbaShashinKensaRenban) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((GenbaShashinKensaHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHoteiKbn");
            }
            else {
                command.Parameters[0].Value = ((string)(GenbaShashinKensaHoteiKbn));
            }
            if ((GenbaShashinKensaHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaHokenjoCd");
            }
            else {
                command.Parameters[1].Value = ((string)(GenbaShashinKensaHokenjoCd));
            }
            if ((GenbaShashinKensaNendo == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaNendo");
            }
            else {
                command.Parameters[2].Value = ((string)(GenbaShashinKensaNendo));
            }
            if ((GenbaShashinKensaRenban == null)) {
                throw new global::System.ArgumentNullException("GenbaShashinKensaRenban");
            }
            else {
                command.Parameters[3].Value = ((string)(GenbaShashinKensaRenban));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private GenbaShashinTblTableAdapter _genbaShashinTblTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public GenbaShashinTblTableAdapter GenbaShashinTblTableAdapter {
            get {
                return this._genbaShashinTblTableAdapter;
            }
            set {
                this._genbaShashinTblTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._genbaShashinTblTableAdapter != null) 
                            && (this._genbaShashinTblTableAdapter.Connection != null))) {
                    return this._genbaShashinTblTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._genbaShashinTblTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(GenbaShashinTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._genbaShashinTblTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GenbaShashinTbl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._genbaShashinTblTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(GenbaShashinTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._genbaShashinTblTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GenbaShashinTbl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._genbaShashinTblTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(GenbaShashinTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._genbaShashinTblTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GenbaShashinTbl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._genbaShashinTblTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(GenbaShashinTblDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._genbaShashinTblTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._genbaShashinTblTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._genbaShashinTblTableAdapter != null)) {
                    revertConnections.Add(this._genbaShashinTblTableAdapter, this._genbaShashinTblTableAdapter.Connection);
                    this._genbaShashinTblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._genbaShashinTblTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._genbaShashinTblTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._genbaShashinTblTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._genbaShashinTblTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._genbaShashinTblTableAdapter != null)) {
                    this._genbaShashinTblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._genbaShashinTblTableAdapter]));
                    this._genbaShashinTblTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591