//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjBizSystem.Application.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NippoHdrTblDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NippoHdrTblDataSet : global::System.Data.DataSet {
        
        private NippoHdrTblDataTable tableNippoHdrTbl;
        
        private DailyIncompleteCountDataTable tableDailyIncompleteCount;
        
        private KensaNippoListDataTable tableKensaNippoList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NippoHdrTblDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NippoHdrTblDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["NippoHdrTbl"] != null)) {
                    base.Tables.Add(new NippoHdrTblDataTable(ds.Tables["NippoHdrTbl"]));
                }
                if ((ds.Tables["DailyIncompleteCount"] != null)) {
                    base.Tables.Add(new DailyIncompleteCountDataTable(ds.Tables["DailyIncompleteCount"]));
                }
                if ((ds.Tables["KensaNippoList"] != null)) {
                    base.Tables.Add(new KensaNippoListDataTable(ds.Tables["KensaNippoList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NippoHdrTblDataTable NippoHdrTbl {
            get {
                return this.tableNippoHdrTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DailyIncompleteCountDataTable DailyIncompleteCount {
            get {
                return this.tableDailyIncompleteCount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KensaNippoListDataTable KensaNippoList {
            get {
                return this.tableKensaNippoList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NippoHdrTblDataSet cln = ((NippoHdrTblDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["NippoHdrTbl"] != null)) {
                    base.Tables.Add(new NippoHdrTblDataTable(ds.Tables["NippoHdrTbl"]));
                }
                if ((ds.Tables["DailyIncompleteCount"] != null)) {
                    base.Tables.Add(new DailyIncompleteCountDataTable(ds.Tables["DailyIncompleteCount"]));
                }
                if ((ds.Tables["KensaNippoList"] != null)) {
                    base.Tables.Add(new KensaNippoListDataTable(ds.Tables["KensaNippoList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableNippoHdrTbl = ((NippoHdrTblDataTable)(base.Tables["NippoHdrTbl"]));
            if ((initTable == true)) {
                if ((this.tableNippoHdrTbl != null)) {
                    this.tableNippoHdrTbl.InitVars();
                }
            }
            this.tableDailyIncompleteCount = ((DailyIncompleteCountDataTable)(base.Tables["DailyIncompleteCount"]));
            if ((initTable == true)) {
                if ((this.tableDailyIncompleteCount != null)) {
                    this.tableDailyIncompleteCount.InitVars();
                }
            }
            this.tableKensaNippoList = ((KensaNippoListDataTable)(base.Tables["KensaNippoList"]));
            if ((initTable == true)) {
                if ((this.tableKensaNippoList != null)) {
                    this.tableKensaNippoList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NippoHdrTblDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NippoHdrTblDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableNippoHdrTbl = new NippoHdrTblDataTable();
            base.Tables.Add(this.tableNippoHdrTbl);
            this.tableDailyIncompleteCount = new DailyIncompleteCountDataTable();
            base.Tables.Add(this.tableDailyIncompleteCount);
            this.tableKensaNippoList = new KensaNippoListDataTable();
            base.Tables.Add(this.tableKensaNippoList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNippoHdrTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDailyIncompleteCount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeKensaNippoList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NippoHdrTblDataSet ds = new NippoHdrTblDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NippoHdrTblRowChangeEventHandler(object sender, NippoHdrTblRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DailyIncompleteCountRowChangeEventHandler(object sender, DailyIncompleteCountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void KensaNippoListRowChangeEventHandler(object sender, KensaNippoListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NippoHdrTblDataTable : global::System.Data.TypedTableBase<NippoHdrTblRow> {
            
            private global::System.Data.DataColumn columnNippoKensaDt;
            
            private global::System.Data.DataColumn columnNippoKensainCd;
            
            private global::System.Data.DataColumn columnNippoSokoKyori;
            
            private global::System.Data.DataColumn columnNippoKyuyu;
            
            private global::System.Data.DataColumn columnNippoSharyoTenkenKiroku;
            
            private global::System.Data.DataColumn columnNippoJitchichosaKensu;
            
            private global::System.Data.DataColumn columnNippoChokageninchosaKensu;
            
            private global::System.Data.DataColumn columnNippoCrosscheckKensu;
            
            private global::System.Data.DataColumn columnNippoHokokujiko;
            
            private global::System.Data.DataColumn columnNippoShijinaiyo;
            
            private global::System.Data.DataColumn columnNippoKanryoFlg;
            
            private global::System.Data.DataColumn columnNippoFukukachoCheckFlg;
            
            private global::System.Data.DataColumn columnNippoKachoCheckFlg;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblDataTable() {
                this.TableName = "NippoHdrTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NippoHdrTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NippoHdrTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKensaDtColumn {
                get {
                    return this.columnNippoKensaDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKensainCdColumn {
                get {
                    return this.columnNippoKensainCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoSokoKyoriColumn {
                get {
                    return this.columnNippoSokoKyori;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKyuyuColumn {
                get {
                    return this.columnNippoKyuyu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoSharyoTenkenKirokuColumn {
                get {
                    return this.columnNippoSharyoTenkenKiroku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoJitchichosaKensuColumn {
                get {
                    return this.columnNippoJitchichosaKensu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoChokageninchosaKensuColumn {
                get {
                    return this.columnNippoChokageninchosaKensu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoCrosscheckKensuColumn {
                get {
                    return this.columnNippoCrosscheckKensu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoHokokujikoColumn {
                get {
                    return this.columnNippoHokokujiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoShijinaiyoColumn {
                get {
                    return this.columnNippoShijinaiyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKanryoFlgColumn {
                get {
                    return this.columnNippoKanryoFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoFukukachoCheckFlgColumn {
                get {
                    return this.columnNippoFukukachoCheckFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKachoCheckFlgColumn {
                get {
                    return this.columnNippoKachoCheckFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblRow this[int index] {
                get {
                    return ((NippoHdrTblRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NippoHdrTblRowChangeEventHandler NippoHdrTblRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NippoHdrTblRowChangeEventHandler NippoHdrTblRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NippoHdrTblRowChangeEventHandler NippoHdrTblRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NippoHdrTblRowChangeEventHandler NippoHdrTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNippoHdrTblRow(NippoHdrTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblRow AddNippoHdrTblRow(
                        string NippoKensaDt, 
                        string NippoKensainCd, 
                        double NippoSokoKyori, 
                        double NippoKyuyu, 
                        string NippoSharyoTenkenKiroku, 
                        int NippoJitchichosaKensu, 
                        int NippoChokageninchosaKensu, 
                        int NippoCrosscheckKensu, 
                        string NippoHokokujiko, 
                        string NippoShijinaiyo, 
                        string NippoKanryoFlg, 
                        string NippoFukukachoCheckFlg, 
                        string NippoKachoCheckFlg, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm) {
                NippoHdrTblRow rowNippoHdrTblRow = ((NippoHdrTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NippoKensaDt,
                        NippoKensainCd,
                        NippoSokoKyori,
                        NippoKyuyu,
                        NippoSharyoTenkenKiroku,
                        NippoJitchichosaKensu,
                        NippoChokageninchosaKensu,
                        NippoCrosscheckKensu,
                        NippoHokokujiko,
                        NippoShijinaiyo,
                        NippoKanryoFlg,
                        NippoFukukachoCheckFlg,
                        NippoKachoCheckFlg,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm};
                rowNippoHdrTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNippoHdrTblRow);
                return rowNippoHdrTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblRow FindByNippoKensaDtNippoKensainCd(string NippoKensaDt, string NippoKensainCd) {
                return ((NippoHdrTblRow)(this.Rows.Find(new object[] {
                            NippoKensaDt,
                            NippoKensainCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NippoHdrTblDataTable cln = ((NippoHdrTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NippoHdrTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNippoKensaDt = base.Columns["NippoKensaDt"];
                this.columnNippoKensainCd = base.Columns["NippoKensainCd"];
                this.columnNippoSokoKyori = base.Columns["NippoSokoKyori"];
                this.columnNippoKyuyu = base.Columns["NippoKyuyu"];
                this.columnNippoSharyoTenkenKiroku = base.Columns["NippoSharyoTenkenKiroku"];
                this.columnNippoJitchichosaKensu = base.Columns["NippoJitchichosaKensu"];
                this.columnNippoChokageninchosaKensu = base.Columns["NippoChokageninchosaKensu"];
                this.columnNippoCrosscheckKensu = base.Columns["NippoCrosscheckKensu"];
                this.columnNippoHokokujiko = base.Columns["NippoHokokujiko"];
                this.columnNippoShijinaiyo = base.Columns["NippoShijinaiyo"];
                this.columnNippoKanryoFlg = base.Columns["NippoKanryoFlg"];
                this.columnNippoFukukachoCheckFlg = base.Columns["NippoFukukachoCheckFlg"];
                this.columnNippoKachoCheckFlg = base.Columns["NippoKachoCheckFlg"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNippoKensaDt = new global::System.Data.DataColumn("NippoKensaDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKensaDt);
                this.columnNippoKensainCd = new global::System.Data.DataColumn("NippoKensainCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKensainCd);
                this.columnNippoSokoKyori = new global::System.Data.DataColumn("NippoSokoKyori", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoSokoKyori);
                this.columnNippoKyuyu = new global::System.Data.DataColumn("NippoKyuyu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKyuyu);
                this.columnNippoSharyoTenkenKiroku = new global::System.Data.DataColumn("NippoSharyoTenkenKiroku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoSharyoTenkenKiroku);
                this.columnNippoJitchichosaKensu = new global::System.Data.DataColumn("NippoJitchichosaKensu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoJitchichosaKensu);
                this.columnNippoChokageninchosaKensu = new global::System.Data.DataColumn("NippoChokageninchosaKensu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoChokageninchosaKensu);
                this.columnNippoCrosscheckKensu = new global::System.Data.DataColumn("NippoCrosscheckKensu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoCrosscheckKensu);
                this.columnNippoHokokujiko = new global::System.Data.DataColumn("NippoHokokujiko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoHokokujiko);
                this.columnNippoShijinaiyo = new global::System.Data.DataColumn("NippoShijinaiyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoShijinaiyo);
                this.columnNippoKanryoFlg = new global::System.Data.DataColumn("NippoKanryoFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKanryoFlg);
                this.columnNippoFukukachoCheckFlg = new global::System.Data.DataColumn("NippoFukukachoCheckFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoFukukachoCheckFlg);
                this.columnNippoKachoCheckFlg = new global::System.Data.DataColumn("NippoKachoCheckFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKachoCheckFlg);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNippoKensaDt,
                                this.columnNippoKensainCd}, true));
                this.columnNippoKensaDt.AllowDBNull = false;
                this.columnNippoKensaDt.MaxLength = 8;
                this.columnNippoKensainCd.AllowDBNull = false;
                this.columnNippoKensainCd.MaxLength = 3;
                this.columnNippoSharyoTenkenKiroku.MaxLength = 40;
                this.columnNippoHokokujiko.MaxLength = 100;
                this.columnNippoShijinaiyo.MaxLength = 100;
                this.columnNippoKanryoFlg.MaxLength = 1;
                this.columnNippoFukukachoCheckFlg.MaxLength = 1;
                this.columnNippoKachoCheckFlg.MaxLength = 1;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblRow NewNippoHdrTblRow() {
                return ((NippoHdrTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NippoHdrTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NippoHdrTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NippoHdrTblRowChanged != null)) {
                    this.NippoHdrTblRowChanged(this, new NippoHdrTblRowChangeEvent(((NippoHdrTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NippoHdrTblRowChanging != null)) {
                    this.NippoHdrTblRowChanging(this, new NippoHdrTblRowChangeEvent(((NippoHdrTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NippoHdrTblRowDeleted != null)) {
                    this.NippoHdrTblRowDeleted(this, new NippoHdrTblRowChangeEvent(((NippoHdrTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NippoHdrTblRowDeleting != null)) {
                    this.NippoHdrTblRowDeleting(this, new NippoHdrTblRowChangeEvent(((NippoHdrTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNippoHdrTblRow(NippoHdrTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NippoHdrTblDataSet ds = new NippoHdrTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NippoHdrTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DailyIncompleteCountDataTable : global::System.Data.TypedTableBase<DailyIncompleteCountRow> {
            
            private global::System.Data.DataColumn columnDailyIncompleteCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyIncompleteCountDataTable() {
                this.TableName = "DailyIncompleteCount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DailyIncompleteCountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DailyIncompleteCountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DailyIncompleteCountColumn {
                get {
                    return this.columnDailyIncompleteCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyIncompleteCountRow this[int index] {
                get {
                    return ((DailyIncompleteCountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyIncompleteCountRowChangeEventHandler DailyIncompleteCountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyIncompleteCountRowChangeEventHandler DailyIncompleteCountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyIncompleteCountRowChangeEventHandler DailyIncompleteCountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyIncompleteCountRowChangeEventHandler DailyIncompleteCountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDailyIncompleteCountRow(DailyIncompleteCountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyIncompleteCountRow AddDailyIncompleteCountRow(int DailyIncompleteCount) {
                DailyIncompleteCountRow rowDailyIncompleteCountRow = ((DailyIncompleteCountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DailyIncompleteCount};
                rowDailyIncompleteCountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDailyIncompleteCountRow);
                return rowDailyIncompleteCountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DailyIncompleteCountDataTable cln = ((DailyIncompleteCountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DailyIncompleteCountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDailyIncompleteCount = base.Columns["DailyIncompleteCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDailyIncompleteCount = new global::System.Data.DataColumn("DailyIncompleteCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyIncompleteCount);
                this.columnDailyIncompleteCount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyIncompleteCountRow NewDailyIncompleteCountRow() {
                return ((DailyIncompleteCountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DailyIncompleteCountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DailyIncompleteCountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DailyIncompleteCountRowChanged != null)) {
                    this.DailyIncompleteCountRowChanged(this, new DailyIncompleteCountRowChangeEvent(((DailyIncompleteCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DailyIncompleteCountRowChanging != null)) {
                    this.DailyIncompleteCountRowChanging(this, new DailyIncompleteCountRowChangeEvent(((DailyIncompleteCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DailyIncompleteCountRowDeleted != null)) {
                    this.DailyIncompleteCountRowDeleted(this, new DailyIncompleteCountRowChangeEvent(((DailyIncompleteCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DailyIncompleteCountRowDeleting != null)) {
                    this.DailyIncompleteCountRowDeleting(this, new DailyIncompleteCountRowChangeEvent(((DailyIncompleteCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDailyIncompleteCountRow(DailyIncompleteCountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NippoHdrTblDataSet ds = new NippoHdrTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DailyIncompleteCountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KensaNippoListDataTable : global::System.Data.TypedTableBase<KensaNippoListRow> {
            
            private global::System.Data.DataColumn columnNippoKensaDt;
            
            private global::System.Data.DataColumn columnNippoKensainCd;
            
            private global::System.Data.DataColumn columnNippoSokoKyori;
            
            private global::System.Data.DataColumn columnNippoKyuyu;
            
            private global::System.Data.DataColumn columnNippoSharyoTenkenKiroku;
            
            private global::System.Data.DataColumn columnNippoJitchichosaKensu;
            
            private global::System.Data.DataColumn columnNippoChokageninchosaKensu;
            
            private global::System.Data.DataColumn columnNippoCrosscheckKensu;
            
            private global::System.Data.DataColumn columnNippoHokokujiko;
            
            private global::System.Data.DataColumn columnNippoShijinaiyo;
            
            private global::System.Data.DataColumn columnNippoKanryoFlg;
            
            private global::System.Data.DataColumn columnkensaKanryoCol;
            
            private global::System.Data.DataColumn columnNippoFukukachoCheckFlg;
            
            private global::System.Data.DataColumn columnfukuKachoKakuninCol;
            
            private global::System.Data.DataColumn columnNippoKachoCheckFlg;
            
            private global::System.Data.DataColumn columnkachoKakuninCol;
            
            private global::System.Data.DataColumn columnShokuinNm;
            
            private global::System.Data.DataColumn columnRowNumber;
            
            private global::System.Data.DataColumn columnkensaDtCol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KensaNippoListDataTable() {
                this.TableName = "KensaNippoList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KensaNippoListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected KensaNippoListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKensaDtColumn {
                get {
                    return this.columnNippoKensaDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKensainCdColumn {
                get {
                    return this.columnNippoKensainCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoSokoKyoriColumn {
                get {
                    return this.columnNippoSokoKyori;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKyuyuColumn {
                get {
                    return this.columnNippoKyuyu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoSharyoTenkenKirokuColumn {
                get {
                    return this.columnNippoSharyoTenkenKiroku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoJitchichosaKensuColumn {
                get {
                    return this.columnNippoJitchichosaKensu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoChokageninchosaKensuColumn {
                get {
                    return this.columnNippoChokageninchosaKensu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoCrosscheckKensuColumn {
                get {
                    return this.columnNippoCrosscheckKensu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoHokokujikoColumn {
                get {
                    return this.columnNippoHokokujiko;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoShijinaiyoColumn {
                get {
                    return this.columnNippoShijinaiyo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKanryoFlgColumn {
                get {
                    return this.columnNippoKanryoFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kensaKanryoColColumn {
                get {
                    return this.columnkensaKanryoCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoFukukachoCheckFlgColumn {
                get {
                    return this.columnNippoFukukachoCheckFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fukuKachoKakuninColColumn {
                get {
                    return this.columnfukuKachoKakuninCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NippoKachoCheckFlgColumn {
                get {
                    return this.columnNippoKachoCheckFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kachoKakuninColColumn {
                get {
                    return this.columnkachoKakuninCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokuinNmColumn {
                get {
                    return this.columnShokuinNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowNumberColumn {
                get {
                    return this.columnRowNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn kensaDtColColumn {
                get {
                    return this.columnkensaDtCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KensaNippoListRow this[int index] {
                get {
                    return ((KensaNippoListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KensaNippoListRowChangeEventHandler KensaNippoListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KensaNippoListRowChangeEventHandler KensaNippoListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KensaNippoListRowChangeEventHandler KensaNippoListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KensaNippoListRowChangeEventHandler KensaNippoListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddKensaNippoListRow(KensaNippoListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KensaNippoListRow AddKensaNippoListRow(
                        string NippoKensaDt, 
                        string NippoKensainCd, 
                        double NippoSokoKyori, 
                        double NippoKyuyu, 
                        string NippoSharyoTenkenKiroku, 
                        int NippoJitchichosaKensu, 
                        int NippoChokageninchosaKensu, 
                        int NippoCrosscheckKensu, 
                        string NippoHokokujiko, 
                        string NippoShijinaiyo, 
                        string NippoKanryoFlg, 
                        string kensaKanryoCol, 
                        string NippoFukukachoCheckFlg, 
                        string fukuKachoKakuninCol, 
                        string NippoKachoCheckFlg, 
                        string kachoKakuninCol, 
                        string ShokuinNm, 
                        string RowNumber, 
                        string kensaDtCol) {
                KensaNippoListRow rowKensaNippoListRow = ((KensaNippoListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NippoKensaDt,
                        NippoKensainCd,
                        NippoSokoKyori,
                        NippoKyuyu,
                        NippoSharyoTenkenKiroku,
                        NippoJitchichosaKensu,
                        NippoChokageninchosaKensu,
                        NippoCrosscheckKensu,
                        NippoHokokujiko,
                        NippoShijinaiyo,
                        NippoKanryoFlg,
                        kensaKanryoCol,
                        NippoFukukachoCheckFlg,
                        fukuKachoKakuninCol,
                        NippoKachoCheckFlg,
                        kachoKakuninCol,
                        ShokuinNm,
                        RowNumber,
                        kensaDtCol};
                rowKensaNippoListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKensaNippoListRow);
                return rowKensaNippoListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KensaNippoListDataTable cln = ((KensaNippoListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KensaNippoListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNippoKensaDt = base.Columns["NippoKensaDt"];
                this.columnNippoKensainCd = base.Columns["NippoKensainCd"];
                this.columnNippoSokoKyori = base.Columns["NippoSokoKyori"];
                this.columnNippoKyuyu = base.Columns["NippoKyuyu"];
                this.columnNippoSharyoTenkenKiroku = base.Columns["NippoSharyoTenkenKiroku"];
                this.columnNippoJitchichosaKensu = base.Columns["NippoJitchichosaKensu"];
                this.columnNippoChokageninchosaKensu = base.Columns["NippoChokageninchosaKensu"];
                this.columnNippoCrosscheckKensu = base.Columns["NippoCrosscheckKensu"];
                this.columnNippoHokokujiko = base.Columns["NippoHokokujiko"];
                this.columnNippoShijinaiyo = base.Columns["NippoShijinaiyo"];
                this.columnNippoKanryoFlg = base.Columns["NippoKanryoFlg"];
                this.columnkensaKanryoCol = base.Columns["kensaKanryoCol"];
                this.columnNippoFukukachoCheckFlg = base.Columns["NippoFukukachoCheckFlg"];
                this.columnfukuKachoKakuninCol = base.Columns["fukuKachoKakuninCol"];
                this.columnNippoKachoCheckFlg = base.Columns["NippoKachoCheckFlg"];
                this.columnkachoKakuninCol = base.Columns["kachoKakuninCol"];
                this.columnShokuinNm = base.Columns["ShokuinNm"];
                this.columnRowNumber = base.Columns["RowNumber"];
                this.columnkensaDtCol = base.Columns["kensaDtCol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNippoKensaDt = new global::System.Data.DataColumn("NippoKensaDt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKensaDt);
                this.columnNippoKensainCd = new global::System.Data.DataColumn("NippoKensainCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKensainCd);
                this.columnNippoSokoKyori = new global::System.Data.DataColumn("NippoSokoKyori", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoSokoKyori);
                this.columnNippoKyuyu = new global::System.Data.DataColumn("NippoKyuyu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKyuyu);
                this.columnNippoSharyoTenkenKiroku = new global::System.Data.DataColumn("NippoSharyoTenkenKiroku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoSharyoTenkenKiroku);
                this.columnNippoJitchichosaKensu = new global::System.Data.DataColumn("NippoJitchichosaKensu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoJitchichosaKensu);
                this.columnNippoChokageninchosaKensu = new global::System.Data.DataColumn("NippoChokageninchosaKensu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoChokageninchosaKensu);
                this.columnNippoCrosscheckKensu = new global::System.Data.DataColumn("NippoCrosscheckKensu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoCrosscheckKensu);
                this.columnNippoHokokujiko = new global::System.Data.DataColumn("NippoHokokujiko", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoHokokujiko);
                this.columnNippoShijinaiyo = new global::System.Data.DataColumn("NippoShijinaiyo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoShijinaiyo);
                this.columnNippoKanryoFlg = new global::System.Data.DataColumn("NippoKanryoFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKanryoFlg);
                this.columnkensaKanryoCol = new global::System.Data.DataColumn("kensaKanryoCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkensaKanryoCol);
                this.columnNippoFukukachoCheckFlg = new global::System.Data.DataColumn("NippoFukukachoCheckFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoFukukachoCheckFlg);
                this.columnfukuKachoKakuninCol = new global::System.Data.DataColumn("fukuKachoKakuninCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfukuKachoKakuninCol);
                this.columnNippoKachoCheckFlg = new global::System.Data.DataColumn("NippoKachoCheckFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNippoKachoCheckFlg);
                this.columnkachoKakuninCol = new global::System.Data.DataColumn("kachoKakuninCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkachoKakuninCol);
                this.columnShokuinNm = new global::System.Data.DataColumn("ShokuinNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokuinNm);
                this.columnRowNumber = new global::System.Data.DataColumn("RowNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNumber);
                this.columnkensaDtCol = new global::System.Data.DataColumn("kensaDtCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkensaDtCol);
                this.columnNippoKensaDt.MaxLength = 8;
                this.columnNippoKensainCd.MaxLength = 3;
                this.columnNippoSharyoTenkenKiroku.MaxLength = 40;
                this.columnNippoHokokujiko.MaxLength = 100;
                this.columnNippoShijinaiyo.MaxLength = 100;
                this.columnNippoKanryoFlg.MaxLength = 1;
                this.columnkensaKanryoCol.ReadOnly = true;
                this.columnkensaKanryoCol.MaxLength = 2;
                this.columnNippoFukukachoCheckFlg.MaxLength = 1;
                this.columnfukuKachoKakuninCol.ReadOnly = true;
                this.columnfukuKachoKakuninCol.MaxLength = 2;
                this.columnNippoKachoCheckFlg.MaxLength = 1;
                this.columnkachoKakuninCol.ReadOnly = true;
                this.columnkachoKakuninCol.MaxLength = 2;
                this.columnShokuinNm.MaxLength = 20;
                this.columnRowNumber.ReadOnly = true;
                this.columnRowNumber.MaxLength = 10;
                this.columnkensaDtCol.ReadOnly = true;
                this.columnkensaDtCol.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KensaNippoListRow NewKensaNippoListRow() {
                return ((KensaNippoListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KensaNippoListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KensaNippoListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KensaNippoListRowChanged != null)) {
                    this.KensaNippoListRowChanged(this, new KensaNippoListRowChangeEvent(((KensaNippoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KensaNippoListRowChanging != null)) {
                    this.KensaNippoListRowChanging(this, new KensaNippoListRowChangeEvent(((KensaNippoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KensaNippoListRowDeleted != null)) {
                    this.KensaNippoListRowDeleted(this, new KensaNippoListRowChangeEvent(((KensaNippoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KensaNippoListRowDeleting != null)) {
                    this.KensaNippoListRowDeleting(this, new KensaNippoListRowChangeEvent(((KensaNippoListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveKensaNippoListRow(KensaNippoListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NippoHdrTblDataSet ds = new NippoHdrTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KensaNippoListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NippoHdrTblRow : global::System.Data.DataRow {
            
            private NippoHdrTblDataTable tableNippoHdrTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NippoHdrTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNippoHdrTbl = ((NippoHdrTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKensaDt {
                get {
                    return ((string)(this[this.tableNippoHdrTbl.NippoKensaDtColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.NippoKensaDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKensainCd {
                get {
                    return ((string)(this[this.tableNippoHdrTbl.NippoKensainCdColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.NippoKensainCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NippoSokoKyori {
                get {
                    try {
                        return ((double)(this[this.tableNippoHdrTbl.NippoSokoKyoriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoSokoKyori\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoSokoKyoriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NippoKyuyu {
                get {
                    try {
                        return ((double)(this[this.tableNippoHdrTbl.NippoKyuyuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoKyuyu\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoKyuyuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoSharyoTenkenKiroku {
                get {
                    try {
                        return ((string)(this[this.tableNippoHdrTbl.NippoSharyoTenkenKirokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoSharyoTenkenKiroku\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoSharyoTenkenKirokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NippoJitchichosaKensu {
                get {
                    try {
                        return ((int)(this[this.tableNippoHdrTbl.NippoJitchichosaKensuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoJitchichosaKensu\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoJitchichosaKensuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NippoChokageninchosaKensu {
                get {
                    try {
                        return ((int)(this[this.tableNippoHdrTbl.NippoChokageninchosaKensuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoChokageninchosaKensu\' in table \'NippoHdrTbl\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoChokageninchosaKensuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NippoCrosscheckKensu {
                get {
                    try {
                        return ((int)(this[this.tableNippoHdrTbl.NippoCrosscheckKensuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoCrosscheckKensu\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoCrosscheckKensuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoHokokujiko {
                get {
                    try {
                        return ((string)(this[this.tableNippoHdrTbl.NippoHokokujikoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoHokokujiko\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoHokokujikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoShijinaiyo {
                get {
                    try {
                        return ((string)(this[this.tableNippoHdrTbl.NippoShijinaiyoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoShijinaiyo\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoShijinaiyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKanryoFlg {
                get {
                    try {
                        return ((string)(this[this.tableNippoHdrTbl.NippoKanryoFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoKanryoFlg\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoKanryoFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoFukukachoCheckFlg {
                get {
                    try {
                        return ((string)(this[this.tableNippoHdrTbl.NippoFukukachoCheckFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoFukukachoCheckFlg\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoFukukachoCheckFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKachoCheckFlg {
                get {
                    try {
                        return ((string)(this[this.tableNippoHdrTbl.NippoKachoCheckFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoKachoCheckFlg\' in table \'NippoHdrTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNippoHdrTbl.NippoKachoCheckFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableNippoHdrTbl.InsertDtColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableNippoHdrTbl.InsertUserColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableNippoHdrTbl.InsertTarmColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableNippoHdrTbl.UpdateDtColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableNippoHdrTbl.UpdateUserColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableNippoHdrTbl.UpdateTarmColumn]));
                }
                set {
                    this[this.tableNippoHdrTbl.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoSokoKyoriNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoSokoKyoriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoSokoKyoriNull() {
                this[this.tableNippoHdrTbl.NippoSokoKyoriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKyuyuNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoKyuyuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKyuyuNull() {
                this[this.tableNippoHdrTbl.NippoKyuyuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoSharyoTenkenKirokuNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoSharyoTenkenKirokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoSharyoTenkenKirokuNull() {
                this[this.tableNippoHdrTbl.NippoSharyoTenkenKirokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoJitchichosaKensuNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoJitchichosaKensuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoJitchichosaKensuNull() {
                this[this.tableNippoHdrTbl.NippoJitchichosaKensuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoChokageninchosaKensuNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoChokageninchosaKensuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoChokageninchosaKensuNull() {
                this[this.tableNippoHdrTbl.NippoChokageninchosaKensuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoCrosscheckKensuNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoCrosscheckKensuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoCrosscheckKensuNull() {
                this[this.tableNippoHdrTbl.NippoCrosscheckKensuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoHokokujikoNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoHokokujikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoHokokujikoNull() {
                this[this.tableNippoHdrTbl.NippoHokokujikoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoShijinaiyoNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoShijinaiyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoShijinaiyoNull() {
                this[this.tableNippoHdrTbl.NippoShijinaiyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKanryoFlgNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoKanryoFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKanryoFlgNull() {
                this[this.tableNippoHdrTbl.NippoKanryoFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoFukukachoCheckFlgNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoFukukachoCheckFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoFukukachoCheckFlgNull() {
                this[this.tableNippoHdrTbl.NippoFukukachoCheckFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKachoCheckFlgNull() {
                return this.IsNull(this.tableNippoHdrTbl.NippoKachoCheckFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKachoCheckFlgNull() {
                this[this.tableNippoHdrTbl.NippoKachoCheckFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DailyIncompleteCountRow : global::System.Data.DataRow {
            
            private DailyIncompleteCountDataTable tableDailyIncompleteCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DailyIncompleteCountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDailyIncompleteCount = ((DailyIncompleteCountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DailyIncompleteCount {
                get {
                    try {
                        return ((int)(this[this.tableDailyIncompleteCount.DailyIncompleteCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DailyIncompleteCount\' in table \'DailyIncompleteCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDailyIncompleteCount.DailyIncompleteCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDailyIncompleteCountNull() {
                return this.IsNull(this.tableDailyIncompleteCount.DailyIncompleteCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDailyIncompleteCountNull() {
                this[this.tableDailyIncompleteCount.DailyIncompleteCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KensaNippoListRow : global::System.Data.DataRow {
            
            private KensaNippoListDataTable tableKensaNippoList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KensaNippoListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKensaNippoList = ((KensaNippoListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKensaDt {
                get {
                    if (this.IsNippoKensaDtNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoKensaDtColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoKensaDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKensainCd {
                get {
                    if (this.IsNippoKensainCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoKensainCdColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoKensainCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NippoSokoKyori {
                get {
                    try {
                        return ((double)(this[this.tableKensaNippoList.NippoSokoKyoriColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoSokoKyori\' in table \'KensaNippoList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoSokoKyoriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NippoKyuyu {
                get {
                    try {
                        return ((double)(this[this.tableKensaNippoList.NippoKyuyuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoKyuyu\' in table \'KensaNippoList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoKyuyuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoSharyoTenkenKiroku {
                get {
                    if (this.IsNippoSharyoTenkenKirokuNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoSharyoTenkenKirokuColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoSharyoTenkenKirokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NippoJitchichosaKensu {
                get {
                    try {
                        return ((int)(this[this.tableKensaNippoList.NippoJitchichosaKensuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoJitchichosaKensu\' in table \'KensaNippoList\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoJitchichosaKensuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NippoChokageninchosaKensu {
                get {
                    try {
                        return ((int)(this[this.tableKensaNippoList.NippoChokageninchosaKensuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoChokageninchosaKensu\' in table \'KensaNippoList\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoChokageninchosaKensuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NippoCrosscheckKensu {
                get {
                    try {
                        return ((int)(this[this.tableKensaNippoList.NippoCrosscheckKensuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NippoCrosscheckKensu\' in table \'KensaNippoList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoCrosscheckKensuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoHokokujiko {
                get {
                    if (this.IsNippoHokokujikoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoHokokujikoColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoHokokujikoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoShijinaiyo {
                get {
                    if (this.IsNippoShijinaiyoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoShijinaiyoColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoShijinaiyoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKanryoFlg {
                get {
                    if (this.IsNippoKanryoFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoKanryoFlgColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoKanryoFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string kensaKanryoCol {
                get {
                    if (this.IskensaKanryoColNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.kensaKanryoColColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.kensaKanryoColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoFukukachoCheckFlg {
                get {
                    if (this.IsNippoFukukachoCheckFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoFukukachoCheckFlgColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoFukukachoCheckFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fukuKachoKakuninCol {
                get {
                    if (this.IsfukuKachoKakuninColNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.fukuKachoKakuninColColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.fukuKachoKakuninColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NippoKachoCheckFlg {
                get {
                    if (this.IsNippoKachoCheckFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.NippoKachoCheckFlgColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.NippoKachoCheckFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string kachoKakuninCol {
                get {
                    if (this.IskachoKakuninColNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.kachoKakuninColColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.kachoKakuninColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokuinNm {
                get {
                    if (this.IsShokuinNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.ShokuinNmColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.ShokuinNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RowNumber {
                get {
                    if (this.IsRowNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableKensaNippoList.RowNumberColumn]));
                    }
                }
                set {
                    this[this.tableKensaNippoList.RowNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string kensaDtCol {
                get {
                    try {
                        return ((string)(this[this.tableKensaNippoList.kensaDtColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kensaDtCol\' in table \'KensaNippoList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKensaNippoList.kensaDtColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKensaDtNull() {
                return this.IsNull(this.tableKensaNippoList.NippoKensaDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKensaDtNull() {
                this[this.tableKensaNippoList.NippoKensaDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKensainCdNull() {
                return this.IsNull(this.tableKensaNippoList.NippoKensainCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKensainCdNull() {
                this[this.tableKensaNippoList.NippoKensainCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoSokoKyoriNull() {
                return this.IsNull(this.tableKensaNippoList.NippoSokoKyoriColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoSokoKyoriNull() {
                this[this.tableKensaNippoList.NippoSokoKyoriColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKyuyuNull() {
                return this.IsNull(this.tableKensaNippoList.NippoKyuyuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKyuyuNull() {
                this[this.tableKensaNippoList.NippoKyuyuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoSharyoTenkenKirokuNull() {
                return this.IsNull(this.tableKensaNippoList.NippoSharyoTenkenKirokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoSharyoTenkenKirokuNull() {
                this[this.tableKensaNippoList.NippoSharyoTenkenKirokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoJitchichosaKensuNull() {
                return this.IsNull(this.tableKensaNippoList.NippoJitchichosaKensuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoJitchichosaKensuNull() {
                this[this.tableKensaNippoList.NippoJitchichosaKensuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoChokageninchosaKensuNull() {
                return this.IsNull(this.tableKensaNippoList.NippoChokageninchosaKensuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoChokageninchosaKensuNull() {
                this[this.tableKensaNippoList.NippoChokageninchosaKensuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoCrosscheckKensuNull() {
                return this.IsNull(this.tableKensaNippoList.NippoCrosscheckKensuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoCrosscheckKensuNull() {
                this[this.tableKensaNippoList.NippoCrosscheckKensuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoHokokujikoNull() {
                return this.IsNull(this.tableKensaNippoList.NippoHokokujikoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoHokokujikoNull() {
                this[this.tableKensaNippoList.NippoHokokujikoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoShijinaiyoNull() {
                return this.IsNull(this.tableKensaNippoList.NippoShijinaiyoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoShijinaiyoNull() {
                this[this.tableKensaNippoList.NippoShijinaiyoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKanryoFlgNull() {
                return this.IsNull(this.tableKensaNippoList.NippoKanryoFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKanryoFlgNull() {
                this[this.tableKensaNippoList.NippoKanryoFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskensaKanryoColNull() {
                return this.IsNull(this.tableKensaNippoList.kensaKanryoColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkensaKanryoColNull() {
                this[this.tableKensaNippoList.kensaKanryoColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoFukukachoCheckFlgNull() {
                return this.IsNull(this.tableKensaNippoList.NippoFukukachoCheckFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoFukukachoCheckFlgNull() {
                this[this.tableKensaNippoList.NippoFukukachoCheckFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfukuKachoKakuninColNull() {
                return this.IsNull(this.tableKensaNippoList.fukuKachoKakuninColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfukuKachoKakuninColNull() {
                this[this.tableKensaNippoList.fukuKachoKakuninColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNippoKachoCheckFlgNull() {
                return this.IsNull(this.tableKensaNippoList.NippoKachoCheckFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNippoKachoCheckFlgNull() {
                this[this.tableKensaNippoList.NippoKachoCheckFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskachoKakuninColNull() {
                return this.IsNull(this.tableKensaNippoList.kachoKakuninColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkachoKakuninColNull() {
                this[this.tableKensaNippoList.kachoKakuninColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokuinNmNull() {
                return this.IsNull(this.tableKensaNippoList.ShokuinNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokuinNmNull() {
                this[this.tableKensaNippoList.ShokuinNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowNumberNull() {
                return this.IsNull(this.tableKensaNippoList.RowNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowNumberNull() {
                this[this.tableKensaNippoList.RowNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IskensaDtColNull() {
                return this.IsNull(this.tableKensaNippoList.kensaDtColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetkensaDtColNull() {
                this[this.tableKensaNippoList.kensaDtColColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NippoHdrTblRowChangeEvent : global::System.EventArgs {
            
            private NippoHdrTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblRowChangeEvent(NippoHdrTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NippoHdrTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DailyIncompleteCountRowChangeEvent : global::System.EventArgs {
            
            private DailyIncompleteCountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyIncompleteCountRowChangeEvent(DailyIncompleteCountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyIncompleteCountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class KensaNippoListRowChangeEvent : global::System.EventArgs {
            
            private KensaNippoListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KensaNippoListRowChangeEvent(KensaNippoListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KensaNippoListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjBizSystem.Application.DataSet.NippoHdrTblDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NippoHdrTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NippoHdrTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NippoHdrTbl";
            tableMapping.ColumnMappings.Add("NippoKensaDt", "NippoKensaDt");
            tableMapping.ColumnMappings.Add("NippoKensainCd", "NippoKensainCd");
            tableMapping.ColumnMappings.Add("NippoSokoKyori", "NippoSokoKyori");
            tableMapping.ColumnMappings.Add("NippoKyuyu", "NippoKyuyu");
            tableMapping.ColumnMappings.Add("NippoSharyoTenkenKiroku", "NippoSharyoTenkenKiroku");
            tableMapping.ColumnMappings.Add("NippoJitchichosaKensu", "NippoJitchichosaKensu");
            tableMapping.ColumnMappings.Add("NippoChokageninchosaKensu", "NippoChokageninchosaKensu");
            tableMapping.ColumnMappings.Add("NippoCrosscheckKensu", "NippoCrosscheckKensu");
            tableMapping.ColumnMappings.Add("NippoHokokujiko", "NippoHokokujiko");
            tableMapping.ColumnMappings.Add("NippoShijinaiyo", "NippoShijinaiyo");
            tableMapping.ColumnMappings.Add("NippoKanryoFlg", "NippoKanryoFlg");
            tableMapping.ColumnMappings.Add("NippoFukukachoCheckFlg", "NippoFukukachoCheckFlg");
            tableMapping.ColumnMappings.Add("NippoKachoCheckFlg", "NippoKachoCheckFlg");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [NippoHdrTbl] WHERE (([NippoKensaDt] = @Original_NippoKensaDt) AND ([" +
                "NippoKensainCd] = @Original_NippoKensainCd) AND ((@IsNull_NippoSokoKyori = 1 AND" +
                " [NippoSokoKyori] IS NULL) OR ([NippoSokoKyori] = @Original_NippoSokoKyori)) AND" +
                " ((@IsNull_NippoKyuyu = 1 AND [NippoKyuyu] IS NULL) OR ([NippoKyuyu] = @Original" +
                "_NippoKyuyu)) AND ((@IsNull_NippoSharyoTenkenKiroku = 1 AND [NippoSharyoTenkenKi" +
                "roku] IS NULL) OR ([NippoSharyoTenkenKiroku] = @Original_NippoSharyoTenkenKiroku" +
                ")) AND ((@IsNull_NippoJitchichosaKensu = 1 AND [NippoJitchichosaKensu] IS NULL) " +
                "OR ([NippoJitchichosaKensu] = @Original_NippoJitchichosaKensu)) AND ((@IsNull_Ni" +
                "ppoChokageninchosaKensu = 1 AND [NippoChokageninchosaKensu] IS NULL) OR ([NippoC" +
                "hokageninchosaKensu] = @Original_NippoChokageninchosaKensu)) AND ((@IsNull_Nippo" +
                "CrosscheckKensu = 1 AND [NippoCrosscheckKensu] IS NULL) OR ([NippoCrosscheckKens" +
                "u] = @Original_NippoCrosscheckKensu)) AND ((@IsNull_NippoHokokujiko = 1 AND [Nip" +
                "poHokokujiko] IS NULL) OR ([NippoHokokujiko] = @Original_NippoHokokujiko)) AND (" +
                "(@IsNull_NippoShijinaiyo = 1 AND [NippoShijinaiyo] IS NULL) OR ([NippoShijinaiyo" +
                "] = @Original_NippoShijinaiyo)) AND ((@IsNull_NippoKanryoFlg = 1 AND [NippoKanry" +
                "oFlg] IS NULL) OR ([NippoKanryoFlg] = @Original_NippoKanryoFlg)) AND ((@IsNull_N" +
                "ippoFukukachoCheckFlg = 1 AND [NippoFukukachoCheckFlg] IS NULL) OR ([NippoFukuka" +
                "choCheckFlg] = @Original_NippoFukukachoCheckFlg)) AND ((@IsNull_NippoKachoCheckF" +
                "lg = 1 AND [NippoKachoCheckFlg] IS NULL) OR ([NippoKachoCheckFlg] = @Original_Ni" +
                "ppoKachoCheckFlg)) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Or" +
                "iginal_InsertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @" +
                "Original_UpdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] =" +
                " @Original_UpdateTarm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKensaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensaDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoSokoKyori", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSokoKyori", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoSokoKyori", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSokoKyori", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoKyuyu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKyuyu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKyuyu", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKyuyu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoSharyoTenkenKiroku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSharyoTenkenKiroku", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoSharyoTenkenKiroku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSharyoTenkenKiroku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoJitchichosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoJitchichosaKensu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoJitchichosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoJitchichosaKensu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoChokageninchosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoChokageninchosaKensu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoChokageninchosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoChokageninchosaKensu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoCrosscheckKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoCrosscheckKensu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoCrosscheckKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoCrosscheckKensu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoHokokujiko", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoHokokujiko", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoHokokujiko", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoHokokujiko", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoShijinaiyo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoShijinaiyo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoShijinaiyo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoShijinaiyo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoKanryoFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKanryoFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKanryoFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKanryoFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoFukukachoCheckFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoFukukachoCheckFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoFukukachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoFukukachoCheckFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoKachoCheckFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKachoCheckFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKachoCheckFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [NippoHdrTbl] ([NippoKensaDt], [NippoKensainCd], [NippoSokoKyori], [NippoKyuyu], [NippoSharyoTenkenKiroku], [NippoJitchichosaKensu], [NippoChokageninchosaKensu], [NippoCrosscheckKensu], [NippoHokokujiko], [NippoShijinaiyo], [NippoKanryoFlg], [NippoFukukachoCheckFlg], [NippoKachoCheckFlg], [InsertDt], [InsertUser], [InsertTarm], [UpdateDt], [UpdateUser], [UpdateTarm]) VALUES (@NippoKensaDt, @NippoKensainCd, @NippoSokoKyori, @NippoKyuyu, @NippoSharyoTenkenKiroku, @NippoJitchichosaKensu, @NippoChokageninchosaKensu, @NippoCrosscheckKensu, @NippoHokokujiko, @NippoShijinaiyo, @NippoKanryoFlg, @NippoFukukachoCheckFlg, @NippoKachoCheckFlg, @InsertDt, @InsertUser, @InsertTarm, @UpdateDt, @UpdateUser, @UpdateTarm);
SELECT NippoKensaDt, NippoKensainCd, NippoSokoKyori, NippoKyuyu, NippoSharyoTenkenKiroku, NippoJitchichosaKensu, NippoChokageninchosaKensu, NippoCrosscheckKensu, NippoHokokujiko, NippoShijinaiyo, NippoKanryoFlg, NippoFukukachoCheckFlg, NippoKachoCheckFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM NippoHdrTbl WHERE (NippoKensaDt = @NippoKensaDt) AND (NippoKensainCd = @NippoKensainCd)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensaDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoSokoKyori", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSokoKyori", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKyuyu", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKyuyu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoSharyoTenkenKiroku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSharyoTenkenKiroku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoJitchichosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoJitchichosaKensu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoChokageninchosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoChokageninchosaKensu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoCrosscheckKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoCrosscheckKensu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoHokokujiko", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoHokokujiko", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoShijinaiyo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoShijinaiyo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKanryoFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKanryoFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoFukukachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoFukukachoCheckFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKachoCheckFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [NippoHdrTbl] SET [NippoKensaDt] = @NippoKensaDt, [NippoKensainCd] = @Nipp" +
                "oKensainCd, [NippoSokoKyori] = @NippoSokoKyori, [NippoKyuyu] = @NippoKyuyu, [Nip" +
                "poSharyoTenkenKiroku] = @NippoSharyoTenkenKiroku, [NippoJitchichosaKensu] = @Nip" +
                "poJitchichosaKensu, [NippoChokageninchosaKensu] = @NippoChokageninchosaKensu, [N" +
                "ippoCrosscheckKensu] = @NippoCrosscheckKensu, [NippoHokokujiko] = @NippoHokokuji" +
                "ko, [NippoShijinaiyo] = @NippoShijinaiyo, [NippoKanryoFlg] = @NippoKanryoFlg, [N" +
                "ippoFukukachoCheckFlg] = @NippoFukukachoCheckFlg, [NippoKachoCheckFlg] = @NippoK" +
                "achoCheckFlg, [InsertDt] = @InsertDt, [InsertUser] = @InsertUser, [InsertTarm] =" +
                " @InsertTarm, [UpdateDt] = @UpdateDt, [UpdateUser] = @UpdateUser, [UpdateTarm] =" +
                " @UpdateTarm WHERE (([NippoKensaDt] = @Original_NippoKensaDt) AND ([NippoKensain" +
                "Cd] = @Original_NippoKensainCd) AND ((@IsNull_NippoSokoKyori = 1 AND [NippoSokoK" +
                "yori] IS NULL) OR ([NippoSokoKyori] = @Original_NippoSokoKyori)) AND ((@IsNull_N" +
                "ippoKyuyu = 1 AND [NippoKyuyu] IS NULL) OR ([NippoKyuyu] = @Original_NippoKyuyu)" +
                ") AND ((@IsNull_NippoSharyoTenkenKiroku = 1 AND [NippoSharyoTenkenKiroku] IS NUL" +
                "L) OR ([NippoSharyoTenkenKiroku] = @Original_NippoSharyoTenkenKiroku)) AND ((@Is" +
                "Null_NippoJitchichosaKensu = 1 AND [NippoJitchichosaKensu] IS NULL) OR ([NippoJi" +
                "tchichosaKensu] = @Original_NippoJitchichosaKensu)) AND ((@IsNull_NippoChokageni" +
                "nchosaKensu = 1 AND [NippoChokageninchosaKensu] IS NULL) OR ([NippoChokagenincho" +
                "saKensu] = @Original_NippoChokageninchosaKensu)) AND ((@IsNull_NippoCrosscheckKe" +
                "nsu = 1 AND [NippoCrosscheckKensu] IS NULL) OR ([NippoCrosscheckKensu] = @Origin" +
                "al_NippoCrosscheckKensu)) AND ((@IsNull_NippoHokokujiko = 1 AND [NippoHokokujiko" +
                "] IS NULL) OR ([NippoHokokujiko] = @Original_NippoHokokujiko)) AND ((@IsNull_Nip" +
                "poShijinaiyo = 1 AND [NippoShijinaiyo] IS NULL) OR ([NippoShijinaiyo] = @Origina" +
                "l_NippoShijinaiyo)) AND ((@IsNull_NippoKanryoFlg = 1 AND [NippoKanryoFlg] IS NUL" +
                "L) OR ([NippoKanryoFlg] = @Original_NippoKanryoFlg)) AND ((@IsNull_NippoFukukach" +
                "oCheckFlg = 1 AND [NippoFukukachoCheckFlg] IS NULL) OR ([NippoFukukachoCheckFlg]" +
                " = @Original_NippoFukukachoCheckFlg)) AND ((@IsNull_NippoKachoCheckFlg = 1 AND [" +
                "NippoKachoCheckFlg] IS NULL) OR ([NippoKachoCheckFlg] = @Original_NippoKachoChec" +
                "kFlg)) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Original_Inser" +
                "tUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Original_Upd" +
                "ateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @Original_U" +
                "pdateTarm));\r\nSELECT NippoKensaDt, NippoKensainCd, NippoSokoKyori, NippoKyuyu, N" +
                "ippoSharyoTenkenKiroku, NippoJitchichosaKensu, NippoChokageninchosaKensu, NippoC" +
                "rosscheckKensu, NippoHokokujiko, NippoShijinaiyo, NippoKanryoFlg, NippoFukukacho" +
                "CheckFlg, NippoKachoCheckFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, Update" +
                "User, UpdateTarm FROM NippoHdrTbl WHERE (NippoKensaDt = @NippoKensaDt) AND (Nipp" +
                "oKensainCd = @NippoKensainCd)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensaDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoSokoKyori", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSokoKyori", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKyuyu", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKyuyu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoSharyoTenkenKiroku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSharyoTenkenKiroku", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoJitchichosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoJitchichosaKensu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoChokageninchosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoChokageninchosaKensu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoCrosscheckKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoCrosscheckKensu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoHokokujiko", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoHokokujiko", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoShijinaiyo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoShijinaiyo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKanryoFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKanryoFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoFukukachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoFukukachoCheckFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKachoCheckFlg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKensaDt", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensaDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoSokoKyori", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSokoKyori", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoSokoKyori", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSokoKyori", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoKyuyu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKyuyu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKyuyu", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKyuyu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoSharyoTenkenKiroku", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSharyoTenkenKiroku", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoSharyoTenkenKiroku", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoSharyoTenkenKiroku", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoJitchichosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoJitchichosaKensu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoJitchichosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoJitchichosaKensu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoChokageninchosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoChokageninchosaKensu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoChokageninchosaKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoChokageninchosaKensu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoCrosscheckKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoCrosscheckKensu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoCrosscheckKensu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoCrosscheckKensu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoHokokujiko", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoHokokujiko", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoHokokujiko", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoHokokujiko", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoShijinaiyo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoShijinaiyo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoShijinaiyo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoShijinaiyo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoKanryoFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKanryoFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKanryoFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKanryoFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoFukukachoCheckFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoFukukachoCheckFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoFukukachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoFukukachoCheckFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NippoKachoCheckFlg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKachoCheckFlg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NippoKachoCheckFlg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKachoCheckFlg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  NippoKensaDt
  , NippoKensainCd
  , NippoSokoKyori
  , NippoKyuyu
  , NippoSharyoTenkenKiroku
  , NippoJitchichosaKensu
  , NippoChokageninchosaKensu
  , NippoCrosscheckKensu
  , NippoHokokujiko
  , NippoShijinaiyo
  , NippoKanryoFlg
  , NippoFukukachoCheckFlg
  , NippoKachoCheckFlg
  , InsertDt
  , InsertUser
  , InsertTarm
  , UpdateDt
  , UpdateUser
  , UpdateTarm 
FROM
  NippoHdrTbl
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM       NippoHdrTbl\r\nWHERE                       (NippoKensaDt = @Nippo" +
                "KensaDt) AND (NippoKensainCd = @NippoKensainCd)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensaDt", global::System.Data.SqlDbType.NVarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensaDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT                      NippoKensaDt, NippoKensainCd, NippoSokoKyori, NippoKyuyu, NippoSharyoTenkenKiroku, NippoJitchichosaKensu, NippoChokageninchosaKensu, 
                                      NippoCrosscheckKensu, NippoHokokujiko, NippoShijinaiyo, NippoKanryoFlg, NippoFukukachoCheckFlg, NippoKachoCheckFlg, InsertDt, InsertUser, 
                                      InsertTarm, UpdateDt, UpdateUser, UpdateTarm
FROM                         NippoHdrTbl
WHERE                       (NippoKensaDt = @NippoKensaDt) AND (NippoKensainCd = @NippoKensainCd)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensaDt", global::System.Data.SqlDbType.NVarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensaDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT                      NippoKensaDt, NippoKensainCd, NippoSokoKyori, NippoKyuyu, NippoSharyoTenkenKiroku, NippoJitchichosaKensu, NippoChokageninchosaKensu, 
                                      NippoCrosscheckKensu, NippoHokokujiko, NippoShijinaiyo, NippoKanryoFlg, NippoFukukachoCheckFlg, NippoKachoCheckFlg, InsertDt, InsertUser, 
                                      InsertTarm, UpdateDt, UpdateUser, UpdateTarm
FROM                         NippoHdrTbl
WHERE                       (NippoKensainCd = @NippoKensainCd)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NippoKensainCd", global::System.Data.SqlDbType.NVarChar, 3, global::System.Data.ParameterDirection.Input, 0, 0, "NippoKensainCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NippoHdrTblDataSet.NippoHdrTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NippoHdrTblDataSet.NippoHdrTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NippoHdrTblDataSet.NippoHdrTblDataTable dataTable = new NippoHdrTblDataSet.NippoHdrTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKey(NippoHdrTblDataSet.NippoHdrTblDataTable dataTable, string NippoKensaDt, string NippoKensainCd) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("NippoKensaDt");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NippoKensaDt));
            }
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(NippoKensainCd));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NippoHdrTblDataSet.NippoHdrTblDataTable GetDataByKey(string NippoKensaDt, string NippoKensainCd) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("NippoKensaDt");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NippoKensaDt));
            }
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(NippoKensainCd));
            }
            NippoHdrTblDataSet.NippoHdrTblDataTable dataTable = new NippoHdrTblDataSet.NippoHdrTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNippoKensainCd(NippoHdrTblDataSet.NippoHdrTblDataTable dataTable, string NippoKensainCd) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NippoKensainCd));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual NippoHdrTblDataSet.NippoHdrTblDataTable GetDataByNippoKensainCd(string NippoKensainCd) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NippoKensainCd));
            }
            NippoHdrTblDataSet.NippoHdrTblDataTable dataTable = new NippoHdrTblDataSet.NippoHdrTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NippoHdrTblDataSet.NippoHdrTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NippoHdrTblDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NippoHdrTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_NippoKensaDt, 
                    string Original_NippoKensainCd, 
                    global::System.Nullable<double> Original_NippoSokoKyori, 
                    global::System.Nullable<double> Original_NippoKyuyu, 
                    string Original_NippoSharyoTenkenKiroku, 
                    global::System.Nullable<int> Original_NippoJitchichosaKensu, 
                    global::System.Nullable<int> Original_NippoChokageninchosaKensu, 
                    global::System.Nullable<int> Original_NippoCrosscheckKensu, 
                    string Original_NippoHokokujiko, 
                    string Original_NippoShijinaiyo, 
                    string Original_NippoKanryoFlg, 
                    string Original_NippoFukukachoCheckFlg, 
                    string Original_NippoKachoCheckFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((Original_NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("Original_NippoKensaDt");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NippoKensaDt));
            }
            if ((Original_NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("Original_NippoKensainCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NippoKensainCd));
            }
            if ((Original_NippoSokoKyori.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_NippoSokoKyori.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoKyuyu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_NippoKyuyu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoSharyoTenkenKiroku == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_NippoSharyoTenkenKiroku));
            }
            if ((Original_NippoJitchichosaKensu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_NippoJitchichosaKensu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoChokageninchosaKensu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_NippoChokageninchosaKensu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoCrosscheckKensu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_NippoCrosscheckKensu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoHokokujiko == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_NippoHokokujiko));
            }
            if ((Original_NippoShijinaiyo == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_NippoShijinaiyo));
            }
            if ((Original_NippoKanryoFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_NippoKanryoFlg));
            }
            if ((Original_NippoFukukachoCheckFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_NippoFukukachoCheckFlg));
            }
            if ((Original_NippoKachoCheckFlg == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_NippoKachoCheckFlg));
            }
            this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NippoKensaDt, 
                    string NippoKensainCd, 
                    global::System.Nullable<double> NippoSokoKyori, 
                    global::System.Nullable<double> NippoKyuyu, 
                    string NippoSharyoTenkenKiroku, 
                    global::System.Nullable<int> NippoJitchichosaKensu, 
                    global::System.Nullable<int> NippoChokageninchosaKensu, 
                    global::System.Nullable<int> NippoCrosscheckKensu, 
                    string NippoHokokujiko, 
                    string NippoShijinaiyo, 
                    string NippoKanryoFlg, 
                    string NippoFukukachoCheckFlg, 
                    string NippoKachoCheckFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm) {
            if ((NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("NippoKensaDt");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NippoKensaDt));
            }
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NippoKensainCd));
            }
            if ((NippoSokoKyori.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(NippoSokoKyori.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NippoKyuyu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(NippoKyuyu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NippoSharyoTenkenKiroku == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NippoSharyoTenkenKiroku));
            }
            if ((NippoJitchichosaKensu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(NippoJitchichosaKensu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NippoChokageninchosaKensu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(NippoChokageninchosaKensu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NippoCrosscheckKensu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(NippoCrosscheckKensu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NippoHokokujiko == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NippoHokokujiko));
            }
            if ((NippoShijinaiyo == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(NippoShijinaiyo));
            }
            if ((NippoKanryoFlg == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(NippoKanryoFlg));
            }
            if ((NippoFukukachoCheckFlg == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(NippoFukukachoCheckFlg));
            }
            if ((NippoKachoCheckFlg == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(NippoKachoCheckFlg));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(InsertTarm));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NippoKensaDt, 
                    string NippoKensainCd, 
                    global::System.Nullable<double> NippoSokoKyori, 
                    global::System.Nullable<double> NippoKyuyu, 
                    string NippoSharyoTenkenKiroku, 
                    global::System.Nullable<int> NippoJitchichosaKensu, 
                    global::System.Nullable<int> NippoChokageninchosaKensu, 
                    global::System.Nullable<int> NippoCrosscheckKensu, 
                    string NippoHokokujiko, 
                    string NippoShijinaiyo, 
                    string NippoKanryoFlg, 
                    string NippoFukukachoCheckFlg, 
                    string NippoKachoCheckFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_NippoKensaDt, 
                    string Original_NippoKensainCd, 
                    global::System.Nullable<double> Original_NippoSokoKyori, 
                    global::System.Nullable<double> Original_NippoKyuyu, 
                    string Original_NippoSharyoTenkenKiroku, 
                    global::System.Nullable<int> Original_NippoJitchichosaKensu, 
                    global::System.Nullable<int> Original_NippoChokageninchosaKensu, 
                    global::System.Nullable<int> Original_NippoCrosscheckKensu, 
                    string Original_NippoHokokujiko, 
                    string Original_NippoShijinaiyo, 
                    string Original_NippoKanryoFlg, 
                    string Original_NippoFukukachoCheckFlg, 
                    string Original_NippoKachoCheckFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("NippoKensaDt");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NippoKensaDt));
            }
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NippoKensainCd));
            }
            if ((NippoSokoKyori.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(NippoSokoKyori.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NippoKyuyu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(NippoKyuyu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NippoSharyoTenkenKiroku == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NippoSharyoTenkenKiroku));
            }
            if ((NippoJitchichosaKensu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(NippoJitchichosaKensu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NippoChokageninchosaKensu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(NippoChokageninchosaKensu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NippoCrosscheckKensu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(NippoCrosscheckKensu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NippoHokokujiko == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NippoHokokujiko));
            }
            if ((NippoShijinaiyo == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(NippoShijinaiyo));
            }
            if ((NippoKanryoFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(NippoKanryoFlg));
            }
            if ((NippoFukukachoCheckFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(NippoFukukachoCheckFlg));
            }
            if ((NippoKachoCheckFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(NippoKachoCheckFlg));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(UpdateTarm));
            }
            if ((Original_NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("Original_NippoKensaDt");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_NippoKensaDt));
            }
            if ((Original_NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("Original_NippoKensainCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_NippoKensainCd));
            }
            if ((Original_NippoSokoKyori.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_NippoSokoKyori.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoKyuyu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_NippoKyuyu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoSharyoTenkenKiroku == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_NippoSharyoTenkenKiroku));
            }
            if ((Original_NippoJitchichosaKensu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_NippoJitchichosaKensu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoChokageninchosaKensu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_NippoChokageninchosaKensu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoCrosscheckKensu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_NippoCrosscheckKensu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_NippoHokokujiko == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_NippoHokokujiko));
            }
            if ((Original_NippoShijinaiyo == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_NippoShijinaiyo));
            }
            if ((Original_NippoKanryoFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_NippoKanryoFlg));
            }
            if ((Original_NippoFukukachoCheckFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_NippoFukukachoCheckFlg));
            }
            if ((Original_NippoKachoCheckFlg == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_NippoKachoCheckFlg));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> NippoSokoKyori, 
                    global::System.Nullable<double> NippoKyuyu, 
                    string NippoSharyoTenkenKiroku, 
                    global::System.Nullable<int> NippoJitchichosaKensu, 
                    global::System.Nullable<int> NippoChokageninchosaKensu, 
                    global::System.Nullable<int> NippoCrosscheckKensu, 
                    string NippoHokokujiko, 
                    string NippoShijinaiyo, 
                    string NippoKanryoFlg, 
                    string NippoFukukachoCheckFlg, 
                    string NippoKachoCheckFlg, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_NippoKensaDt, 
                    string Original_NippoKensainCd, 
                    global::System.Nullable<double> Original_NippoSokoKyori, 
                    global::System.Nullable<double> Original_NippoKyuyu, 
                    string Original_NippoSharyoTenkenKiroku, 
                    global::System.Nullable<int> Original_NippoJitchichosaKensu, 
                    global::System.Nullable<int> Original_NippoChokageninchosaKensu, 
                    global::System.Nullable<int> Original_NippoCrosscheckKensu, 
                    string Original_NippoHokokujiko, 
                    string Original_NippoShijinaiyo, 
                    string Original_NippoKanryoFlg, 
                    string Original_NippoFukukachoCheckFlg, 
                    string Original_NippoKachoCheckFlg, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            return this.Update(Original_NippoKensaDt, Original_NippoKensainCd, NippoSokoKyori, NippoKyuyu, NippoSharyoTenkenKiroku, NippoJitchichosaKensu, NippoChokageninchosaKensu, NippoCrosscheckKensu, NippoHokokujiko, NippoShijinaiyo, NippoKanryoFlg, NippoFukukachoCheckFlg, NippoKachoCheckFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, Original_NippoKensaDt, Original_NippoKensainCd, Original_NippoSokoKyori, Original_NippoKyuyu, Original_NippoSharyoTenkenKiroku, Original_NippoJitchichosaKensu, Original_NippoChokageninchosaKensu, Original_NippoCrosscheckKensu, Original_NippoHokokujiko, Original_NippoShijinaiyo, Original_NippoKanryoFlg, Original_NippoFukukachoCheckFlg, Original_NippoKachoCheckFlg, Original_InsertDt, Original_InsertUser, Original_InsertTarm, Original_UpdateDt, Original_UpdateUser, Original_UpdateTarm);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteByKey(string NippoKensaDt, string NippoKensainCd) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((NippoKensaDt == null)) {
                throw new global::System.ArgumentNullException("NippoKensaDt");
            }
            else {
                command.Parameters[0].Value = ((string)(NippoKensaDt));
            }
            if ((NippoKensainCd == null)) {
                throw new global::System.ArgumentNullException("NippoKensainCd");
            }
            else {
                command.Parameters[1].Value = ((string)(NippoKensainCd));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DailyIncompleteCountTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DailyIncompleteCountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DailyIncompleteCount";
            tableMapping.ColumnMappings.Add("DailyIncompleteCount", "DailyIncompleteCount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT                      COUNT(*) AS DailyIncompleteCount
FROM                         KensaIraiTbl 
--INNER JOIN
--                                      NippoDtlTbl ON NippoDtlTbl.NippoDtlKensaSyubetsu = KensaIraiTbl.KensaIraiHoteiKbn --AND 
--                                      NippoDtlTbl.NippoDtlKensaIraiHokenjoCd = KensaIraiTbl.KensaIraiHokenjoCd AND 
--                                      NippoDtlTbl.NippoDtlKensaIraiNendo = KensaIraiTbl.KensaIraiNendo AND 
--                                      NippoDtlTbl.NippoDtlKensaIraiRenban = KensaIraiTbl.KensaIraiRenban INNER JOIN
--                                      NippoHdrTbl ON NippoHdrTbl.NippoKensaDt = NippoDtlTbl.NippoDtlKensaDt AND --NippoHdrTbl.NippoKensainCd = NippoDtlTbl.NippoDtlKensainCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NippoHdrTblDataSet.DailyIncompleteCountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NippoHdrTblDataSet.DailyIncompleteCountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NippoHdrTblDataSet.DailyIncompleteCountDataTable dataTable = new NippoHdrTblDataSet.DailyIncompleteCountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KensaNippoListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public KensaNippoListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KensaNippoList";
            tableMapping.ColumnMappings.Add("NippoKensaDt", "NippoKensaDt");
            tableMapping.ColumnMappings.Add("NippoKensainCd", "NippoKensainCd");
            tableMapping.ColumnMappings.Add("NippoSokoKyori", "NippoSokoKyori");
            tableMapping.ColumnMappings.Add("NippoKyuyu", "NippoKyuyu");
            tableMapping.ColumnMappings.Add("NippoSharyoTenkenKiroku", "NippoSharyoTenkenKiroku");
            tableMapping.ColumnMappings.Add("NippoJitchichosaKensu", "NippoJitchichosaKensu");
            tableMapping.ColumnMappings.Add("NippoChokageninchosaKensu", "NippoChokageninchosaKensu");
            tableMapping.ColumnMappings.Add("NippoCrosscheckKensu", "NippoCrosscheckKensu");
            tableMapping.ColumnMappings.Add("NippoHokokujiko", "NippoHokokujiko");
            tableMapping.ColumnMappings.Add("NippoShijinaiyo", "NippoShijinaiyo");
            tableMapping.ColumnMappings.Add("NippoKanryoFlg", "NippoKanryoFlg");
            tableMapping.ColumnMappings.Add("kensaKanryoCol", "kensaKanryoCol");
            tableMapping.ColumnMappings.Add("NippoFukukachoCheckFlg", "NippoFukukachoCheckFlg");
            tableMapping.ColumnMappings.Add("fukuKachoKakuninCol", "fukuKachoKakuninCol");
            tableMapping.ColumnMappings.Add("NippoKachoCheckFlg", "NippoKachoCheckFlg");
            tableMapping.ColumnMappings.Add("kachoKakuninCol", "kachoKakuninCol");
            tableMapping.ColumnMappings.Add("ShokuinNm", "ShokuinNm");
            tableMapping.ColumnMappings.Add("RowNumber", "RowNumber");
            tableMapping.ColumnMappings.Add("kensaDtCol", "kensaDtCol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 
'' AS RowNumber,
NippoHdrTbl.NippoKensaDt,
'EE/MM/DD' AS kensaDtCol,
NippoHdrTbl.NippoKensainCd,
NippoHdrTbl.NippoSokoKyori,
NippoHdrTbl.NippoKyuyu,
NippoHdrTbl.NippoSharyoTenkenKiroku,
NippoHdrTbl.NippoJitchichosaKensu,
NippoHdrTbl.NippoChokageninchosaKensu,
NippoHdrTbl.NippoCrosscheckKensu,
NippoHdrTbl.NippoHokokujiko,
NippoHdrTbl.NippoShijinaiyo,
NippoHdrTbl.NippoKanryoFlg,
CASE NippoHdrTbl.NippoKanryoFlg WHEN '1' THEN '済' ELSE '' END AS kensaKanryoCol,
NippoHdrTbl.NippoFukukachoCheckFlg,
CASE NippoHdrTbl.NippoFukukachoCheckFlg WHEN '1' THEN '済' ELSE '' END AS fukuKachoKakuninCol,
NippoHdrTbl.NippoKachoCheckFlg,
CASE NippoHdrTbl.NippoKachoCheckFlg WHEN '1' THEN '済' ELSE '' END AS kachoKakuninCol,

ShokuinMst.ShokuinNm

FROM NippoHdrTbl
INNER JOIN ShokuinMst
ON ShokuinMst.ShokuinCd = NippoHdrTbl.NippoKensainCd
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NippoHdrTblDataSet.KensaNippoListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NippoHdrTblDataSet.KensaNippoListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NippoHdrTblDataSet.KensaNippoListDataTable dataTable = new NippoHdrTblDataSet.KensaNippoListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private NippoHdrTblTableAdapter _nippoHdrTblTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NippoHdrTblTableAdapter NippoHdrTblTableAdapter {
            get {
                return this._nippoHdrTblTableAdapter;
            }
            set {
                this._nippoHdrTblTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._nippoHdrTblTableAdapter != null) 
                            && (this._nippoHdrTblTableAdapter.Connection != null))) {
                    return this._nippoHdrTblTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._nippoHdrTblTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(NippoHdrTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._nippoHdrTblTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NippoHdrTbl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nippoHdrTblTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(NippoHdrTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._nippoHdrTblTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NippoHdrTbl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nippoHdrTblTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(NippoHdrTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._nippoHdrTblTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NippoHdrTbl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nippoHdrTblTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(NippoHdrTblDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._nippoHdrTblTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nippoHdrTblTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._nippoHdrTblTableAdapter != null)) {
                    revertConnections.Add(this._nippoHdrTblTableAdapter, this._nippoHdrTblTableAdapter.Connection);
                    this._nippoHdrTblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._nippoHdrTblTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._nippoHdrTblTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nippoHdrTblTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nippoHdrTblTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._nippoHdrTblTableAdapter != null)) {
                    this._nippoHdrTblTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._nippoHdrTblTableAdapter]));
                    this._nippoHdrTblTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591