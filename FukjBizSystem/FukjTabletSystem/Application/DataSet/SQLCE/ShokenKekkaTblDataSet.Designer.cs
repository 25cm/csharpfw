//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34014
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjTabletSystem.Application.DataSet.SQLCE {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ShokenKekkaTblDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ShokenKekkaTblDataSet : global::System.Data.DataSet {
        
        private ShokenKekkaTblDataTable tableShokenKekkaTbl;
        
        private ShokenKekkaListDataTable tableShokenKekkaList;
        
        private PrintShokenKekkaListDataTable tablePrintShokenKekkaList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaTblDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ShokenKekkaTblDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ShokenKekkaTbl"] != null)) {
                    base.Tables.Add(new ShokenKekkaTblDataTable(ds.Tables["ShokenKekkaTbl"]));
                }
                if ((ds.Tables["ShokenKekkaList"] != null)) {
                    base.Tables.Add(new ShokenKekkaListDataTable(ds.Tables["ShokenKekkaList"]));
                }
                if ((ds.Tables["PrintShokenKekkaList"] != null)) {
                    base.Tables.Add(new PrintShokenKekkaListDataTable(ds.Tables["PrintShokenKekkaList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokenKekkaTblDataTable ShokenKekkaTbl {
            get {
                return this.tableShokenKekkaTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokenKekkaListDataTable ShokenKekkaList {
            get {
                return this.tableShokenKekkaList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrintShokenKekkaListDataTable PrintShokenKekkaList {
            get {
                return this.tablePrintShokenKekkaList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ShokenKekkaTblDataSet cln = ((ShokenKekkaTblDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ShokenKekkaTbl"] != null)) {
                    base.Tables.Add(new ShokenKekkaTblDataTable(ds.Tables["ShokenKekkaTbl"]));
                }
                if ((ds.Tables["ShokenKekkaList"] != null)) {
                    base.Tables.Add(new ShokenKekkaListDataTable(ds.Tables["ShokenKekkaList"]));
                }
                if ((ds.Tables["PrintShokenKekkaList"] != null)) {
                    base.Tables.Add(new PrintShokenKekkaListDataTable(ds.Tables["PrintShokenKekkaList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableShokenKekkaTbl = ((ShokenKekkaTblDataTable)(base.Tables["ShokenKekkaTbl"]));
            if ((initTable == true)) {
                if ((this.tableShokenKekkaTbl != null)) {
                    this.tableShokenKekkaTbl.InitVars();
                }
            }
            this.tableShokenKekkaList = ((ShokenKekkaListDataTable)(base.Tables["ShokenKekkaList"]));
            if ((initTable == true)) {
                if ((this.tableShokenKekkaList != null)) {
                    this.tableShokenKekkaList.InitVars();
                }
            }
            this.tablePrintShokenKekkaList = ((PrintShokenKekkaListDataTable)(base.Tables["PrintShokenKekkaList"]));
            if ((initTable == true)) {
                if ((this.tablePrintShokenKekkaList != null)) {
                    this.tablePrintShokenKekkaList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ShokenKekkaTblDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ShokenKekkaTblDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableShokenKekkaTbl = new ShokenKekkaTblDataTable();
            base.Tables.Add(this.tableShokenKekkaTbl);
            this.tableShokenKekkaList = new ShokenKekkaListDataTable();
            base.Tables.Add(this.tableShokenKekkaList);
            this.tablePrintShokenKekkaList = new PrintShokenKekkaListDataTable();
            base.Tables.Add(this.tablePrintShokenKekkaList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokenKekkaTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokenKekkaList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePrintShokenKekkaList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokenKekkaTblRowChangeEventHandler(object sender, ShokenKekkaTblRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokenKekkaListRowChangeEventHandler(object sender, ShokenKekkaListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PrintShokenKekkaListRowChangeEventHandler(object sender, PrintShokenKekkaListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokenKekkaTblDataTable : global::System.Data.TypedTableBase<ShokenKekkaTblRow> {
            
            private global::System.Data.DataColumn columnKensaIraiShokanIraiHoteiKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiHokenjoCd;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiNendo;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenRenban;
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenHyojiichi;
            
            private global::System.Data.DataColumn columnShokenTegaki;
            
            private global::System.Data.DataColumn columnShokenCheckKomoku;
            
            private global::System.Data.DataColumn columnShokenCheckHantei;
            
            private global::System.Data.DataColumn columnShokenShitekiKashoNo;
            
            private global::System.Data.DataColumn columnShokenSetchishaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenSeisoGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenKojiGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenMakerRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHokenjoRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuKeiyakuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenTenkenKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenSeisouKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnTaniSochiNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblDataTable() {
                this.TableName = "ShokenKekkaTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokenKekkaTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokanIraiHoteiKbnColumn {
                get {
                    return this.columnKensaIraiShokanIraiHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiHokenjoCdColumn {
                get {
                    return this.columnKensaIraiShokenIraiHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiNendoColumn {
                get {
                    return this.columnKensaIraiShokenIraiNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiRenbanColumn {
                get {
                    return this.columnKensaIraiShokenIraiRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenRenbanColumn {
                get {
                    return this.columnKensaIraiShokenRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyojiichiColumn {
                get {
                    return this.columnShokenHyojiichi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTegakiColumn {
                get {
                    return this.columnShokenTegaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckKomokuColumn {
                get {
                    return this.columnShokenCheckKomoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckHanteiColumn {
                get {
                    return this.columnShokenCheckHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenShitekiKashoNoColumn {
                get {
                    return this.columnShokenShitekiKashoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaRenrakuFlgColumn {
                get {
                    return this.columnShokenSetchishaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenHoshuGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisoGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenSeisoGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKojiGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenKojiGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerRenrakuFlgColumn {
                get {
                    return this.columnShokenMakerRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHokenjoRenrakuFlgColumn {
                get {
                    return this.columnShokenHokenjoRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuKeiyakuKakuninFlgColumn {
                get {
                    return this.columnShokenHoshuKeiyakuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTenkenKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenTenkenKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenSeisouKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaniSochiNmColumn {
                get {
                    return this.columnTaniSochiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow this[int index] {
                get {
                    return ((ShokenKekkaTblRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaTblRowChangeEventHandler ShokenKekkaTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokenKekkaTblRow(ShokenKekkaTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow AddShokenKekkaTblRow(
                        string KensaIraiShokanIraiHoteiKbn, 
                        string KensaIraiShokenIraiHokenjoCd, 
                        string KensaIraiShokenIraiNendo, 
                        string KensaIraiShokenIraiRenban, 
                        string KensaIraiShokenRenban, 
                        string ShokenKbn, 
                        string ShokenCd, 
                        int ShokenHyojiichi, 
                        string ShokenTegaki, 
                        string ShokenCheckKomoku, 
                        string ShokenCheckHantei, 
                        string ShokenShitekiKashoNo, 
                        string ShokenSetchishaRenrakuFlg, 
                        string ShokenHoshuGyoshaRenrakuFlg, 
                        string ShokenSeisoGyoshaRenrakuFlg, 
                        string ShokenKojiGyoshaRenrakuFlg, 
                        string ShokenMakerRenrakuFlg, 
                        string ShokenHokenjoRenrakuFlg, 
                        string ShokenHoshuKeiyakuKakuninFlg, 
                        string ShokenTenkenKaisuuKakuninFlg, 
                        string ShokenSeisouKaisuuKakuninFlg, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        string TaniSochiNm) {
                ShokenKekkaTblRow rowShokenKekkaTblRow = ((ShokenKekkaTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KensaIraiShokanIraiHoteiKbn,
                        KensaIraiShokenIraiHokenjoCd,
                        KensaIraiShokenIraiNendo,
                        KensaIraiShokenIraiRenban,
                        KensaIraiShokenRenban,
                        ShokenKbn,
                        ShokenCd,
                        ShokenHyojiichi,
                        ShokenTegaki,
                        ShokenCheckKomoku,
                        ShokenCheckHantei,
                        ShokenShitekiKashoNo,
                        ShokenSetchishaRenrakuFlg,
                        ShokenHoshuGyoshaRenrakuFlg,
                        ShokenSeisoGyoshaRenrakuFlg,
                        ShokenKojiGyoshaRenrakuFlg,
                        ShokenMakerRenrakuFlg,
                        ShokenHokenjoRenrakuFlg,
                        ShokenHoshuKeiyakuKakuninFlg,
                        ShokenTenkenKaisuuKakuninFlg,
                        ShokenSeisouKaisuuKakuninFlg,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        TaniSochiNm};
                rowShokenKekkaTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokenKekkaTblRow);
                return rowShokenKekkaTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow FindByKensaIraiShokanIraiHoteiKbnKensaIraiShokenIraiHokenjoCdKensaIraiShokenIraiNendoKensaIraiShokenIraiRenbanKensaIraiShokenRenban(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, string KensaIraiShokenRenban) {
                return ((ShokenKekkaTblRow)(this.Rows.Find(new object[] {
                            KensaIraiShokanIraiHoteiKbn,
                            KensaIraiShokenIraiHokenjoCd,
                            KensaIraiShokenIraiNendo,
                            KensaIraiShokenIraiRenban,
                            KensaIraiShokenRenban})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokenKekkaTblDataTable cln = ((ShokenKekkaTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokenKekkaTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKensaIraiShokanIraiHoteiKbn = base.Columns["KensaIraiShokanIraiHoteiKbn"];
                this.columnKensaIraiShokenIraiHokenjoCd = base.Columns["KensaIraiShokenIraiHokenjoCd"];
                this.columnKensaIraiShokenIraiNendo = base.Columns["KensaIraiShokenIraiNendo"];
                this.columnKensaIraiShokenIraiRenban = base.Columns["KensaIraiShokenIraiRenban"];
                this.columnKensaIraiShokenRenban = base.Columns["KensaIraiShokenRenban"];
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenHyojiichi = base.Columns["ShokenHyojiichi"];
                this.columnShokenTegaki = base.Columns["ShokenTegaki"];
                this.columnShokenCheckKomoku = base.Columns["ShokenCheckKomoku"];
                this.columnShokenCheckHantei = base.Columns["ShokenCheckHantei"];
                this.columnShokenShitekiKashoNo = base.Columns["ShokenShitekiKashoNo"];
                this.columnShokenSetchishaRenrakuFlg = base.Columns["ShokenSetchishaRenrakuFlg"];
                this.columnShokenHoshuGyoshaRenrakuFlg = base.Columns["ShokenHoshuGyoshaRenrakuFlg"];
                this.columnShokenSeisoGyoshaRenrakuFlg = base.Columns["ShokenSeisoGyoshaRenrakuFlg"];
                this.columnShokenKojiGyoshaRenrakuFlg = base.Columns["ShokenKojiGyoshaRenrakuFlg"];
                this.columnShokenMakerRenrakuFlg = base.Columns["ShokenMakerRenrakuFlg"];
                this.columnShokenHokenjoRenrakuFlg = base.Columns["ShokenHokenjoRenrakuFlg"];
                this.columnShokenHoshuKeiyakuKakuninFlg = base.Columns["ShokenHoshuKeiyakuKakuninFlg"];
                this.columnShokenTenkenKaisuuKakuninFlg = base.Columns["ShokenTenkenKaisuuKakuninFlg"];
                this.columnShokenSeisouKaisuuKakuninFlg = base.Columns["ShokenSeisouKaisuuKakuninFlg"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnTaniSochiNm = base.Columns["TaniSochiNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKensaIraiShokanIraiHoteiKbn = new global::System.Data.DataColumn("KensaIraiShokanIraiHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokanIraiHoteiKbn);
                this.columnKensaIraiShokenIraiHokenjoCd = new global::System.Data.DataColumn("KensaIraiShokenIraiHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiHokenjoCd);
                this.columnKensaIraiShokenIraiNendo = new global::System.Data.DataColumn("KensaIraiShokenIraiNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiNendo);
                this.columnKensaIraiShokenIraiRenban = new global::System.Data.DataColumn("KensaIraiShokenIraiRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiRenban);
                this.columnKensaIraiShokenRenban = new global::System.Data.DataColumn("KensaIraiShokenRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenRenban);
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenHyojiichi = new global::System.Data.DataColumn("ShokenHyojiichi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyojiichi);
                this.columnShokenTegaki = new global::System.Data.DataColumn("ShokenTegaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTegaki);
                this.columnShokenCheckKomoku = new global::System.Data.DataColumn("ShokenCheckKomoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckKomoku);
                this.columnShokenCheckHantei = new global::System.Data.DataColumn("ShokenCheckHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckHantei);
                this.columnShokenShitekiKashoNo = new global::System.Data.DataColumn("ShokenShitekiKashoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenShitekiKashoNo);
                this.columnShokenSetchishaRenrakuFlg = new global::System.Data.DataColumn("ShokenSetchishaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaRenrakuFlg);
                this.columnShokenHoshuGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenHoshuGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGyoshaRenrakuFlg);
                this.columnShokenSeisoGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenSeisoGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisoGyoshaRenrakuFlg);
                this.columnShokenKojiGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenKojiGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKojiGyoshaRenrakuFlg);
                this.columnShokenMakerRenrakuFlg = new global::System.Data.DataColumn("ShokenMakerRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerRenrakuFlg);
                this.columnShokenHokenjoRenrakuFlg = new global::System.Data.DataColumn("ShokenHokenjoRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHokenjoRenrakuFlg);
                this.columnShokenHoshuKeiyakuKakuninFlg = new global::System.Data.DataColumn("ShokenHoshuKeiyakuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuKeiyakuKakuninFlg);
                this.columnShokenTenkenKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenTenkenKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTenkenKaisuuKakuninFlg);
                this.columnShokenSeisouKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenSeisouKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouKaisuuKakuninFlg);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnTaniSochiNm = new global::System.Data.DataColumn("TaniSochiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaniSochiNm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKensaIraiShokanIraiHoteiKbn,
                                this.columnKensaIraiShokenIraiHokenjoCd,
                                this.columnKensaIraiShokenIraiNendo,
                                this.columnKensaIraiShokenIraiRenban,
                                this.columnKensaIraiShokenRenban}, true));
                this.columnKensaIraiShokanIraiHoteiKbn.AllowDBNull = false;
                this.columnKensaIraiShokanIraiHoteiKbn.MaxLength = 1;
                this.columnKensaIraiShokenIraiHokenjoCd.AllowDBNull = false;
                this.columnKensaIraiShokenIraiHokenjoCd.MaxLength = 2;
                this.columnKensaIraiShokenIraiNendo.AllowDBNull = false;
                this.columnKensaIraiShokenIraiNendo.MaxLength = 4;
                this.columnKensaIraiShokenIraiRenban.AllowDBNull = false;
                this.columnKensaIraiShokenIraiRenban.MaxLength = 6;
                this.columnKensaIraiShokenRenban.AllowDBNull = false;
                this.columnKensaIraiShokenRenban.MaxLength = 2;
                this.columnShokenKbn.AllowDBNull = false;
                this.columnShokenKbn.MaxLength = 3;
                this.columnShokenCd.AllowDBNull = false;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenTegaki.MaxLength = 160;
                this.columnShokenCheckKomoku.MaxLength = 3;
                this.columnShokenCheckHantei.MaxLength = 1;
                this.columnShokenShitekiKashoNo.MaxLength = 2;
                this.columnShokenSetchishaRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenSeisoGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenKojiGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenMakerRenrakuFlg.MaxLength = 1;
                this.columnShokenHokenjoRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuKeiyakuKakuninFlg.MaxLength = 1;
                this.columnShokenTenkenKaisuuKakuninFlg.MaxLength = 1;
                this.columnShokenSeisouKaisuuKakuninFlg.MaxLength = 1;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnTaniSochiNm.MaxLength = 60;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow NewShokenKekkaTblRow() {
                return ((ShokenKekkaTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokenKekkaTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokenKekkaTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokenKekkaTblRowChanged != null)) {
                    this.ShokenKekkaTblRowChanged(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokenKekkaTblRowChanging != null)) {
                    this.ShokenKekkaTblRowChanging(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokenKekkaTblRowDeleted != null)) {
                    this.ShokenKekkaTblRowDeleted(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokenKekkaTblRowDeleting != null)) {
                    this.ShokenKekkaTblRowDeleting(this, new ShokenKekkaTblRowChangeEvent(((ShokenKekkaTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokenKekkaTblRow(ShokenKekkaTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokenKekkaTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokenKekkaListDataTable : global::System.Data.TypedTableBase<ShokenKekkaListRow> {
            
            private global::System.Data.DataColumn columnKensaIraiShokanIraiHoteiKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiHokenjoCd;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiNendo;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenRenban;
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenHyojiichi;
            
            private global::System.Data.DataColumn columnShokenTegaki;
            
            private global::System.Data.DataColumn columnShokenCheckKomoku;
            
            private global::System.Data.DataColumn columnShokenCheckHantei;
            
            private global::System.Data.DataColumn columnShokenShitekiKashoNo;
            
            private global::System.Data.DataColumn columnShokenSetchishaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenSeisoGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenKojiGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenMakerRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHokenjoRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuKeiyakuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenTenkenKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenSeisouKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnShokenWd;
            
            private global::System.Data.DataColumn columnTaniSochiNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListDataTable() {
                this.TableName = "ShokenKekkaList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokenKekkaListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokanIraiHoteiKbnColumn {
                get {
                    return this.columnKensaIraiShokanIraiHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiHokenjoCdColumn {
                get {
                    return this.columnKensaIraiShokenIraiHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiNendoColumn {
                get {
                    return this.columnKensaIraiShokenIraiNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiRenbanColumn {
                get {
                    return this.columnKensaIraiShokenIraiRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenRenbanColumn {
                get {
                    return this.columnKensaIraiShokenRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyojiichiColumn {
                get {
                    return this.columnShokenHyojiichi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTegakiColumn {
                get {
                    return this.columnShokenTegaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckKomokuColumn {
                get {
                    return this.columnShokenCheckKomoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckHanteiColumn {
                get {
                    return this.columnShokenCheckHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenShitekiKashoNoColumn {
                get {
                    return this.columnShokenShitekiKashoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaRenrakuFlgColumn {
                get {
                    return this.columnShokenSetchishaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenHoshuGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisoGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenSeisoGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKojiGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenKojiGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerRenrakuFlgColumn {
                get {
                    return this.columnShokenMakerRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHokenjoRenrakuFlgColumn {
                get {
                    return this.columnShokenHokenjoRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuKeiyakuKakuninFlgColumn {
                get {
                    return this.columnShokenHoshuKeiyakuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTenkenKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenTenkenKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenSeisouKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenWdColumn {
                get {
                    return this.columnShokenWd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaniSochiNmColumn {
                get {
                    return this.columnTaniSochiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow this[int index] {
                get {
                    return ((ShokenKekkaListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenKekkaListRowChangeEventHandler ShokenKekkaListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokenKekkaListRow(ShokenKekkaListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow AddShokenKekkaListRow(
                        string KensaIraiShokanIraiHoteiKbn, 
                        string KensaIraiShokenIraiHokenjoCd, 
                        string KensaIraiShokenIraiNendo, 
                        string KensaIraiShokenIraiRenban, 
                        string KensaIraiShokenRenban, 
                        string ShokenKbn, 
                        string ShokenCd, 
                        int ShokenHyojiichi, 
                        string ShokenTegaki, 
                        string ShokenCheckKomoku, 
                        string ShokenCheckHantei, 
                        string ShokenShitekiKashoNo, 
                        string ShokenSetchishaRenrakuFlg, 
                        string ShokenHoshuGyoshaRenrakuFlg, 
                        string ShokenSeisoGyoshaRenrakuFlg, 
                        string ShokenKojiGyoshaRenrakuFlg, 
                        string ShokenMakerRenrakuFlg, 
                        string ShokenHokenjoRenrakuFlg, 
                        string ShokenHoshuKeiyakuKakuninFlg, 
                        string ShokenTenkenKaisuuKakuninFlg, 
                        string ShokenSeisouKaisuuKakuninFlg, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        string ShokenWd, 
                        string TaniSochiNm) {
                ShokenKekkaListRow rowShokenKekkaListRow = ((ShokenKekkaListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KensaIraiShokanIraiHoteiKbn,
                        KensaIraiShokenIraiHokenjoCd,
                        KensaIraiShokenIraiNendo,
                        KensaIraiShokenIraiRenban,
                        KensaIraiShokenRenban,
                        ShokenKbn,
                        ShokenCd,
                        ShokenHyojiichi,
                        ShokenTegaki,
                        ShokenCheckKomoku,
                        ShokenCheckHantei,
                        ShokenShitekiKashoNo,
                        ShokenSetchishaRenrakuFlg,
                        ShokenHoshuGyoshaRenrakuFlg,
                        ShokenSeisoGyoshaRenrakuFlg,
                        ShokenKojiGyoshaRenrakuFlg,
                        ShokenMakerRenrakuFlg,
                        ShokenHokenjoRenrakuFlg,
                        ShokenHoshuKeiyakuKakuninFlg,
                        ShokenTenkenKaisuuKakuninFlg,
                        ShokenSeisouKaisuuKakuninFlg,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ShokenWd,
                        TaniSochiNm};
                rowShokenKekkaListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokenKekkaListRow);
                return rowShokenKekkaListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokenKekkaListDataTable cln = ((ShokenKekkaListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokenKekkaListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKensaIraiShokanIraiHoteiKbn = base.Columns["KensaIraiShokanIraiHoteiKbn"];
                this.columnKensaIraiShokenIraiHokenjoCd = base.Columns["KensaIraiShokenIraiHokenjoCd"];
                this.columnKensaIraiShokenIraiNendo = base.Columns["KensaIraiShokenIraiNendo"];
                this.columnKensaIraiShokenIraiRenban = base.Columns["KensaIraiShokenIraiRenban"];
                this.columnKensaIraiShokenRenban = base.Columns["KensaIraiShokenRenban"];
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenHyojiichi = base.Columns["ShokenHyojiichi"];
                this.columnShokenTegaki = base.Columns["ShokenTegaki"];
                this.columnShokenCheckKomoku = base.Columns["ShokenCheckKomoku"];
                this.columnShokenCheckHantei = base.Columns["ShokenCheckHantei"];
                this.columnShokenShitekiKashoNo = base.Columns["ShokenShitekiKashoNo"];
                this.columnShokenSetchishaRenrakuFlg = base.Columns["ShokenSetchishaRenrakuFlg"];
                this.columnShokenHoshuGyoshaRenrakuFlg = base.Columns["ShokenHoshuGyoshaRenrakuFlg"];
                this.columnShokenSeisoGyoshaRenrakuFlg = base.Columns["ShokenSeisoGyoshaRenrakuFlg"];
                this.columnShokenKojiGyoshaRenrakuFlg = base.Columns["ShokenKojiGyoshaRenrakuFlg"];
                this.columnShokenMakerRenrakuFlg = base.Columns["ShokenMakerRenrakuFlg"];
                this.columnShokenHokenjoRenrakuFlg = base.Columns["ShokenHokenjoRenrakuFlg"];
                this.columnShokenHoshuKeiyakuKakuninFlg = base.Columns["ShokenHoshuKeiyakuKakuninFlg"];
                this.columnShokenTenkenKaisuuKakuninFlg = base.Columns["ShokenTenkenKaisuuKakuninFlg"];
                this.columnShokenSeisouKaisuuKakuninFlg = base.Columns["ShokenSeisouKaisuuKakuninFlg"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnShokenWd = base.Columns["ShokenWd"];
                this.columnTaniSochiNm = base.Columns["TaniSochiNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKensaIraiShokanIraiHoteiKbn = new global::System.Data.DataColumn("KensaIraiShokanIraiHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokanIraiHoteiKbn);
                this.columnKensaIraiShokenIraiHokenjoCd = new global::System.Data.DataColumn("KensaIraiShokenIraiHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiHokenjoCd);
                this.columnKensaIraiShokenIraiNendo = new global::System.Data.DataColumn("KensaIraiShokenIraiNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiNendo);
                this.columnKensaIraiShokenIraiRenban = new global::System.Data.DataColumn("KensaIraiShokenIraiRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiRenban);
                this.columnKensaIraiShokenRenban = new global::System.Data.DataColumn("KensaIraiShokenRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenRenban);
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenHyojiichi = new global::System.Data.DataColumn("ShokenHyojiichi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyojiichi);
                this.columnShokenTegaki = new global::System.Data.DataColumn("ShokenTegaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTegaki);
                this.columnShokenCheckKomoku = new global::System.Data.DataColumn("ShokenCheckKomoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckKomoku);
                this.columnShokenCheckHantei = new global::System.Data.DataColumn("ShokenCheckHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckHantei);
                this.columnShokenShitekiKashoNo = new global::System.Data.DataColumn("ShokenShitekiKashoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenShitekiKashoNo);
                this.columnShokenSetchishaRenrakuFlg = new global::System.Data.DataColumn("ShokenSetchishaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaRenrakuFlg);
                this.columnShokenHoshuGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenHoshuGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGyoshaRenrakuFlg);
                this.columnShokenSeisoGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenSeisoGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisoGyoshaRenrakuFlg);
                this.columnShokenKojiGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenKojiGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKojiGyoshaRenrakuFlg);
                this.columnShokenMakerRenrakuFlg = new global::System.Data.DataColumn("ShokenMakerRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerRenrakuFlg);
                this.columnShokenHokenjoRenrakuFlg = new global::System.Data.DataColumn("ShokenHokenjoRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHokenjoRenrakuFlg);
                this.columnShokenHoshuKeiyakuKakuninFlg = new global::System.Data.DataColumn("ShokenHoshuKeiyakuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuKeiyakuKakuninFlg);
                this.columnShokenTenkenKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenTenkenKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTenkenKaisuuKakuninFlg);
                this.columnShokenSeisouKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenSeisouKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouKaisuuKakuninFlg);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnShokenWd = new global::System.Data.DataColumn("ShokenWd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenWd);
                this.columnTaniSochiNm = new global::System.Data.DataColumn("TaniSochiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaniSochiNm);
                this.columnKensaIraiShokanIraiHoteiKbn.ReadOnly = true;
                this.columnKensaIraiShokanIraiHoteiKbn.MaxLength = 1;
                this.columnKensaIraiShokenIraiHokenjoCd.ReadOnly = true;
                this.columnKensaIraiShokenIraiHokenjoCd.MaxLength = 2;
                this.columnKensaIraiShokenIraiNendo.ReadOnly = true;
                this.columnKensaIraiShokenIraiNendo.MaxLength = 4;
                this.columnKensaIraiShokenIraiRenban.ReadOnly = true;
                this.columnKensaIraiShokenIraiRenban.MaxLength = 6;
                this.columnKensaIraiShokenRenban.ReadOnly = true;
                this.columnKensaIraiShokenRenban.MaxLength = 2;
                this.columnShokenKbn.ReadOnly = true;
                this.columnShokenKbn.MaxLength = 3;
                this.columnShokenCd.ReadOnly = true;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenHyojiichi.ReadOnly = true;
                this.columnShokenTegaki.ReadOnly = true;
                this.columnShokenTegaki.MaxLength = 160;
                this.columnShokenCheckKomoku.ReadOnly = true;
                this.columnShokenCheckKomoku.MaxLength = 3;
                this.columnShokenCheckHantei.ReadOnly = true;
                this.columnShokenCheckHantei.MaxLength = 1;
                this.columnShokenShitekiKashoNo.ReadOnly = true;
                this.columnShokenShitekiKashoNo.MaxLength = 2;
                this.columnShokenSetchishaRenrakuFlg.ReadOnly = true;
                this.columnShokenSetchishaRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenHoshuGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenSeisoGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenSeisoGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenKojiGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenKojiGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenMakerRenrakuFlg.ReadOnly = true;
                this.columnShokenMakerRenrakuFlg.MaxLength = 1;
                this.columnShokenHokenjoRenrakuFlg.ReadOnly = true;
                this.columnShokenHokenjoRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuKeiyakuKakuninFlg.ReadOnly = true;
                this.columnShokenHoshuKeiyakuKakuninFlg.MaxLength = 1;
                this.columnShokenTenkenKaisuuKakuninFlg.ReadOnly = true;
                this.columnShokenTenkenKaisuuKakuninFlg.MaxLength = 1;
                this.columnShokenSeisouKaisuuKakuninFlg.ReadOnly = true;
                this.columnShokenSeisouKaisuuKakuninFlg.MaxLength = 1;
                this.columnInsertDt.ReadOnly = true;
                this.columnInsertUser.ReadOnly = true;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.ReadOnly = true;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.ReadOnly = true;
                this.columnUpdateUser.ReadOnly = true;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.ReadOnly = true;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnShokenWd.ReadOnly = true;
                this.columnShokenWd.MaxLength = 160;
                this.columnTaniSochiNm.ReadOnly = true;
                this.columnTaniSochiNm.MaxLength = 60;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow NewShokenKekkaListRow() {
                return ((ShokenKekkaListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokenKekkaListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokenKekkaListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokenKekkaListRowChanged != null)) {
                    this.ShokenKekkaListRowChanged(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokenKekkaListRowChanging != null)) {
                    this.ShokenKekkaListRowChanging(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokenKekkaListRowDeleted != null)) {
                    this.ShokenKekkaListRowDeleted(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokenKekkaListRowDeleting != null)) {
                    this.ShokenKekkaListRowDeleting(this, new ShokenKekkaListRowChangeEvent(((ShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokenKekkaListRow(ShokenKekkaListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokenKekkaListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrintShokenKekkaListDataTable : global::System.Data.TypedTableBase<PrintShokenKekkaListRow> {
            
            private global::System.Data.DataColumn columnKensaIraiShokanIraiHoteiKbn;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiHokenjoCd;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiNendo;
            
            private global::System.Data.DataColumn columnKensaIraiShokenIraiRenban;
            
            private global::System.Data.DataColumn columnKensaIraiShokenRenban;
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenHyojiichi;
            
            private global::System.Data.DataColumn columnShokenTegaki;
            
            private global::System.Data.DataColumn columnShokenCheckKomoku;
            
            private global::System.Data.DataColumn columnShokenCheckHantei;
            
            private global::System.Data.DataColumn columnShokenShitekiKashoNo;
            
            private global::System.Data.DataColumn columnShokenSetchishaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenSeisoGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenKojiGyoshaRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenMakerRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHokenjoRenrakuFlg;
            
            private global::System.Data.DataColumn columnShokenHoshuKeiyakuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenTenkenKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnShokenSeisouKaisuuKakuninFlg;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            private global::System.Data.DataColumn columnShokenWd;
            
            private global::System.Data.DataColumn columnTaniSochiNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrintShokenKekkaListDataTable() {
                this.TableName = "PrintShokenKekkaList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PrintShokenKekkaListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PrintShokenKekkaListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokanIraiHoteiKbnColumn {
                get {
                    return this.columnKensaIraiShokanIraiHoteiKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiHokenjoCdColumn {
                get {
                    return this.columnKensaIraiShokenIraiHokenjoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiNendoColumn {
                get {
                    return this.columnKensaIraiShokenIraiNendo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenIraiRenbanColumn {
                get {
                    return this.columnKensaIraiShokenIraiRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KensaIraiShokenRenbanColumn {
                get {
                    return this.columnKensaIraiShokenRenban;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyojiichiColumn {
                get {
                    return this.columnShokenHyojiichi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTegakiColumn {
                get {
                    return this.columnShokenTegaki;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckKomokuColumn {
                get {
                    return this.columnShokenCheckKomoku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCheckHanteiColumn {
                get {
                    return this.columnShokenCheckHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenShitekiKashoNoColumn {
                get {
                    return this.columnShokenShitekiKashoNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaRenrakuFlgColumn {
                get {
                    return this.columnShokenSetchishaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenHoshuGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisoGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenSeisoGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKojiGyoshaRenrakuFlgColumn {
                get {
                    return this.columnShokenKojiGyoshaRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerRenrakuFlgColumn {
                get {
                    return this.columnShokenMakerRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHokenjoRenrakuFlgColumn {
                get {
                    return this.columnShokenHokenjoRenrakuFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuKeiyakuKakuninFlgColumn {
                get {
                    return this.columnShokenHoshuKeiyakuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTenkenKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenTenkenKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouKaisuuKakuninFlgColumn {
                get {
                    return this.columnShokenSeisouKaisuuKakuninFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenWdColumn {
                get {
                    return this.columnShokenWd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaniSochiNmColumn {
                get {
                    return this.columnTaniSochiNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrintShokenKekkaListRow this[int index] {
                get {
                    return ((PrintShokenKekkaListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrintShokenKekkaListRowChangeEventHandler PrintShokenKekkaListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrintShokenKekkaListRowChangeEventHandler PrintShokenKekkaListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrintShokenKekkaListRowChangeEventHandler PrintShokenKekkaListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PrintShokenKekkaListRowChangeEventHandler PrintShokenKekkaListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPrintShokenKekkaListRow(PrintShokenKekkaListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrintShokenKekkaListRow AddPrintShokenKekkaListRow(
                        string KensaIraiShokanIraiHoteiKbn, 
                        string KensaIraiShokenIraiHokenjoCd, 
                        string KensaIraiShokenIraiNendo, 
                        string KensaIraiShokenIraiRenban, 
                        string KensaIraiShokenRenban, 
                        string ShokenKbn, 
                        string ShokenCd, 
                        int ShokenHyojiichi, 
                        string ShokenTegaki, 
                        string ShokenCheckKomoku, 
                        string ShokenCheckHantei, 
                        string ShokenShitekiKashoNo, 
                        string ShokenSetchishaRenrakuFlg, 
                        string ShokenHoshuGyoshaRenrakuFlg, 
                        string ShokenSeisoGyoshaRenrakuFlg, 
                        string ShokenKojiGyoshaRenrakuFlg, 
                        string ShokenMakerRenrakuFlg, 
                        string ShokenHokenjoRenrakuFlg, 
                        string ShokenHoshuKeiyakuKakuninFlg, 
                        string ShokenTenkenKaisuuKakuninFlg, 
                        string ShokenSeisouKaisuuKakuninFlg, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm, 
                        string ShokenWd, 
                        string TaniSochiNm) {
                PrintShokenKekkaListRow rowPrintShokenKekkaListRow = ((PrintShokenKekkaListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KensaIraiShokanIraiHoteiKbn,
                        KensaIraiShokenIraiHokenjoCd,
                        KensaIraiShokenIraiNendo,
                        KensaIraiShokenIraiRenban,
                        KensaIraiShokenRenban,
                        ShokenKbn,
                        ShokenCd,
                        ShokenHyojiichi,
                        ShokenTegaki,
                        ShokenCheckKomoku,
                        ShokenCheckHantei,
                        ShokenShitekiKashoNo,
                        ShokenSetchishaRenrakuFlg,
                        ShokenHoshuGyoshaRenrakuFlg,
                        ShokenSeisoGyoshaRenrakuFlg,
                        ShokenKojiGyoshaRenrakuFlg,
                        ShokenMakerRenrakuFlg,
                        ShokenHokenjoRenrakuFlg,
                        ShokenHoshuKeiyakuKakuninFlg,
                        ShokenTenkenKaisuuKakuninFlg,
                        ShokenSeisouKaisuuKakuninFlg,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm,
                        ShokenWd,
                        TaniSochiNm};
                rowPrintShokenKekkaListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrintShokenKekkaListRow);
                return rowPrintShokenKekkaListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PrintShokenKekkaListDataTable cln = ((PrintShokenKekkaListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PrintShokenKekkaListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKensaIraiShokanIraiHoteiKbn = base.Columns["KensaIraiShokanIraiHoteiKbn"];
                this.columnKensaIraiShokenIraiHokenjoCd = base.Columns["KensaIraiShokenIraiHokenjoCd"];
                this.columnKensaIraiShokenIraiNendo = base.Columns["KensaIraiShokenIraiNendo"];
                this.columnKensaIraiShokenIraiRenban = base.Columns["KensaIraiShokenIraiRenban"];
                this.columnKensaIraiShokenRenban = base.Columns["KensaIraiShokenRenban"];
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenHyojiichi = base.Columns["ShokenHyojiichi"];
                this.columnShokenTegaki = base.Columns["ShokenTegaki"];
                this.columnShokenCheckKomoku = base.Columns["ShokenCheckKomoku"];
                this.columnShokenCheckHantei = base.Columns["ShokenCheckHantei"];
                this.columnShokenShitekiKashoNo = base.Columns["ShokenShitekiKashoNo"];
                this.columnShokenSetchishaRenrakuFlg = base.Columns["ShokenSetchishaRenrakuFlg"];
                this.columnShokenHoshuGyoshaRenrakuFlg = base.Columns["ShokenHoshuGyoshaRenrakuFlg"];
                this.columnShokenSeisoGyoshaRenrakuFlg = base.Columns["ShokenSeisoGyoshaRenrakuFlg"];
                this.columnShokenKojiGyoshaRenrakuFlg = base.Columns["ShokenKojiGyoshaRenrakuFlg"];
                this.columnShokenMakerRenrakuFlg = base.Columns["ShokenMakerRenrakuFlg"];
                this.columnShokenHokenjoRenrakuFlg = base.Columns["ShokenHokenjoRenrakuFlg"];
                this.columnShokenHoshuKeiyakuKakuninFlg = base.Columns["ShokenHoshuKeiyakuKakuninFlg"];
                this.columnShokenTenkenKaisuuKakuninFlg = base.Columns["ShokenTenkenKaisuuKakuninFlg"];
                this.columnShokenSeisouKaisuuKakuninFlg = base.Columns["ShokenSeisouKaisuuKakuninFlg"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
                this.columnShokenWd = base.Columns["ShokenWd"];
                this.columnTaniSochiNm = base.Columns["TaniSochiNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKensaIraiShokanIraiHoteiKbn = new global::System.Data.DataColumn("KensaIraiShokanIraiHoteiKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokanIraiHoteiKbn);
                this.columnKensaIraiShokenIraiHokenjoCd = new global::System.Data.DataColumn("KensaIraiShokenIraiHokenjoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiHokenjoCd);
                this.columnKensaIraiShokenIraiNendo = new global::System.Data.DataColumn("KensaIraiShokenIraiNendo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiNendo);
                this.columnKensaIraiShokenIraiRenban = new global::System.Data.DataColumn("KensaIraiShokenIraiRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenIraiRenban);
                this.columnKensaIraiShokenRenban = new global::System.Data.DataColumn("KensaIraiShokenRenban", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKensaIraiShokenRenban);
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenHyojiichi = new global::System.Data.DataColumn("ShokenHyojiichi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyojiichi);
                this.columnShokenTegaki = new global::System.Data.DataColumn("ShokenTegaki", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTegaki);
                this.columnShokenCheckKomoku = new global::System.Data.DataColumn("ShokenCheckKomoku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckKomoku);
                this.columnShokenCheckHantei = new global::System.Data.DataColumn("ShokenCheckHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCheckHantei);
                this.columnShokenShitekiKashoNo = new global::System.Data.DataColumn("ShokenShitekiKashoNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenShitekiKashoNo);
                this.columnShokenSetchishaRenrakuFlg = new global::System.Data.DataColumn("ShokenSetchishaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaRenrakuFlg);
                this.columnShokenHoshuGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenHoshuGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGyoshaRenrakuFlg);
                this.columnShokenSeisoGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenSeisoGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisoGyoshaRenrakuFlg);
                this.columnShokenKojiGyoshaRenrakuFlg = new global::System.Data.DataColumn("ShokenKojiGyoshaRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKojiGyoshaRenrakuFlg);
                this.columnShokenMakerRenrakuFlg = new global::System.Data.DataColumn("ShokenMakerRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerRenrakuFlg);
                this.columnShokenHokenjoRenrakuFlg = new global::System.Data.DataColumn("ShokenHokenjoRenrakuFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHokenjoRenrakuFlg);
                this.columnShokenHoshuKeiyakuKakuninFlg = new global::System.Data.DataColumn("ShokenHoshuKeiyakuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuKeiyakuKakuninFlg);
                this.columnShokenTenkenKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenTenkenKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTenkenKaisuuKakuninFlg);
                this.columnShokenSeisouKaisuuKakuninFlg = new global::System.Data.DataColumn("ShokenSeisouKaisuuKakuninFlg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouKaisuuKakuninFlg);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.columnShokenWd = new global::System.Data.DataColumn("ShokenWd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenWd);
                this.columnTaniSochiNm = new global::System.Data.DataColumn("TaniSochiNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaniSochiNm);
                this.columnKensaIraiShokanIraiHoteiKbn.ReadOnly = true;
                this.columnKensaIraiShokanIraiHoteiKbn.MaxLength = 1;
                this.columnKensaIraiShokenIraiHokenjoCd.ReadOnly = true;
                this.columnKensaIraiShokenIraiHokenjoCd.MaxLength = 2;
                this.columnKensaIraiShokenIraiNendo.ReadOnly = true;
                this.columnKensaIraiShokenIraiNendo.MaxLength = 4;
                this.columnKensaIraiShokenIraiRenban.ReadOnly = true;
                this.columnKensaIraiShokenIraiRenban.MaxLength = 6;
                this.columnKensaIraiShokenRenban.ReadOnly = true;
                this.columnKensaIraiShokenRenban.MaxLength = 2;
                this.columnShokenKbn.ReadOnly = true;
                this.columnShokenKbn.MaxLength = 3;
                this.columnShokenCd.ReadOnly = true;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenHyojiichi.ReadOnly = true;
                this.columnShokenTegaki.ReadOnly = true;
                this.columnShokenTegaki.MaxLength = 160;
                this.columnShokenCheckKomoku.ReadOnly = true;
                this.columnShokenCheckKomoku.MaxLength = 3;
                this.columnShokenCheckHantei.ReadOnly = true;
                this.columnShokenCheckHantei.MaxLength = 1;
                this.columnShokenShitekiKashoNo.ReadOnly = true;
                this.columnShokenShitekiKashoNo.MaxLength = 2;
                this.columnShokenSetchishaRenrakuFlg.ReadOnly = true;
                this.columnShokenSetchishaRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenHoshuGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenSeisoGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenSeisoGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenKojiGyoshaRenrakuFlg.ReadOnly = true;
                this.columnShokenKojiGyoshaRenrakuFlg.MaxLength = 1;
                this.columnShokenMakerRenrakuFlg.ReadOnly = true;
                this.columnShokenMakerRenrakuFlg.MaxLength = 1;
                this.columnShokenHokenjoRenrakuFlg.ReadOnly = true;
                this.columnShokenHokenjoRenrakuFlg.MaxLength = 1;
                this.columnShokenHoshuKeiyakuKakuninFlg.ReadOnly = true;
                this.columnShokenHoshuKeiyakuKakuninFlg.MaxLength = 1;
                this.columnShokenTenkenKaisuuKakuninFlg.ReadOnly = true;
                this.columnShokenTenkenKaisuuKakuninFlg.MaxLength = 1;
                this.columnShokenSeisouKaisuuKakuninFlg.ReadOnly = true;
                this.columnShokenSeisouKaisuuKakuninFlg.MaxLength = 1;
                this.columnInsertDt.ReadOnly = true;
                this.columnInsertUser.ReadOnly = true;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.ReadOnly = true;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.ReadOnly = true;
                this.columnUpdateUser.ReadOnly = true;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.ReadOnly = true;
                this.columnUpdateTarm.MaxLength = 20;
                this.columnShokenWd.ReadOnly = true;
                this.columnShokenWd.MaxLength = 160;
                this.columnTaniSochiNm.ReadOnly = true;
                this.columnTaniSochiNm.MaxLength = 60;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrintShokenKekkaListRow NewPrintShokenKekkaListRow() {
                return ((PrintShokenKekkaListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PrintShokenKekkaListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PrintShokenKekkaListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PrintShokenKekkaListRowChanged != null)) {
                    this.PrintShokenKekkaListRowChanged(this, new PrintShokenKekkaListRowChangeEvent(((PrintShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PrintShokenKekkaListRowChanging != null)) {
                    this.PrintShokenKekkaListRowChanging(this, new PrintShokenKekkaListRowChangeEvent(((PrintShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PrintShokenKekkaListRowDeleted != null)) {
                    this.PrintShokenKekkaListRowDeleted(this, new PrintShokenKekkaListRowChangeEvent(((PrintShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PrintShokenKekkaListRowDeleting != null)) {
                    this.PrintShokenKekkaListRowDeleting(this, new PrintShokenKekkaListRowChangeEvent(((PrintShokenKekkaListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePrintShokenKekkaListRow(PrintShokenKekkaListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenKekkaTblDataSet ds = new ShokenKekkaTblDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrintShokenKekkaListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokenKekkaTblRow : global::System.Data.DataRow {
            
            private ShokenKekkaTblDataTable tableShokenKekkaTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokenKekkaTbl = ((ShokenKekkaTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokanIraiHoteiKbn {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokanIraiHoteiKbnColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokanIraiHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiHokenjoCd {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenIraiHokenjoCdColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenIraiHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiNendo {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenIraiNendoColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenIraiNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiRenban {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenIraiRenbanColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenIraiRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenRenban {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.KensaIraiShokenRenbanColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.KensaIraiShokenRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.ShokenKbnColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.ShokenCdColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenHyojiichi {
                get {
                    try {
                        return ((int)(this[this.tableShokenKekkaTbl.ShokenHyojiichiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHyojiichi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHyojiichiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTegaki {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenTegakiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenTegaki\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenTegakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckKomoku {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenCheckKomokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenCheckKomoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenCheckKomokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckHantei {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenCheckHanteiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenCheckHantei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenCheckHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenShitekiKashoNo {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenShitekiKashoNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenSetchishaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHoshuGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisoGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenSeisoGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKojiGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenKojiGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenMakerRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHokenjoRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHokenjoRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuKeiyakuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenHoshuKeiyakuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTenkenKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenTenkenKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'ShokenSeisouKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenKekkaTbl.InsertDtColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.InsertUserColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.InsertTarmColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenKekkaTbl.UpdateDtColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.UpdateUserColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableShokenKekkaTbl.UpdateTarmColumn]));
                }
                set {
                    this[this.tableShokenKekkaTbl.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaniSochiNm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaTbl.TaniSochiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaTbl\' にある列 \'TaniSochiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaTbl.TaniSochiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHyojiichiNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHyojiichiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHyojiichiNull() {
                this[this.tableShokenKekkaTbl.ShokenHyojiichiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTegakiNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenTegakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTegakiNull() {
                this[this.tableShokenKekkaTbl.ShokenTegakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckKomokuNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenCheckKomokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckKomokuNull() {
                this[this.tableShokenKekkaTbl.ShokenCheckKomokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckHanteiNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenCheckHanteiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckHanteiNull() {
                this[this.tableShokenKekkaTbl.ShokenCheckHanteiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenShitekiKashoNoNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenShitekiKashoNoNull() {
                this[this.tableShokenKekkaTbl.ShokenShitekiKashoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSetchishaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSetchishaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenSetchishaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisoGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisoGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKojiGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKojiGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenMakerRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenMakerRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenMakerRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHokenjoRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHokenjoRenrakuFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenHokenjoRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuKeiyakuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuKeiyakuKakuninFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTenkenKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTenkenKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisouKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisouKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaniSochiNmNull() {
                return this.IsNull(this.tableShokenKekkaTbl.TaniSochiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaniSochiNmNull() {
                this[this.tableShokenKekkaTbl.TaniSochiNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokenKekkaListRow : global::System.Data.DataRow {
            
            private ShokenKekkaListDataTable tableShokenKekkaList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenKekkaListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokenKekkaList = ((ShokenKekkaListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokanIraiHoteiKbn {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'KensaIraiShokanIraiHoteiKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiHokenjoCd {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'KensaIraiShokenIraiHokenjoCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiNendo {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenIraiNendoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'KensaIraiShokenIraiNendo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenIraiNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiRenban {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenIraiRenbanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'KensaIraiShokenIraiRenban\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenIraiRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenRenban {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.KensaIraiShokenRenbanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'KensaIraiShokenRenban\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.KensaIraiShokenRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenKbnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenKbn\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenHyojiichi {
                get {
                    try {
                        return ((int)(this[this.tableShokenKekkaList.ShokenHyojiichiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHyojiichi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHyojiichiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTegaki {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenTegakiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenTegaki\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenTegakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckKomoku {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenCheckKomokuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenCheckKomoku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenCheckKomokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckHantei {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenCheckHanteiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenCheckHantei\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenCheckHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenShitekiKashoNo {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenShitekiKashoNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenShitekiKashoNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenShitekiKashoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenSetchishaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHoshuGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisoGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenSeisoGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKojiGyoshaRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenKojiGyoshaRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenMakerRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHokenjoRenrakuFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHokenjoRenrakuFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuKeiyakuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenHoshuKeiyakuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTenkenKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenTenkenKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouKaisuuKakuninFlg {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenSeisouKaisuuKakuninFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableShokenKekkaList.InsertDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'InsertDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.InsertUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'InsertUser\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.InsertTarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'InsertTarm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableShokenKekkaList.UpdateDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'UpdateDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.UpdateUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'UpdateUser\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.UpdateTarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'UpdateTarm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenWd {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.ShokenWdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'ShokenWd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.ShokenWdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaniSochiNm {
                get {
                    try {
                        return ((string)(this[this.tableShokenKekkaList.TaniSochiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'ShokenKekkaList\' にある列 \'TaniSochiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableShokenKekkaList.TaniSochiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokanIraiHoteiKbnNull() {
                return this.IsNull(this.tableShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokanIraiHoteiKbnNull() {
                this[this.tableShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiHokenjoCdNull() {
                return this.IsNull(this.tableShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiHokenjoCdNull() {
                this[this.tableShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiNendoNull() {
                return this.IsNull(this.tableShokenKekkaList.KensaIraiShokenIraiNendoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiNendoNull() {
                this[this.tableShokenKekkaList.KensaIraiShokenIraiNendoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiRenbanNull() {
                return this.IsNull(this.tableShokenKekkaList.KensaIraiShokenIraiRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiRenbanNull() {
                this[this.tableShokenKekkaList.KensaIraiShokenIraiRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenRenbanNull() {
                return this.IsNull(this.tableShokenKekkaList.KensaIraiShokenRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenRenbanNull() {
                this[this.tableShokenKekkaList.KensaIraiShokenRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKbnNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKbnNull() {
                this[this.tableShokenKekkaList.ShokenKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCdNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCdNull() {
                this[this.tableShokenKekkaList.ShokenCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHyojiichiNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHyojiichiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHyojiichiNull() {
                this[this.tableShokenKekkaList.ShokenHyojiichiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTegakiNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenTegakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTegakiNull() {
                this[this.tableShokenKekkaList.ShokenTegakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckKomokuNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenCheckKomokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckKomokuNull() {
                this[this.tableShokenKekkaList.ShokenCheckKomokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckHanteiNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenCheckHanteiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckHanteiNull() {
                this[this.tableShokenKekkaList.ShokenCheckHanteiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenShitekiKashoNoNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenShitekiKashoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenShitekiKashoNoNull() {
                this[this.tableShokenKekkaList.ShokenShitekiKashoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSetchishaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSetchishaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenSetchishaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisoGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisoGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKojiGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKojiGyoshaRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenMakerRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenMakerRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenMakerRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHokenjoRenrakuFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHokenjoRenrakuFlgNull() {
                this[this.tableShokenKekkaList.ShokenHokenjoRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuKeiyakuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuKeiyakuKakuninFlgNull() {
                this[this.tableShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTenkenKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTenkenKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisouKaisuuKakuninFlgNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisouKaisuuKakuninFlgNull() {
                this[this.tableShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertDtNull() {
                return this.IsNull(this.tableShokenKekkaList.InsertDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertDtNull() {
                this[this.tableShokenKekkaList.InsertDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertUserNull() {
                return this.IsNull(this.tableShokenKekkaList.InsertUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertUserNull() {
                this[this.tableShokenKekkaList.InsertUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertTarmNull() {
                return this.IsNull(this.tableShokenKekkaList.InsertTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertTarmNull() {
                this[this.tableShokenKekkaList.InsertTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateDtNull() {
                return this.IsNull(this.tableShokenKekkaList.UpdateDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateDtNull() {
                this[this.tableShokenKekkaList.UpdateDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateUserNull() {
                return this.IsNull(this.tableShokenKekkaList.UpdateUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateUserNull() {
                this[this.tableShokenKekkaList.UpdateUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateTarmNull() {
                return this.IsNull(this.tableShokenKekkaList.UpdateTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateTarmNull() {
                this[this.tableShokenKekkaList.UpdateTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenWdNull() {
                return this.IsNull(this.tableShokenKekkaList.ShokenWdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenWdNull() {
                this[this.tableShokenKekkaList.ShokenWdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaniSochiNmNull() {
                return this.IsNull(this.tableShokenKekkaList.TaniSochiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaniSochiNmNull() {
                this[this.tableShokenKekkaList.TaniSochiNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PrintShokenKekkaListRow : global::System.Data.DataRow {
            
            private PrintShokenKekkaListDataTable tablePrintShokenKekkaList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PrintShokenKekkaListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrintShokenKekkaList = ((PrintShokenKekkaListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokanIraiHoteiKbn {
                get {
                    if (this.IsKensaIraiShokanIraiHoteiKbnNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiHokenjoCd {
                get {
                    if (this.IsKensaIraiShokenIraiHokenjoCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiNendo {
                get {
                    if (this.IsKensaIraiShokenIraiNendoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiNendoColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiNendoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenIraiRenban {
                get {
                    if (this.IsKensaIraiShokenIraiRenbanNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiRenbanColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KensaIraiShokenRenban {
                get {
                    if (this.IsKensaIraiShokenRenbanNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.KensaIraiShokenRenbanColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.KensaIraiShokenRenbanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    if (this.IsShokenKbnNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenKbnColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    if (this.IsShokenCdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenCdColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShokenHyojiichi {
                get {
                    try {
                        return ((int)(this[this.tablePrintShokenKekkaList.ShokenHyojiichiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'ShokenHyojiichi\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenHyojiichiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTegaki {
                get {
                    if (this.IsShokenTegakiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenTegakiColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenTegakiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckKomoku {
                get {
                    if (this.IsShokenCheckKomokuNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenCheckKomokuColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenCheckKomokuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCheckHantei {
                get {
                    if (this.IsShokenCheckHanteiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenCheckHanteiColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenCheckHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenShitekiKashoNo {
                get {
                    if (this.IsShokenShitekiKashoNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenShitekiKashoNoColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenShitekiKashoNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaRenrakuFlg {
                get {
                    if (this.IsShokenSetchishaRenrakuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenSetchishaRenrakuFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenSetchishaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGyoshaRenrakuFlg {
                get {
                    if (this.IsShokenHoshuGyoshaRenrakuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisoGyoshaRenrakuFlg {
                get {
                    if (this.IsShokenSeisoGyoshaRenrakuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKojiGyoshaRenrakuFlg {
                get {
                    if (this.IsShokenKojiGyoshaRenrakuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerRenrakuFlg {
                get {
                    if (this.IsShokenMakerRenrakuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenMakerRenrakuFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenMakerRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHokenjoRenrakuFlg {
                get {
                    if (this.IsShokenHokenjoRenrakuFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenHokenjoRenrakuFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenHokenjoRenrakuFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuKeiyakuKakuninFlg {
                get {
                    if (this.IsShokenHoshuKeiyakuKakuninFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTenkenKaisuuKakuninFlg {
                get {
                    if (this.IsShokenTenkenKaisuuKakuninFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouKaisuuKakuninFlg {
                get {
                    if (this.IsShokenSeisouKaisuuKakuninFlgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrintShokenKekkaList.InsertDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'InsertDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    try {
                        return ((string)(this[this.tablePrintShokenKekkaList.InsertUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'InsertUser\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    try {
                        return ((string)(this[this.tablePrintShokenKekkaList.InsertTarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'InsertTarm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePrintShokenKekkaList.UpdateDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'UpdateDt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    try {
                        return ((string)(this[this.tablePrintShokenKekkaList.UpdateUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'UpdateUser\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    try {
                        return ((string)(this[this.tablePrintShokenKekkaList.UpdateTarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'UpdateTarm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.UpdateTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenWd {
                get {
                    if (this.IsShokenWdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePrintShokenKekkaList.ShokenWdColumn]));
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.ShokenWdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaniSochiNm {
                get {
                    try {
                        return ((string)(this[this.tablePrintShokenKekkaList.TaniSochiNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PrintShokenKekkaList\' にある列 \'TaniSochiNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePrintShokenKekkaList.TaniSochiNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokanIraiHoteiKbnNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokanIraiHoteiKbnNull() {
                this[this.tablePrintShokenKekkaList.KensaIraiShokanIraiHoteiKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiHokenjoCdNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiHokenjoCdNull() {
                this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiHokenjoCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiNendoNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.KensaIraiShokenIraiNendoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiNendoNull() {
                this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiNendoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenIraiRenbanNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.KensaIraiShokenIraiRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenIraiRenbanNull() {
                this[this.tablePrintShokenKekkaList.KensaIraiShokenIraiRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKensaIraiShokenRenbanNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.KensaIraiShokenRenbanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKensaIraiShokenRenbanNull() {
                this[this.tablePrintShokenKekkaList.KensaIraiShokenRenbanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKbnNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenKbnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKbnNull() {
                this[this.tablePrintShokenKekkaList.ShokenKbnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCdNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCdNull() {
                this[this.tablePrintShokenKekkaList.ShokenCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHyojiichiNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenHyojiichiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHyojiichiNull() {
                this[this.tablePrintShokenKekkaList.ShokenHyojiichiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTegakiNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenTegakiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTegakiNull() {
                this[this.tablePrintShokenKekkaList.ShokenTegakiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckKomokuNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenCheckKomokuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckKomokuNull() {
                this[this.tablePrintShokenKekkaList.ShokenCheckKomokuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenCheckHanteiNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenCheckHanteiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenCheckHanteiNull() {
                this[this.tablePrintShokenKekkaList.ShokenCheckHanteiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenShitekiKashoNoNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenShitekiKashoNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenShitekiKashoNoNull() {
                this[this.tablePrintShokenKekkaList.ShokenShitekiKashoNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSetchishaRenrakuFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenSetchishaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSetchishaRenrakuFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenSetchishaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuGyoshaRenrakuFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenHoshuGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisoGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisoGyoshaRenrakuFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenSeisoGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenKojiGyoshaRenrakuFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenKojiGyoshaRenrakuFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenKojiGyoshaRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenMakerRenrakuFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenMakerRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenMakerRenrakuFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenMakerRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHokenjoRenrakuFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenHokenjoRenrakuFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHokenjoRenrakuFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenHokenjoRenrakuFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenHoshuKeiyakuKakuninFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenHoshuKeiyakuKakuninFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenHoshuKeiyakuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenTenkenKaisuuKakuninFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenTenkenKaisuuKakuninFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenTenkenKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenSeisouKaisuuKakuninFlgNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenSeisouKaisuuKakuninFlgNull() {
                this[this.tablePrintShokenKekkaList.ShokenSeisouKaisuuKakuninFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertDtNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.InsertDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertDtNull() {
                this[this.tablePrintShokenKekkaList.InsertDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertUserNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.InsertUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertUserNull() {
                this[this.tablePrintShokenKekkaList.InsertUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsertTarmNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.InsertTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsertTarmNull() {
                this[this.tablePrintShokenKekkaList.InsertTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateDtNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.UpdateDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateDtNull() {
                this[this.tablePrintShokenKekkaList.UpdateDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateUserNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.UpdateUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateUserNull() {
                this[this.tablePrintShokenKekkaList.UpdateUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateTarmNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.UpdateTarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateTarmNull() {
                this[this.tablePrintShokenKekkaList.UpdateTarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShokenWdNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.ShokenWdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShokenWdNull() {
                this[this.tablePrintShokenKekkaList.ShokenWdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaniSochiNmNull() {
                return this.IsNull(this.tablePrintShokenKekkaList.TaniSochiNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaniSochiNmNull() {
                this[this.tablePrintShokenKekkaList.TaniSochiNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokenKekkaTblRowChangeEvent : global::System.EventArgs {
            
            private ShokenKekkaTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRowChangeEvent(ShokenKekkaTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokenKekkaListRowChangeEvent : global::System.EventArgs {
            
            private ShokenKekkaListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRowChangeEvent(ShokenKekkaListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenKekkaListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PrintShokenKekkaListRowChangeEvent : global::System.EventArgs {
            
            private PrintShokenKekkaListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrintShokenKekkaListRowChangeEvent(PrintShokenKekkaListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PrintShokenKekkaListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjTabletSystem.Application.DataSet.SQLCE.ShokenKekkaTblDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokenKekkaTblTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaTblTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokenKekkaTbl";
            tableMapping.ColumnMappings.Add("KensaIraiShokanIraiHoteiKbn", "KensaIraiShokanIraiHoteiKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiHokenjoCd", "KensaIraiShokenIraiHokenjoCd");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiNendo", "KensaIraiShokenIraiNendo");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiRenban", "KensaIraiShokenIraiRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenRenban", "KensaIraiShokenRenban");
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenHyojiichi", "ShokenHyojiichi");
            tableMapping.ColumnMappings.Add("ShokenTegaki", "ShokenTegaki");
            tableMapping.ColumnMappings.Add("ShokenCheckKomoku", "ShokenCheckKomoku");
            tableMapping.ColumnMappings.Add("ShokenCheckHantei", "ShokenCheckHantei");
            tableMapping.ColumnMappings.Add("ShokenShitekiKashoNo", "ShokenShitekiKashoNo");
            tableMapping.ColumnMappings.Add("ShokenSetchishaRenrakuFlg", "ShokenSetchishaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuGyoshaRenrakuFlg", "ShokenHoshuGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisoGyoshaRenrakuFlg", "ShokenSeisoGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenKojiGyoshaRenrakuFlg", "ShokenKojiGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenMakerRenrakuFlg", "ShokenMakerRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHokenjoRenrakuFlg", "ShokenHokenjoRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuKeiyakuKakuninFlg", "ShokenHoshuKeiyakuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenTenkenKaisuuKakuninFlg", "ShokenTenkenKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisouKaisuuKakuninFlg", "ShokenSeisouKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("TaniSochiNm", "TaniSochiNm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ShokenKekkaTbl] WHERE (([KensaIraiShokanIraiHoteiKbn] = @p1) AND ([K" +
                "ensaIraiShokenIraiHokenjoCd] = @p2) AND ([KensaIraiShokenIraiNendo] = @p3) AND (" +
                "[KensaIraiShokenIraiRenban] = @p4) AND ([KensaIraiShokenRenban] = @p5))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ShokenKekkaTbl] ([KensaIraiShokanIraiHoteiKbn], [KensaIraiShokenIraiHokenjoCd], [KensaIraiShokenIraiNendo], [KensaIraiShokenIraiRenban], [KensaIraiShokenRenban], [ShokenKbn], [ShokenCd], [ShokenHyojiichi], [ShokenTegaki], [ShokenCheckKomoku], [ShokenCheckHantei], [ShokenShitekiKashoNo], [ShokenSetchishaRenrakuFlg], [ShokenHoshuGyoshaRenrakuFlg], [ShokenSeisoGyoshaRenrakuFlg], [ShokenKojiGyoshaRenrakuFlg], [ShokenMakerRenrakuFlg], [ShokenHokenjoRenrakuFlg], [ShokenHoshuKeiyakuKakuninFlg], [ShokenTenkenKaisuuKakuninFlg], [ShokenSeisouKaisuuKakuninFlg], [InsertDt], [InsertUser], [InsertTarm], [UpdateDt], [UpdateUser], [UpdateTarm], [TaniSochiNm]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p28", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ShokenKekkaTbl] SET [KensaIraiShokanIraiHoteiKbn] = @p1, [KensaIraiShokenIraiHokenjoCd] = @p2, [KensaIraiShokenIraiNendo] = @p3, [KensaIraiShokenIraiRenban] = @p4, [KensaIraiShokenRenban] = @p5, [ShokenKbn] = @p6, [ShokenCd] = @p7, [ShokenHyojiichi] = @p8, [ShokenTegaki] = @p9, [ShokenCheckKomoku] = @p10, [ShokenCheckHantei] = @p11, [ShokenShitekiKashoNo] = @p12, [ShokenSetchishaRenrakuFlg] = @p13, [ShokenHoshuGyoshaRenrakuFlg] = @p14, [ShokenSeisoGyoshaRenrakuFlg] = @p15, [ShokenKojiGyoshaRenrakuFlg] = @p16, [ShokenMakerRenrakuFlg] = @p17, [ShokenHokenjoRenrakuFlg] = @p18, [ShokenHoshuKeiyakuKakuninFlg] = @p19, [ShokenTenkenKaisuuKakuninFlg] = @p20, [ShokenSeisouKaisuuKakuninFlg] = @p21, [InsertDt] = @p22, [InsertUser] = @p23, [InsertTarm] = @p24, [UpdateDt] = @p25, [UpdateUser] = @p26, [UpdateTarm] = @p27, [TaniSochiNm] = @p28 WHERE (([KensaIraiShokanIraiHoteiKbn] = @p29) AND ([KensaIraiShokenIraiHokenjoCd] = @p30) AND ([KensaIraiShokenIraiNendo] = @p31) AND ([KensaIraiShokenIraiRenban] = @p32) AND ([KensaIraiShokenRenban] = @p33))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHyojiichi", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenTegaki", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenCheckKomoku", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenCheckHantei", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenShitekiKashoNo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenSetchishaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHoshuGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenSeisoGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenKojiGyoshaRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenMakerRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHokenjoRenrakuFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenHoshuKeiyakuKakuninFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenTenkenKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ShokenSeisouKaisuuKakuninFlg", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p28", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TaniSochiNm", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p29", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p30", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p31", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p32", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p33", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenRenban", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::FukjTabletSystem.Properties.Settings.Default.fukjTabletConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT            KensaIraiShokanIraiHoteiKbn, KensaIraiShokenIraiHokenjoCd, KensaIraiShokenIraiNendo, KensaIraiShokenIraiRenban, KensaIraiShokenRenban, ShokenKbn, ShokenCd, ShokenHyojiichi, ShokenTegaki, ShokenCheckKomoku, 
                        ShokenCheckHantei, ShokenShitekiKashoNo, ShokenSetchishaRenrakuFlg, ShokenHoshuGyoshaRenrakuFlg, ShokenSeisoGyoshaRenrakuFlg, ShokenKojiGyoshaRenrakuFlg, ShokenMakerRenrakuFlg, ShokenHokenjoRenrakuFlg, 
                        ShokenHoshuKeiyakuKakuninFlg, ShokenTenkenKaisuuKakuninFlg, ShokenSeisouKaisuuKakuninFlg, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, TaniSochiNm
FROM              ShokenKekkaTbl";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ShokenKekkaTbl.InsertDt, ShokenKekkaTbl.InsertTarm, ShokenKekkaTbl.InsertU" +
                "ser, ShokenKekkaTbl.KensaIraiShokanIraiHoteiKbn, ShokenKekkaTbl.KensaIraiShokenI" +
                "raiHokenjoCd, ShokenKekkaTbl.KensaIraiShokenIraiNendo, ShokenKekkaTbl.KensaIraiS" +
                "hokenIraiRenban, ShokenKekkaTbl.KensaIraiShokenRenban, ShokenKekkaTbl.ShokenCd, " +
                "ShokenKekkaTbl.ShokenCheckHantei, ShokenKekkaTbl.ShokenCheckKomoku, ShokenKekkaT" +
                "bl.ShokenHokenjoRenrakuFlg, ShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlg, ShokenKe" +
                "kkaTbl.ShokenHoshuKeiyakuKakuninFlg, ShokenKekkaTbl.ShokenHyojiichi, ShokenKekka" +
                "Tbl.ShokenKbn, ShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlg, ShokenKekkaTbl.ShokenM" +
                "akerRenrakuFlg, ShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlg, ShokenKekkaTbl.Shoke" +
                "nSeisouKaisuuKakuninFlg, ShokenKekkaTbl.ShokenSetchishaRenrakuFlg, ShokenKekkaTb" +
                "l.ShokenShitekiKashoNo, ShokenKekkaTbl.ShokenTegaki, ShokenKekkaTbl.ShokenTenken" +
                "KaisuuKakuninFlg, ShokenKekkaTbl.TaniSochiNm, ShokenKekkaTbl.UpdateDt, ShokenKek" +
                "kaTbl.UpdateTarm, ShokenKekkaTbl.UpdateUser, ShokenKekkaTbl.TaniSochiNm FROM Sho" +
                "kenKekkaTbl INNER JOIN ShokenMst ON ShokenMst.ShokenKbn = ShokenKekkaTbl.ShokenK" +
                "bn AND ShokenMst.ShokenCd = ShokenKekkaTbl.ShokenCd WHERE (ShokenKekkaTbl.KensaI" +
                "raiShokanIraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn) AND (ShokenKekkaTbl.KensaI" +
                "raiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd) AND (ShokenKekkaTbl.Kens" +
                "aIraiShokenIraiNendo = @KensaIraiShokenIraiNendo) AND (ShokenKekkaTbl.KensaIraiS" +
                "hokenIraiRenban = @KensaIraiShokenIraiRenban) AND (ShokenMst.ShokenTaishoKensaBi" +
                "tMask & @ShokenTaishoKensaBitMask <> 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@ShokenTaishoKensaBitMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[2] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT
	MAX(KensaIraiShokenRenban)
FROM
	ShokenKekkaTbl
WHERE
	ShokenKekkaTbl.KensaIraiShokanIraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn
AND	ShokenKekkaTbl.KensaIraiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd
AND	ShokenKekkaTbl.KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo
AND	ShokenKekkaTbl.KensaIraiShokenIraiRenban = @KensaIraiShokenIraiRenban";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaTblDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKensaIraiAndBitMask(ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable, string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, int ShokenTaishoKensaBitMask) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ShokenTaishoKensaBitMask));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaTblDataTable GetDataByKensaIraiAndBitMask(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, int ShokenTaishoKensaBitMask) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ShokenTaishoKensaBitMask));
            ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaTblDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokenKekkaTblDataSet.ShokenKekkaTblDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokenKekkaTblDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ShokenKekkaTbl");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GetMaxShokenRenbanByKensaIraiKey(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            global::System.Data.SqlServerCe.SqlCeCommand command = this.CommandCollection[2];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                command.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                command.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                command.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                command.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokenKekkaListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenKekkaListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokenKekkaList";
            tableMapping.ColumnMappings.Add("KensaIraiShokanIraiHoteiKbn", "KensaIraiShokanIraiHoteiKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiHokenjoCd", "KensaIraiShokenIraiHokenjoCd");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiNendo", "KensaIraiShokenIraiNendo");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiRenban", "KensaIraiShokenIraiRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenRenban", "KensaIraiShokenRenban");
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenHyojiichi", "ShokenHyojiichi");
            tableMapping.ColumnMappings.Add("ShokenTegaki", "ShokenTegaki");
            tableMapping.ColumnMappings.Add("ShokenCheckKomoku", "ShokenCheckKomoku");
            tableMapping.ColumnMappings.Add("ShokenCheckHantei", "ShokenCheckHantei");
            tableMapping.ColumnMappings.Add("ShokenShitekiKashoNo", "ShokenShitekiKashoNo");
            tableMapping.ColumnMappings.Add("ShokenSetchishaRenrakuFlg", "ShokenSetchishaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuGyoshaRenrakuFlg", "ShokenHoshuGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisoGyoshaRenrakuFlg", "ShokenSeisoGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenKojiGyoshaRenrakuFlg", "ShokenKojiGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenMakerRenrakuFlg", "ShokenMakerRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHokenjoRenrakuFlg", "ShokenHokenjoRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuKeiyakuKakuninFlg", "ShokenHoshuKeiyakuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenTenkenKaisuuKakuninFlg", "ShokenTenkenKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisouKaisuuKakuninFlg", "ShokenSeisouKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ShokenWd", "ShokenWd");
            tableMapping.ColumnMappings.Add("TaniSochiNm", "TaniSochiNm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::FukjTabletSystem.Properties.Settings.Default.fukjTabletConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
	ShokenKekkaTbl.KensaIraiShokanIraiHoteiKbn,
	ShokenKekkaTbl.KensaIraiShokenIraiHokenjoCd,
	ShokenKekkaTbl.KensaIraiShokenIraiNendo,
	ShokenKekkaTbl.KensaIraiShokenIraiRenban,
	ShokenKekkaTbl.KensaIraiShokenRenban,
	ShokenKekkaTbl.ShokenKbn,
	ShokenKekkaTbl.ShokenCd,
	ShokenKekkaTbl.ShokenHyojiichi,
	ShokenKekkaTbl.ShokenTegaki,
	ShokenKekkaTbl.ShokenCheckKomoku, 
	ShokenKekkaTbl.ShokenCheckHantei,
	ShokenKekkaTbl.ShokenShitekiKashoNo,
	ShokenKekkaTbl.ShokenSetchishaRenrakuFlg,
	ShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlg,
	ShokenKekkaTbl.ShokenSeisoGyoshaRenrakuFlg,
	ShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlg,
	ShokenKekkaTbl.ShokenMakerRenrakuFlg,
	ShokenKekkaTbl.ShokenHokenjoRenrakuFlg, 
	ShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlg,
	ShokenKekkaTbl.ShokenTenkenKaisuuKakuninFlg,
	ShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlg,
	ShokenKekkaTbl.InsertDt,
	ShokenKekkaTbl.InsertUser,
	ShokenKekkaTbl.InsertTarm,
	ShokenKekkaTbl.UpdateDt,
	ShokenKekkaTbl.UpdateUser,
	ShokenKekkaTbl.UpdateTarm,
	ShokenMst.ShokenWd,
	ShokenKekkaTbl.TaniSochiNm
FROM
	ShokenKekkaTbl
	INNER JOIN
		ShokenMst ON
	    	ShokenMst.ShokenKbn = ShokenKekkaTbl.ShokenKbn
	AND	ShokenMst.ShokenCd = ShokenKekkaTbl.ShokenCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT\r\n\tShokenKekkaTbl.KensaIraiShokanIraiHoteiKbn,\r\n\tShokenKekkaTbl.KensaIraiSh" +
                "okenIraiHokenjoCd,\r\n\tShokenKekkaTbl.KensaIraiShokenIraiNendo,\r\n\tShokenKekkaTbl.K" +
                "ensaIraiShokenIraiRenban,\r\n\tShokenKekkaTbl.KensaIraiShokenRenban,\r\n\tShokenKekkaT" +
                "bl.ShokenKbn,\r\n\tShokenKekkaTbl.ShokenCd,\r\n\tShokenKekkaTbl.ShokenHyojiichi,\r\n\tSho" +
                "kenKekkaTbl.ShokenTegaki,\r\n\tShokenKekkaTbl.ShokenCheckKomoku, \r\n\tShokenKekkaTbl." +
                "ShokenCheckHantei,\r\n\tShokenKekkaTbl.ShokenShitekiKashoNo,\r\n\tShokenKekkaTbl.Shoke" +
                "nSetchishaRenrakuFlg,\r\n\tShokenKekkaTbl.ShokenHoshuGyoshaRenrakuFlg,\r\n\tShokenKekk" +
                "aTbl.ShokenSeisoGyoshaRenrakuFlg,\r\n\tShokenKekkaTbl.ShokenKojiGyoshaRenrakuFlg,\r\n" +
                "\tShokenKekkaTbl.ShokenMakerRenrakuFlg,\r\n\tShokenKekkaTbl.ShokenHokenjoRenrakuFlg," +
                " \r\n\tShokenKekkaTbl.ShokenHoshuKeiyakuKakuninFlg,\r\n\tShokenKekkaTbl.ShokenTenkenKa" +
                "isuuKakuninFlg,\r\n\tShokenKekkaTbl.ShokenSeisouKaisuuKakuninFlg,\r\n\tShokenKekkaTbl." +
                "InsertDt,\r\n\tShokenKekkaTbl.InsertUser,\r\n\tShokenKekkaTbl.InsertTarm,\r\n\tShokenKekk" +
                "aTbl.UpdateDt,\r\n\tShokenKekkaTbl.UpdateUser,\r\n\tShokenKekkaTbl.UpdateTarm,\r\n\tShoke" +
                "nMst.ShokenWd,\r\n\tShokenKekkaTbl.TaniSochiNm\r\nFROM\r\n\tShokenKekkaTbl\r\n\tINNER JOIN\r" +
                "\n\t\tShokenMst ON\r\n\t    \tShokenMst.ShokenKbn = ShokenKekkaTbl.ShokenKbn\r\n\tAND\tShok" +
                "enMst.ShokenCd = ShokenKekkaTbl.ShokenCd\r\nWHERE\r\n\tShokenKekkaTbl.KensaIraiShokan" +
                "IraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn\r\nAND\tShokenKekkaTbl.KensaIraiShokenI" +
                "raiHokenjoCd = @KensaIraiShokenIraiHokenjoCd\r\nAND\tShokenKekkaTbl.KensaIraiShoken" +
                "IraiNendo = @KensaIraiShokenIraiNendo\r\nAND\tShokenKekkaTbl.KensaIraiShokenIraiRen" +
                "ban = @KensaIraiShokenIraiRenban\r\nAND\t(ShokenMst.ShokenTaishoKensaBitMask & @Sho" +
                "kenTaishoKensaBitMask <> 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@ShokenTaishoKensaBitMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "", global::System.Data.DataRowVersion.Current, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByKensaIraiAndBitMask(ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable, string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, int ShokenTaishoKensaBitMask) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ShokenTaishoKensaBitMask));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ShokenKekkaTblDataSet.ShokenKekkaListDataTable GetDataByKensaIraiAndBitMask(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban, int ShokenTaishoKensaBitMask) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ShokenTaishoKensaBitMask));
            ShokenKekkaTblDataSet.ShokenKekkaListDataTable dataTable = new ShokenKekkaTblDataSet.ShokenKekkaListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PrintShokenKekkaListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PrintShokenKekkaListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PrintShokenKekkaList";
            tableMapping.ColumnMappings.Add("KensaIraiShokanIraiHoteiKbn", "KensaIraiShokanIraiHoteiKbn");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiHokenjoCd", "KensaIraiShokenIraiHokenjoCd");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiNendo", "KensaIraiShokenIraiNendo");
            tableMapping.ColumnMappings.Add("KensaIraiShokenIraiRenban", "KensaIraiShokenIraiRenban");
            tableMapping.ColumnMappings.Add("KensaIraiShokenRenban", "KensaIraiShokenRenban");
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenHyojiichi", "ShokenHyojiichi");
            tableMapping.ColumnMappings.Add("ShokenTegaki", "ShokenTegaki");
            tableMapping.ColumnMappings.Add("ShokenCheckKomoku", "ShokenCheckKomoku");
            tableMapping.ColumnMappings.Add("ShokenCheckHantei", "ShokenCheckHantei");
            tableMapping.ColumnMappings.Add("ShokenShitekiKashoNo", "ShokenShitekiKashoNo");
            tableMapping.ColumnMappings.Add("ShokenSetchishaRenrakuFlg", "ShokenSetchishaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuGyoshaRenrakuFlg", "ShokenHoshuGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisoGyoshaRenrakuFlg", "ShokenSeisoGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenKojiGyoshaRenrakuFlg", "ShokenKojiGyoshaRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenMakerRenrakuFlg", "ShokenMakerRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHokenjoRenrakuFlg", "ShokenHokenjoRenrakuFlg");
            tableMapping.ColumnMappings.Add("ShokenHoshuKeiyakuKakuninFlg", "ShokenHoshuKeiyakuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenTenkenKaisuuKakuninFlg", "ShokenTenkenKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("ShokenSeisouKaisuuKakuninFlg", "ShokenSeisouKaisuuKakuninFlg");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            tableMapping.ColumnMappings.Add("ShokenWd", "ShokenWd");
            tableMapping.ColumnMappings.Add("TaniSochiNm", "TaniSochiNm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::FukjTabletSystem.Properties.Settings.Default.fukjTabletConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT 
		skt.*,
		sm.ShokenWd
		


FROM ShokenKekkaTbl skt 
	
LEFT OUTER JOIN ShokenMst sm ON sm.ShokenKbn = skt.ShokenKbn
							AND sm.ShokenCd = skt.ShokenCd



WHERE 
		skt.KensaIraiShokanIraiHoteiKbn = @KensaIraiShokanIraiHoteiKbn
		AND skt.KensaIraiShokenIraiHokenjoCd = @KensaIraiShokenIraiHokenjoCd
		AND skt.KensaIraiShokenIraiNendo = @KensaIraiShokenIraiNendo
		AND skt.KensaIraiShokenIraiRenban = @KensaIraiShokenIraiRenban

		
ORDER BY skt.ShokenHyojiichi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokanIraiHoteiKbn", global::System.Data.SqlDbType.NVarChar, 1, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokanIraiHoteiKbn", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiHokenjoCd", global::System.Data.SqlDbType.NVarChar, 2, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiHokenjoCd", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiNendo", global::System.Data.SqlDbType.NVarChar, 4, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiNendo", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@KensaIraiShokenIraiRenban", global::System.Data.SqlDbType.NVarChar, 6, global::System.Data.ParameterDirection.Input, true, 0, 0, "KensaIraiShokenIraiRenban", global::System.Data.DataRowVersion.Current, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByCond(ShokenKekkaTblDataSet.PrintShokenKekkaListDataTable dataTable, string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenKekkaTblDataSet.PrintShokenKekkaListDataTable GetDataByCond(string KensaIraiShokanIraiHoteiKbn, string KensaIraiShokenIraiHokenjoCd, string KensaIraiShokenIraiNendo, string KensaIraiShokenIraiRenban) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((KensaIraiShokanIraiHoteiKbn == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokanIraiHoteiKbn");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(KensaIraiShokanIraiHoteiKbn));
            }
            if ((KensaIraiShokenIraiHokenjoCd == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiHokenjoCd");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(KensaIraiShokenIraiHokenjoCd));
            }
            if ((KensaIraiShokenIraiNendo == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiNendo");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(KensaIraiShokenIraiNendo));
            }
            if ((KensaIraiShokenIraiRenban == null)) {
                throw new global::System.ArgumentNullException("KensaIraiShokenIraiRenban");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KensaIraiShokenIraiRenban));
            }
            ShokenKekkaTblDataSet.PrintShokenKekkaListDataTable dataTable = new ShokenKekkaTblDataSet.PrintShokenKekkaListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ShokenKekkaTblTableAdapter _shokenKekkaTblTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ShokenKekkaTblTableAdapter ShokenKekkaTblTableAdapter {
            get {
                return this._shokenKekkaTblTableAdapter;
            }
            set {
                this._shokenKekkaTblTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._shokenKekkaTblTableAdapter != null) 
                            && (this._shokenKekkaTblTableAdapter.Connection != null))) {
                    return this._shokenKekkaTblTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._shokenKekkaTblTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ShokenKekkaTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokenKekkaTblTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ShokenKekkaTbl.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._shokenKekkaTblTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ShokenKekkaTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokenKekkaTblTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ShokenKekkaTbl.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._shokenKekkaTblTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ShokenKekkaTblDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._shokenKekkaTblTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ShokenKekkaTbl.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._shokenKekkaTblTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ShokenKekkaTblDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._shokenKekkaTblTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._shokenKekkaTblTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._shokenKekkaTblTableAdapter != null)) {
                    revertConnections.Add(this._shokenKekkaTblTableAdapter, this._shokenKekkaTblTableAdapter.Connection);
                    this._shokenKekkaTblTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._shokenKekkaTblTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._shokenKekkaTblTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._shokenKekkaTblTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._shokenKekkaTblTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._shokenKekkaTblTableAdapter != null)) {
                    this._shokenKekkaTblTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._shokenKekkaTblTableAdapter]));
                    this._shokenKekkaTblTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591